,index,query,answers,tools
0,456,Perform a database query on the 'orders' table to retrieve orders placed in the last week.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""orders"", ""conditions"": [{""date"": {""$gt"": ""2023-09-20""}}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
1,534,Search for zip codes in Mexico related to the query 'Mexico City'.,"[{""name"": ""search_zip_codes_in_mexico"", ""arguments"": {""q"": ""Mexico City""}}]","[{""name"": ""get_vector_tile"", ""description"": ""Fetches vector tiles based on the OpenMapTiles schema using the provided x, y, and z coordinates."", ""parameters"": {""x"": {""description"": ""The X coordinate of the tile."", ""type"": ""int"", ""default"": ""0""}, ""y"": {""description"": ""The Y coordinate of the tile."", ""type"": ""int"", ""default"": ""0""}, ""z"": {""description"": ""The zoom level of the tile."", ""type"": ""int"", ""default"": ""0""}}}, {""name"": ""geocode"", ""description"": ""Fetch geocoordinates for a given address using the TrueWay Geocoding API."", ""parameters"": {""address"": {""description"": ""The address that you want to geocode."", ""type"": ""str"", ""default"": ""505 Howard St, San Francisco""}, ""language"": {""description"": ""The language in which to return results. Default is 'en'."", ""type"": ""str, optional"", ""default"": ""en""}, ""country"": {""description"": ""The country code to narrow the search results."", ""type"": ""str, optional"", ""default"": """"}, ""bounds"": {""description"": ""The bounding box to narrow the search results."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""reversegeocode"", ""description"": ""Obtain the human-readable address for a given geographical location."", ""parameters"": {""location"": {""description"": ""The latitude and longitude coordinates (comma-separated) for which to obtain the address."", ""type"": ""str"", ""default"": ""37.7879493,-122.3961974""}, ""language"": {""description"": ""The language in which to return results. Defaults to 'en'."", ""type"": ""str, optional"", ""default"": ""en""}}}, {""name"": ""lookup_coordinates"", ""description"": ""Converts US latitude and longitude coordinates into local city information by querying the Reverse Geocode Locator API."", ""parameters"": {""lat"": {""description"": ""The latitude coordinate."", ""type"": ""int"", ""default"": ""40.785091""}, ""long"": {""description"": ""The longitude coordinate."", ""type"": ""str"", ""default"": ""-73.968285""}}}, {""name"": ""local_osm_v1_z_x_y_png"", ""description"": ""Downloads an OpenStreetMap standard tile image for specified coordinates and zoom level."", ""parameters"": {""y"": {""description"": ""y tile number."", ""type"": ""int"", ""default"": ""3""}, ""z"": {""description"": ""Zoom factor between 0 and 19."", ""type"": ""int"", ""default"": ""3""}, ""x"": {""description"": ""x tile number."", ""type"": ""int"", ""default"": ""6""}}}, {""name"": ""search_zip_codes_in_mexico"", ""description"": ""Performs a text search for zip codes in Mexico using the provided query string."", ""parameters"": {""q"": {""description"": ""The search query string to look up zip codes."", ""type"": ""str"", ""default"": ""cerrada san mibuel""}}}]"
2,553,"Simulate a database query for the 'Users' table with conditions {'age': 30, 'city': 'Berlin'} and determine if 2024 is a leap year.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""Users"", ""conditions"": [{""age"": 30, ""city"": ""Berlin""}]}}, {""name"": ""is_leap_year"", ""arguments"": {""year"": 2024}}]","[{""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""is_hotel_available"", ""description"": ""Checks the availability of a hotel for a given date range."", ""parameters"": {""hotel"": {""description"": ""The name of the hotel."", ""type"": ""str""}, ""city"": {""description"": ""The city where the hotel is located."", ""type"": ""str""}, ""checkin"": {""description"": ""The check-in date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}, ""checkout"": {""description"": ""The check-out date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
3,780,"Simulate a database query for table 'users' with conditions {'age': 30, 'city': 'New York'}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": {""age"": 30, ""city"": ""New York""}}}]","[{""name"": ""structural_analysis"", ""description"": ""Performs structural analysis on a building based on its ID, floor numbers, and analysis mode."", ""parameters"": {""building_id"": {""description"": ""The unique identifier of the building."", ""type"": ""str"", ""default"": ""static""}, ""floor_numbers"": {""description"": ""The list of floor numbers to be analyzed."", ""type"": ""List[int]"", ""default"": ""static""}, ""analysis_mode"": {""description"": ""The mode of analysis, either \""static\"" or \""dynamic\"". Defaults to \""static\""."", ""type"": ""str, optional""}}}, {""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}, {""name"": ""project_population"", ""description"": ""Projects the population size after a specified number of years."", ""parameters"": {""current_pop"": {""description"": ""The current population size."", ""type"": ""int"", ""default"": 1.2}, ""num_years"": {""description"": ""The number of years into the future to make the projection."", ""type"": ""int"", ""default"": 1.2}, ""annual_growth"": {""description"": ""The annual population growth rate as a percentage. Defaults to 1.2."", ""type"": ""float, optional""}}}, {""name"": ""project_investment_growth"", ""description"": ""Projects the growth of an investment over a specified number of years."", ""parameters"": {""principal"": {""description"": ""The initial investment amount."", ""type"": ""float"", ""default"": true}, ""annual_addition"": {""description"": ""The amount added to the investment annually."", ""type"": ""float"", ""default"": true}, ""years"": {""description"": ""The number of years to project the investment growth."", ""type"": ""int""}, ""return_rate"": {""description"": ""The annual return rate as a decimal (e.g., 0.07 for 7%)."", ""type"": ""float""}, ""inflation"": {""description"": ""A list of annual inflation rates as decimals."", ""type"": ""List[float]""}, ""inflation_adjusted"": {""description"": ""Whether to adjust the final value for inflation. Defaults to True."", ""type"": ""bool, optional""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}, {""name"": ""calculate_order_total"", ""description"": ""Calculates the total cost of an order based on the items, quantities, and prices."", ""parameters"": {""items"": {""description"": ""A list of item names."", ""type"": ""List[str]""}, ""quantities"": {""description"": ""A list of corresponding quantities for each item."", ""type"": ""List[int]""}, ""prices"": {""description"": ""A list of corresponding prices for each item."", ""type"": ""List[float]""}}}, {""name"": ""get_ip_zipcode"", ""description"": ""Retrieves the ZIP code of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
4,879,Simulate a database query on the 'users' table to find all users who are over 30 years old.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": {"">"": 30}}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""project_population"", ""description"": ""Projects the population size after a specified number of years."", ""parameters"": {""current_pop"": {""description"": ""The current population size."", ""type"": ""int"", ""default"": 1.2}, ""num_years"": {""description"": ""The number of years into the future to make the projection."", ""type"": ""int"", ""default"": 1.2}, ""annual_growth"": {""description"": ""The annual population growth rate as a percentage. Defaults to 1.2."", ""type"": ""float, optional""}}}, {""name"": ""calculate_order_total"", ""description"": ""Calculates the total cost of an order based on the items, quantities, and prices."", ""parameters"": {""items"": {""description"": ""A list of item names."", ""type"": ""List[str]""}, ""quantities"": {""description"": ""A list of corresponding quantities for each item."", ""type"": ""List[int]""}, ""prices"": {""description"": ""A list of corresponding prices for each item."", ""type"": ""List[float]""}}}, {""name"": ""project_investment_growth"", ""description"": ""Projects the growth of an investment over a specified number of years."", ""parameters"": {""principal"": {""description"": ""The initial investment amount."", ""type"": ""float"", ""default"": true}, ""annual_addition"": {""description"": ""The amount added to the investment annually."", ""type"": ""float"", ""default"": true}, ""years"": {""description"": ""The number of years to project the investment growth."", ""type"": ""int""}, ""return_rate"": {""description"": ""The annual return rate as a decimal (e.g., 0.07 for 7%)."", ""type"": ""float""}, ""inflation"": {""description"": ""A list of annual inflation rates as decimals."", ""type"": ""List[float]""}, ""inflation_adjusted"": {""description"": ""Whether to adjust the final value for inflation. Defaults to True."", ""type"": ""bool, optional""}}}, {""name"": ""predict_evolution_rate"", ""description"": ""Predict the evolutionary rate for a specific species for a given timeframe."", ""parameters"": {""species"": {""description"": ""The species that the evolution rate will be predicted for."", ""type"": ""str"", ""default"": ""Darwin""}, ""years"": {""description"": ""Number of years for the prediction."", ""type"": ""int"", ""default"": ""Darwin""}, ""model"": {""description"": ""The model used to make the prediction, options: 'Darwin', 'Lamarck', default is 'Darwin'."", ""type"": ""str""}}}, {""name"": ""structural_analysis"", ""description"": ""Performs structural analysis on a building based on its ID, floor numbers, and analysis mode."", ""parameters"": {""building_id"": {""description"": ""The unique identifier of the building."", ""type"": ""str"", ""default"": ""static""}, ""floor_numbers"": {""description"": ""The list of floor numbers to be analyzed."", ""type"": ""List[int]"", ""default"": ""static""}, ""analysis_mode"": {""description"": ""The mode of analysis, either \""static\"" or \""dynamic\"". Defaults to \""static\""."", ""type"": ""str, optional""}}}, {""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}]"
5,1076,"What will be the total cost of 4 books at $15 each, 2 pens at $2 each, and 1 notebook at $5? Additionally, simulate a database query to locate all records in the 'products' table where the product name starts with 'B'.","[{""name"": ""calculate_order_total"", ""arguments"": {""items"": [""books"", ""pens"", ""notebook""], ""quantities"": [4, 2, 1], ""prices"": [15, 2, 5]}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""products"", ""conditions"": [{""product_name"": {""$regex"": ""^B""}}]}}]","[{""name"": ""calculate_order_total"", ""description"": ""Calculates the total cost of an order based on the items, quantities, and prices."", ""parameters"": {""items"": {""description"": ""A list of item names."", ""type"": ""List[str]""}, ""quantities"": {""description"": ""A list of corresponding quantities for each item."", ""type"": ""List[int]""}, ""prices"": {""description"": ""A list of corresponding prices for each item."", ""type"": ""List[float]""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
6,1148,"Simulate a database query on the 'properties' table where the property type is 'house' and the price is below $200000. Also, what are the public holidays in Spain for the year 2025?","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""properties"", ""conditions"": [{""type"": ""house""}, {""price"": ""<200000""}]}}, {""name"": ""get_holidays_by_year"", ""arguments"": {""year"": 2025, ""country_code"": ""ES""}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""geocode_city"", ""description"": ""Retrieves the latitude and longitude coordinates of a given city using the Maps.co Geocoding API."", ""parameters"": {""city"": {""description"": ""The name of the city."", ""type"": ""str""}}}, {""name"": ""get_holidays_by_year"", ""description"": ""Retrieves the list of public holidays for a given year and country using the Nager.Date API."", ""parameters"": {""year"": {""description"": ""The year for which to retrieve the holidays."", ""type"": ""int""}, ""country_code"": {""description"": ""The two-letter ISO 3166-1 alpha-2 country code."", ""type"": ""str""}}}]"
7,1328,"I need to calculate the total cost of my shopping cart which includes 3 apples at $0.50 each, 2 oranges at $0.75 each, and 4 bananas at $0.25 each. Also, can you simulate a database query to find all records in the 'sales' table where the item is 'apple' and the quantity is greater than 2?","[{""name"": ""calculate_order_total"", ""arguments"": {""items"": [""apples"", ""oranges"", ""bananas""], ""quantities"": [3, 2, 4], ""prices"": [0.5, 0.75, 0.25]}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""sales"", ""conditions"": [{""item"": ""apple"", ""quantity"": {""$gt"": 2}}]}}]","[{""name"": ""calculate_order_total"", ""description"": ""Calculates the total cost of an order based on the items, quantities, and prices."", ""parameters"": {""items"": {""description"": ""A list of item names."", ""type"": ""List[str]""}, ""quantities"": {""description"": ""A list of corresponding quantities for each item."", ""type"": ""List[int]""}, ""prices"": {""description"": ""A list of corresponding prices for each item."", ""type"": ""List[float]""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
8,1376,"Simulate a database query on 'sales' table with conditions: {'product': 'Widget', 'date': {'$gte': '2023-01-01'}}","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""sales"", ""conditions"": [{""product"": ""Widget"", ""date"": {""$gte"": ""2023-01-01""}}]}}]","[{""name"": ""analyze_social_group_dynamics"", ""description"": ""Analyzes the social dynamics within a group based on the personality traits and group size."", ""parameters"": {""total"": {""description"": ""The total group size."", ""type"": ""int""}, ""extroverts"": {""description"": ""The number of extroverted members in the group."", ""type"": ""int""}, ""introverts"": {""description"": ""The number of introverted members in the group."", ""type"": ""int""}}}, {""name"": ""structural_analysis"", ""description"": ""Performs structural analysis on a building based on its ID, floor numbers, and analysis mode."", ""parameters"": {""building_id"": {""description"": ""The unique identifier of the building."", ""type"": ""str"", ""default"": ""static""}, ""floor_numbers"": {""description"": ""The list of floor numbers to be analyzed."", ""type"": ""List[int]"", ""default"": ""static""}, ""analysis_mode"": {""description"": ""The mode of analysis, either \""static\"" or \""dynamic\"". Defaults to \""static\""."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_valid_ip_address"", ""description"": ""Checks if a string is a valid IP address (IPv4)."", ""parameters"": {""ip"": {""description"": ""The string to check."", ""type"": ""str""}}}]"
9,1652,"Simulate a database query for the 'Products' table with conditions {'category': 'Electronics', 'price': 500}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""Products"", ""conditions"": [{""category"": ""Electronics"", ""price"": 500}]}}]","[{""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_hotel_available"", ""description"": ""Checks the availability of a hotel for a given date range."", ""parameters"": {""hotel"": {""description"": ""The name of the hotel."", ""type"": ""str""}, ""city"": {""description"": ""The city where the hotel is located."", ""type"": ""str""}, ""checkin"": {""description"": ""The check-in date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}, ""checkout"": {""description"": ""The check-out date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}}}]"
10,1836,"Simulate a database query on a 'users' table with conditions {'age': 30, 'city': 'New York'} and find the city for ZIP code 90210.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": 30, ""city"": ""New York""}]}}, {""name"": ""get_city_from_zipcode"", ""arguments"": {""zipcode"": ""90210""}}]","[{""name"": ""is_valid_ip_address"", ""description"": ""Checks if a string is a valid IP address (IPv4)."", ""parameters"": {""ip"": {""description"": ""The string to check."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
11,2694,Simulate a database query to find all entries in the 'Customers' table where the 'age' is greater than 30 and the 'city' is 'New York'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""Customers"", ""conditions"": [{""age"": "">"", ""value"": 30}, {""city"": ""="", ""value"": ""New York""}]}}]","[{""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_hotel_available"", ""description"": ""Checks the availability of a hotel for a given date range."", ""parameters"": {""hotel"": {""description"": ""The name of the hotel."", ""type"": ""str""}, ""city"": {""description"": ""The city where the hotel is located."", ""type"": ""str""}, ""checkin"": {""description"": ""The check-in date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}, ""checkout"": {""description"": ""The check-out date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}}}]"
12,3106,Simulate a database query on 'users' table with conditions: age > 30 and city = 'New York'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": "">"", ""value"": 30}, {""city"": ""="", ""value"": ""New York""}]}}]","[{""name"": ""get_pokemon_move_info"", ""description"": ""Retrieves information about a Pok\u00e9mon's move using the Pok\u00e9API."", ""parameters"": {""pokemon_name"": {""description"": ""The name of the Pok\u00e9mon."", ""type"": ""str"", ""default"": ""run""}, ""move_name"": {""description"": ""The name of the move to check. Defaults to \""run\""."", ""type"": ""str, optional"", ""default"": ""run""}}}, {""name"": ""calculate_calorie_intake"", ""description"": ""Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals."", ""parameters"": {""weight_kg"": {""description"": ""Body weight in kilograms."", ""type"": ""float""}, ""height_cm"": {""description"": ""Height in centimeters."", ""type"": ""float""}, ""age"": {""description"": ""Age in years."", ""type"": ""int""}, ""sex"": {""description"": ""Biological sex, either 'male' or 'female'."", ""type"": ""str""}, ""activity_level"": {""description"": ""Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active)."", ""type"": ""int""}, ""goal"": {""description"": ""Fitness goal, either 'lose', 'maintain', or 'gain'."", ""type"": ""str""}}}, {""name"": ""project_population"", ""description"": ""Projects the population size after a specified number of years."", ""parameters"": {""current_pop"": {""description"": ""The current population size."", ""type"": ""int"", ""default"": 1.2}, ""num_years"": {""description"": ""The number of years into the future to make the projection."", ""type"": ""int"", ""default"": 1.2}, ""annual_growth"": {""description"": ""The annual population growth rate as a percentage. Defaults to 1.2."", ""type"": ""float, optional""}}}, {""name"": ""analyze_social_group_dynamics"", ""description"": ""Analyzes the social dynamics within a group based on the personality traits and group size."", ""parameters"": {""total"": {""description"": ""The total group size."", ""type"": ""int""}, ""extroverts"": {""description"": ""The number of extroverted members in the group."", ""type"": ""int""}, ""introverts"": {""description"": ""The number of introverted members in the group."", ""type"": ""int""}}}, {""name"": ""geocode_city"", ""description"": ""Retrieves the latitude and longitude coordinates of a given city using the Maps.co Geocoding API."", ""parameters"": {""city"": {""description"": ""The name of the city."", ""type"": ""str""}}}, {""name"": ""structural_analysis"", ""description"": ""Performs structural analysis on a building based on its ID, floor numbers, and analysis mode."", ""parameters"": {""building_id"": {""description"": ""The unique identifier of the building."", ""type"": ""str"", ""default"": ""static""}, ""floor_numbers"": {""description"": ""The list of floor numbers to be analyzed."", ""type"": ""List[int]"", ""default"": ""static""}, ""analysis_mode"": {""description"": ""The mode of analysis, either \""static\"" or \""dynamic\"". Defaults to \""static\""."", ""type"": ""str, optional""}}}, {""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
13,3721,"Calculate the total for my order which includes 5 shirts at $20 each and 3 pants at $30 each. Also, simulate a database query to see if there are any available sizes in stock for these items.","[{""name"": ""calculate_order_total"", ""arguments"": {""items"": [""shirts"", ""pants""], ""quantities"": [5, 3], ""prices"": [20, 30]}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""inventory"", ""conditions"": [{""item"": ""shirts"", ""size_condition"": "">= M""}, {""item"": ""pants"", ""size_condition"": "">= 32""}]}}]","[{""name"": ""calculate_order_total"", ""description"": ""Calculates the total cost of an order based on the items, quantities, and prices."", ""parameters"": {""items"": {""description"": ""A list of item names."", ""type"": ""List[str]""}, ""quantities"": {""description"": ""A list of corresponding quantities for each item."", ""type"": ""List[int]""}, ""prices"": {""description"": ""A list of corresponding prices for each item."", ""type"": ""List[float]""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
14,3875,"Simulate a database query on the 'Products' table with conditions {'price': 100, 'category': 'Electronics'} and verify if 1600 was a leap year.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""Products"", ""conditions"": [{""price"": 100, ""category"": ""Electronics""}]}}, {""name"": ""is_leap_year"", ""arguments"": {""year"": 1600}}]","[{""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""is_hotel_available"", ""description"": ""Checks the availability of a hotel for a given date range."", ""parameters"": {""hotel"": {""description"": ""The name of the hotel."", ""type"": ""str""}, ""city"": {""description"": ""The city where the hotel is located."", ""type"": ""str""}, ""checkin"": {""description"": ""The check-in date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}, ""checkout"": {""description"": ""The check-out date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
15,4321,Simulate a database query for the 'users' table where the 'age' is greater than 30 and the 'country' is 'USA'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": "">30""}, {""country"": ""USA""}]}}]","[{""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
16,4402,Can you autocomplete the search query 'San Fran' and provide the weather forecast for the resulting location for the next 3 days?,"[{""name"": ""search_autocomplete_api"", ""arguments"": {""q"": ""San Fran""}}, {""name"": ""forecast_weather_api"", ""arguments"": {""q"": ""San Francisco"", ""days"": 3}}]","[{""name"": ""forecast_weather_api"", ""description"": ""Fetches weather forecast and alerts from a weather API."", ""parameters"": {""q"": {""description"": ""Query parameter to specify the location. It can be:"", ""type"": ""str"", ""default"": ""London""}, ""days"": {""description"": ""Number of days of weather forecast required, with a default of 3 days."", ""type"": ""int, optional"", ""default"": ""3""}, ""dt"": {""description"": ""Specific date for the forecast in 'yyyy-MM-dd' format. Must be between today and the next 10 days."", ""type"": ""str, optional"", ""default"": """"}, ""lang"": {""description"": ""Desired language for the 'condition:text' field in the response."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""get_tides_for_a_station"", ""description"": ""Retrieves tide information for a specified station ID on a given date using the RapidAPI NOAA Tides service."", ""parameters"": {""is_id"": {""description"": ""The ID of the tide station to get information for."", ""type"": ""str"", ""default"": ""9411340""}, ""date"": {""description"": ""The date for which to retrieve tide information in YYYYMMDD format. Defaults to '20220625'."", ""type"": ""str, optional"", ""default"": ""20220625""}}}, {""name"": ""rapidapigetforecasthourlybycoordinates"", ""description"": ""Gets hourly weather forecast information for given geographical coordinates using the RapidAPI service."", ""parameters"": {""latitude"": {""description"": ""The latitude of the geographical location."", ""type"": ""int"", ""default"": 46.95828}, ""longitude"": {""description"": ""The longitude of the geographical location."", ""type"": ""int"", ""default"": 10.87152}}}, {""name"": ""ip_lookup_api"", ""description"": ""Fetches detailed information for a given IP address using the WeatherAPI."", ""parameters"": {""q"": {""description"": ""The IP address to look up. Can also be 'auto:ip' to auto-detect the IP address."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""search_autocomplete_api"", ""description"": ""Search or Autocomplete API returns matching cities and towns based on the query."", ""parameters"": {""q"": {""description"": ""Query parameter used to obtain matching locations. Supported formats include:"", ""type"": ""str"", ""default"": """"}}}, {""name"": ""alerts_active_region_region"", ""description"": ""Fetches a list of active weather alerts for a specific region from the National Weather Service API in CAP-ATOM format."", ""parameters"": {""region"": {""description"": ""A valid region code for which to retrieve active alerts. Refer to the API documentation for a list of valid region codes."", ""type"": ""str"", ""default"": """"}}}]"
17,4533,Simulate a database query for a 'users' table with conditions: age > 30 and city = 'New York'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": "">"", ""value"": 30}, {""city"": ""="", ""value"": ""New York""}]}}]","[{""name"": ""project_population"", ""description"": ""Projects the population size after a specified number of years."", ""parameters"": {""current_pop"": {""description"": ""The current population size."", ""type"": ""int"", ""default"": 1.2}, ""num_years"": {""description"": ""The number of years into the future to make the projection."", ""type"": ""int"", ""default"": 1.2}, ""annual_growth"": {""description"": ""The annual population growth rate as a percentage. Defaults to 1.2."", ""type"": ""float, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_valid_email"", ""description"": ""Checks if an email address is valid."", ""parameters"": {""email"": {""description"": ""The email address to validate."", ""type"": ""str""}}}, {""name"": ""place_safeway_order"", ""description"": ""Order specified items from a Safeway location."", ""parameters"": {""location"": {""description"": ""The location of the Safeway store, e.g., 'Palo Alto, CA'."", ""type"": ""str""}, ""items"": {""description"": ""List of items to order."", ""type"": ""list""}, ""quantity"": {""description"": ""Quantity of each item in the order list."", ""type"": ""list""}}}, {""name"": ""get_ip_zipcode"", ""description"": ""Retrieves the ZIP code of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}, {""name"": ""structural_analysis"", ""description"": ""Performs structural analysis on a building based on its ID, floor numbers, and analysis mode."", ""parameters"": {""building_id"": {""description"": ""The unique identifier of the building."", ""type"": ""str"", ""default"": ""static""}, ""floor_numbers"": {""description"": ""The list of floor numbers to be analyzed."", ""type"": ""List[int]"", ""default"": ""static""}, ""analysis_mode"": {""description"": ""The mode of analysis, either \""static\"" or \""dynamic\"". Defaults to \""static\""."", ""type"": ""str, optional""}}}, {""name"": ""geocode_city"", ""description"": ""Retrieves the latitude and longitude coordinates of a given city using the Maps.co Geocoding API."", ""parameters"": {""city"": {""description"": ""The name of the city."", ""type"": ""str""}}}]"
18,4539,What are the search suggestions for the query 'meditation techniques' on YouTube?,"[{""name"": ""search_suggestions"", ""arguments"": {""q"": ""meditation techniques""}}]","[{""name"": ""shows_id"", ""description"": ""Fetch metadata associated with the specified show from the given platform."", ""parameters"": {""platform"": {""description"": ""Source platform for the show. Possible values are 'ios', 'android', 'androidtv', 'web'."", ""type"": ""str"", ""default"": ""web""}, ""is_id"": {""description"": ""The ID of the show. Can also be a TMDB ID."", ""type"": ""str"", ""default"": ""82856""}, ""region"": {""description"": ""Region to retrieve the sources' deep link from. Default is 'US'. Possible values are 'US', 'FR'."", ""type"": ""str, optional"", ""default"": ""US""}}}, {""name"": ""search_video_list_by_keywords"", ""description"": ""Search for videos on TikTok by specified keywords and additional filtering options."", ""parameters"": {""keywords"": {""description"": ""Keywords to search videos for."", ""type"": ""str"", ""default"": ""\u8e0a\u3063\u3066\u307f\u305f""}, ""sort_type"": {""description"": ""Criterion for sorting results. Defaults to '0'."", ""type"": ""str, optional"", ""default"": ""0""}, ""publish_time"": {""description"": ""Time filter for when videos were posted. Defaults to '0'."", ""type"": ""str, optional"", ""default"": ""0""}, ""cursor"": {""description"": ""Pagination cursor for navigating results. Defaults to '0'."", ""type"": ""str, optional"", ""default"": ""0""}, ""region"": {""description"": ""ISO region code to filter results by location. Defaults to 'US'."", ""type"": ""str, optional"", ""default"": ""US""}, ""count"": {""description"": ""Number of results to retrieve. Defaults to '10'."", ""type"": ""str, optional"", ""default"": ""10""}}}, {""name"": ""search_suggestions"", ""description"": ""Fetches search suggestions for a given query using the Cheap YouTube API through RapidAPI."", ""parameters"": {""q"": {""description"": ""The search query for which to fetch suggestions."", ""type"": ""str"", ""default"": ""crypto""}}}]"
19,4703,What are the auto-complete suggestions for the query 'Apple' in the market context?,"[{""name"": ""market_auto_complete"", ""arguments"": {""query"": ""Apple""}}]","[{""name"": ""typical_price"", ""description"": ""Fetches the Typical Price Indicator for a given market, exchange, symbol, and interval."", ""parameters"": {""market"": {""description"": ""The market type. Available options are 'spot', 'usdt-perpetual', and 'inverse-perpetual'."", ""type"": ""str"", ""default"": ""spot""}, ""exchange"": {""description"": ""The exchange name."", ""type"": ""str"", ""default"": ""binance""}, ""symbol"": {""description"": ""The symbol representing the security (e.g., \""BTCUSD\"")."", ""type"": ""str"", ""default"": ""btcusdt""}, ""interval"": {""description"": ""The interval for which the typical price is calculated (e.g., '1m', '5m', '1h')."", ""type"": ""str"", ""default"": ""1m""}, ""backtracks"": {""description"": ""The number of intervals back to retrieve. Default is 1."", ""type"": ""int, optional"", ""default"": ""1""}, ""length"": {""description"": ""The number of periods used in calculating the typical price. Default is 18."", ""type"": ""int, optional"", ""default"": ""18""}, ""is_from"": {""description"": ""The start time in Unix timestamp format. Default is '1683895800'."", ""type"": ""str, optional"", ""default"": ""1683895800""}}}, {""name"": ""specific_transactions"", ""description"": ""Fetch detailed information about a specific cryptocurrency transaction using the provided hash and symbol."", ""parameters"": {""hash"": {""description"": ""The transaction hash used to uniquely identify the cryptocurrency transaction."", ""type"": ""str"", ""default"": ""ac6f1a0b388e2814f2e2036c7c81524cfae7e3432a8e503fe5d07ebb453ee310""}, ""symbol"": {""description"": ""The symbol of the cryptocurrency (e.g., BTC, ETH) for which the transaction information is to be retrieved."", ""type"": ""str"", ""default"": ""btc""}}}, {""name"": ""get_coin_modifiers"", ""description"": ""Fetches the modifiers of a coin's supply and their balance using the CoinRanking API."", ""parameters"": {""uuid"": {""description"": ""The UUID of the coin for which to request the modifiers."", ""type"": ""str"", ""default"": ""Qwsogvtv82FCd""}, ""offset"": {""description"": ""Offset for pagination. Default is 0."", ""type"": ""int, optional"", ""default"": ""0""}, ""limit"": {""description"": ""Limit for pagination. Default is 50. Must be in the range 0-100."", ""type"": ""int, optional"", ""default"": ""50""}}}, {""name"": ""market_auto_complete"", ""description"": ""Fetches market auto-complete suggestions based on a query term or phrase."", ""parameters"": {""query"": {""description"": ""The query term or phrase for which to get auto-complete suggestions."", ""type"": ""str"", ""default"": ""apple""}}}]"
20,5013,"Simulate querying the 'sales' table with conditions: item='laptop', price>1000.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""sales"", ""conditions"": [{""item"": ""laptop"", ""price"": {""$gt"": 1000}}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""calculate_order_total"", ""description"": ""Calculates the total cost of an order based on the items, quantities, and prices."", ""parameters"": {""items"": {""description"": ""A list of item names."", ""type"": ""List[str]""}, ""quantities"": {""description"": ""A list of corresponding quantities for each item."", ""type"": ""List[int]""}, ""prices"": {""description"": ""A list of corresponding prices for each item."", ""type"": ""List[float]""}}}, {""name"": ""predict_forest_area"", ""description"": ""Predicts the change in forest area over a specified number of years."", ""parameters"": {""location"": {""description"": ""The geographic location for the prediction."", ""type"": ""str""}, ""num_years"": {""description"": ""The number of years into the future to make the prediction."", ""type"": ""int""}, ""include_humans"": {""description"": ""Whether to include the impact of human activities in the prediction. Defaults to False."", ""type"": ""bool, optional""}}}, {""name"": ""is_valid_email"", ""description"": ""Checks if an email address is valid."", ""parameters"": {""email"": {""description"": ""The email address to validate."", ""type"": ""str""}}}, {""name"": ""calculate_calorie_intake"", ""description"": ""Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals."", ""parameters"": {""weight_kg"": {""description"": ""Body weight in kilograms."", ""type"": ""float""}, ""height_cm"": {""description"": ""Height in centimeters."", ""type"": ""float""}, ""age"": {""description"": ""Age in years."", ""type"": ""int""}, ""sex"": {""description"": ""Biological sex, either 'male' or 'female'."", ""type"": ""str""}, ""activity_level"": {""description"": ""Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active)."", ""type"": ""int""}, ""goal"": {""description"": ""Fitness goal, either 'lose', 'maintain', or 'gain'."", ""type"": ""str""}}}]"
21,5167,Query the 'customers' table in a database for users who have made more than 5 purchases.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""customers"", ""conditions"": [{""purchases"": {""$gt"": 5}}]}}]","[{""name"": ""whole_foods_order"", ""description"": ""Places an order at Whole Foods."", ""parameters"": {""store_location"": {""description"": ""The location of the Whole Foods store."", ""type"": ""str""}, ""item_list"": {""description"": ""A list of items to order."", ""type"": ""list""}, ""order_size"": {""description"": ""The size of the order. Allowed values: \""small\"", \""medium\"", or \""large\""."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""calculate_calorie_intake"", ""description"": ""Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals."", ""parameters"": {""weight_kg"": {""description"": ""Body weight in kilograms."", ""type"": ""float""}, ""height_cm"": {""description"": ""Height in centimeters."", ""type"": ""float""}, ""age"": {""description"": ""Age in years."", ""type"": ""int""}, ""sex"": {""description"": ""Biological sex, either 'male' or 'female'."", ""type"": ""str""}, ""activity_level"": {""description"": ""Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active)."", ""type"": ""int""}, ""goal"": {""description"": ""Fitness goal, either 'lose', 'maintain', or 'gain'."", ""type"": ""str""}}}]"
22,5271,Simulate a database query for the 'users' table where age is greater than 30 and location is 'New York'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": "">30""}, {""location"": ""New York""}]}}]","[{""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""is_hotel_available"", ""description"": ""Checks the availability of a hotel for a given date range."", ""parameters"": {""hotel"": {""description"": ""The name of the hotel."", ""type"": ""str""}, ""city"": {""description"": ""The city where the hotel is located."", ""type"": ""str""}, ""checkin"": {""description"": ""The check-in date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}, ""checkout"": {""description"": ""The check-out date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
23,5295,"Simulate a database query on the 'Orders' table where the conditions are that the order date is after January 1, 2022, and the order amount is less than $100.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""Orders"", ""conditions"": [{""order_date"": "">"", ""value"": ""2022-01-01""}, {""order_amount"": ""<"", ""value"": 100}]}}]","[{""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
24,5353,Simulate a database query on the 'Customers' table where the conditions are that the customer's age is greater than 30 and their city is 'New York'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""Customers"", ""conditions"": [{""age"": "">"", ""value"": 30}, {""city"": ""="", ""value"": ""New York""}]}}]","[{""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
25,5910,"Can you send a request to the Echo API with header 'custom' and query 'test'? Also, generate a QR code for the URL 'https://www.example.com'.","[{""name"": ""echo"", ""arguments"": {""header1"": ""custom"", ""query2"": ""test""}}, {""name"": ""qr_code_endpoint"", ""arguments"": {""url"": ""https://www.example.com""}}]","[{""name"": ""echo"", ""description"": ""Sends a GET request to the Echo API with specific headers and query parameters."", ""parameters"": {""header1"": {""description"": ""The first header to include in the request. Defaults to '1'."", ""type"": ""str, optional"", ""default"": ""1""}, ""query2"": {""description"": ""The second query parameter to include in the request. Defaults to '2'."", ""type"": ""str, optional"", ""default"": ""2""}}}, {""name"": ""qr_code_endpoint"", ""description"": ""Generates a QR code for a given URL using the Toolbench RapidAPI service."", ""parameters"": {""url"": {""description"": ""The URL to be encoded in the QR code. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}]"
26,5967,"Simulate a database query to find all records in the 'Customers' table where the 'City' is 'New York' and the 'Age' is greater than 30. Additionally, project the growth of an investment with an initial principal of $10000, annual addition of $5000, over 5 years with a return rate of 5% and annual inflation rates of [2%, 2.5%, 3%, 3.5%, 4%].","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""Customers"", ""conditions"": [{""City"": ""New York""}, {""Age"": {""$gt"": 30}}]}}, {""name"": ""project_investment_growth"", ""arguments"": {""principal"": 10000, ""annual_addition"": 5000, ""years"": 5, ""return_rate"": 0.05, ""inflation"": [0.02, 0.025, 0.03, 0.035, 0.04]}}]","[{""name"": ""predict_forest_area"", ""description"": ""Predicts the change in forest area over a specified number of years."", ""parameters"": {""location"": {""description"": ""The geographic location for the prediction."", ""type"": ""str""}, ""num_years"": {""description"": ""The number of years into the future to make the prediction."", ""type"": ""int""}, ""include_humans"": {""description"": ""Whether to include the impact of human activities in the prediction. Defaults to False."", ""type"": ""bool, optional""}}}, {""name"": ""get_holidays_by_year"", ""description"": ""Retrieves the list of public holidays for a given year and country using the Nager.Date API."", ""parameters"": {""year"": {""description"": ""The year for which to retrieve the holidays."", ""type"": ""int""}, ""country_code"": {""description"": ""The two-letter ISO 3166-1 alpha-2 country code."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""project_investment_growth"", ""description"": ""Projects the growth of an investment over a specified number of years."", ""parameters"": {""principal"": {""description"": ""The initial investment amount."", ""type"": ""float"", ""default"": true}, ""annual_addition"": {""description"": ""The amount added to the investment annually."", ""type"": ""float"", ""default"": true}, ""years"": {""description"": ""The number of years to project the investment growth."", ""type"": ""int""}, ""return_rate"": {""description"": ""The annual return rate as a decimal (e.g., 0.07 for 7%)."", ""type"": ""float""}, ""inflation"": {""description"": ""A list of annual inflation rates as decimals."", ""type"": ""List[float]""}, ""inflation_adjusted"": {""description"": ""Whether to adjust the final value for inflation. Defaults to True."", ""type"": ""bool, optional""}}}, {""name"": ""get_dna_sequence"", ""description"": ""Retrieves the DNA sequence for a given sequence ID from the NCBI Nucleotide database."", ""parameters"": {""sequence_id"": {""description"": ""The unique identifier for the DNA sequence."", ""type"": ""str"", ""default"": ""fasta""}, ""file_format"": {""description"": ""The format of the returned sequence. Allowed values: \""fasta\"" (default) or \""gb\""."", ""type"": ""str, optional""}, ""upstream_bases"": {""description"": ""The number of bases upstream of the sequence to include. Defaults to 0."", ""type"": ""int, optional"", ""default"": ""fasta""}}}, {""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}]"
27,6048,Simulate a database query for products with price > 100 and category = 'Electronics'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""products"", ""conditions"": [{""price"": "">100""}, {""category"": ""Electronics""}]}}]","[{""name"": ""geocode_city"", ""description"": ""Retrieves the latitude and longitude coordinates of a given city using the Maps.co Geocoding API."", ""parameters"": {""city"": {""description"": ""The name of the city."", ""type"": ""str""}}}, {""name"": ""get_holidays_by_year"", ""description"": ""Retrieves the list of public holidays for a given year and country using the Nager.Date API."", ""parameters"": {""year"": {""description"": ""The year for which to retrieve the holidays."", ""type"": ""int""}, ""country_code"": {""description"": ""The two-letter ISO 3166-1 alpha-2 country code."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
28,6260,"What are the coordinates of Los Angeles? Additionally, simulate a database query on the 'inventory' table where the quantity is less than 10 and the item is 'Apples'.","[{""name"": ""geocode_city"", ""arguments"": {""city"": ""Los Angeles""}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""inventory"", ""conditions"": [{""quantity"": ""<10""}, {""item"": ""Apples""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""geocode_city"", ""description"": ""Retrieves the latitude and longitude coordinates of a given city using the Maps.co Geocoding API."", ""parameters"": {""city"": {""description"": ""The name of the city."", ""type"": ""str""}}}, {""name"": ""get_holidays_by_year"", ""description"": ""Retrieves the list of public holidays for a given year and country using the Nager.Date API."", ""parameters"": {""year"": {""description"": ""The year for which to retrieve the holidays."", ""type"": ""int""}, ""country_code"": {""description"": ""The two-letter ISO 3166-1 alpha-2 country code."", ""type"": ""str""}}}]"
29,6272,"Can you simulate a database query for the 'sales' table with conditions that include 'product_id = 123' and 'date > 2023-01-01'? Also, retrieve the coordinates for New York City.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""sales"", ""conditions"": [{""product_id"": 123}, {""date"": ""2023-01-01""}]}}, {""name"": ""geocode_city"", ""arguments"": {""city"": ""New York City""}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""geocode_city"", ""description"": ""Retrieves the latitude and longitude coordinates of a given city using the Maps.co Geocoding API."", ""parameters"": {""city"": {""description"": ""The name of the city."", ""type"": ""str""}}}, {""name"": ""project_investment_growth"", ""description"": ""Projects the growth of an investment over a specified number of years."", ""parameters"": {""principal"": {""description"": ""The initial investment amount."", ""type"": ""float"", ""default"": true}, ""annual_addition"": {""description"": ""The amount added to the investment annually."", ""type"": ""float"", ""default"": true}, ""years"": {""description"": ""The number of years to project the investment growth."", ""type"": ""int""}, ""return_rate"": {""description"": ""The annual return rate as a decimal (e.g., 0.07 for 7%)."", ""type"": ""float""}, ""inflation"": {""description"": ""A list of annual inflation rates as decimals."", ""type"": ""List[float]""}, ""inflation_adjusted"": {""description"": ""Whether to adjust the final value for inflation. Defaults to True."", ""type"": ""bool, optional""}}}, {""name"": ""place_safeway_order"", ""description"": ""Order specified items from a Safeway location."", ""parameters"": {""location"": {""description"": ""The location of the Safeway store, e.g., 'Palo Alto, CA'."", ""type"": ""str""}, ""items"": {""description"": ""List of items to order."", ""type"": ""list""}, ""quantity"": {""description"": ""Quantity of each item in the order list."", ""type"": ""list""}}}]"
30,6286,Simulate querying a database for a table named 'inventory' with conditions that include 'quantity < 10' and 'category = 'electronics''.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""inventory"", ""conditions"": [{""quantity"": ""< 10""}, {""category"": ""electronics""}]}}]","[{""name"": ""whole_foods_order"", ""description"": ""Places an order at Whole Foods."", ""parameters"": {""store_location"": {""description"": ""The location of the Whole Foods store."", ""type"": ""str""}, ""item_list"": {""description"": ""A list of items to order."", ""type"": ""list""}, ""order_size"": {""description"": ""The size of the order. Allowed values: \""small\"", \""medium\"", or \""large\""."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""calculate_calorie_intake"", ""description"": ""Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals."", ""parameters"": {""weight_kg"": {""description"": ""Body weight in kilograms."", ""type"": ""float""}, ""height_cm"": {""description"": ""Height in centimeters."", ""type"": ""float""}, ""age"": {""description"": ""Age in years."", ""type"": ""int""}, ""sex"": {""description"": ""Biological sex, either 'male' or 'female'."", ""type"": ""str""}, ""activity_level"": {""description"": ""Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active)."", ""type"": ""int""}, ""goal"": {""description"": ""Fitness goal, either 'lose', 'maintain', or 'gain'."", ""type"": ""str""}}}]"
31,6336,"Simulate a database query for the 'Customers' table with conditions {'name': 'John', 'age': 30}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""Customers"", ""conditions"": [{""name"": ""John"", ""age"": 30}]}}]","[{""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_hotel_available"", ""description"": ""Checks the availability of a hotel for a given date range."", ""parameters"": {""hotel"": {""description"": ""The name of the hotel."", ""type"": ""str""}, ""city"": {""description"": ""The city where the hotel is located."", ""type"": ""str""}, ""checkin"": {""description"": ""The check-in date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}, ""checkout"": {""description"": ""The check-out date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}}}]"
32,6566,Simulate a database query for the 'customers' table where the 'age' is less than 30 and 'country' is 'USA'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""customers"", ""conditions"": [{""age"": {""$lt"": 30}}, {""country"": ""USA""}]}}]","[{""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}]"
33,6846,"Simulate a database query on a 'users' table with conditions {'age': 30, 'city': 'New York'} and {'age': 25, 'city': 'Los Angeles'}","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": 30, ""city"": ""New York""}, {""age"": 25, ""city"": ""Los Angeles""}]}}]","[{""name"": ""get_dna_sequence"", ""description"": ""Retrieves the DNA sequence for a given sequence ID from the NCBI Nucleotide database."", ""parameters"": {""sequence_id"": {""description"": ""The unique identifier for the DNA sequence."", ""type"": ""str"", ""default"": ""fasta""}, ""file_format"": {""description"": ""The format of the returned sequence. Allowed values: \""fasta\"" (default) or \""gb\""."", ""type"": ""str, optional""}, ""upstream_bases"": {""description"": ""The number of bases upstream of the sequence to include. Defaults to 0."", ""type"": ""int, optional"", ""default"": ""fasta""}}}, {""name"": ""get_ip_zipcode"", ""description"": ""Retrieves the ZIP code of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""structural_analysis"", ""description"": ""Performs structural analysis on a building based on its ID, floor numbers, and analysis mode."", ""parameters"": {""building_id"": {""description"": ""The unique identifier of the building."", ""type"": ""str"", ""default"": ""static""}, ""floor_numbers"": {""description"": ""The list of floor numbers to be analyzed."", ""type"": ""List[int]"", ""default"": ""static""}, ""analysis_mode"": {""description"": ""The mode of analysis, either \""static\"" or \""dynamic\"". Defaults to \""static\""."", ""type"": ""str, optional""}}}, {""name"": ""whole_foods_order"", ""description"": ""Places an order at Whole Foods."", ""parameters"": {""store_location"": {""description"": ""The location of the Whole Foods store."", ""type"": ""str""}, ""item_list"": {""description"": ""A list of items to order."", ""type"": ""list""}, ""order_size"": {""description"": ""The size of the order. Allowed values: \""small\"", \""medium\"", or \""large\""."", ""type"": ""str""}}}, {""name"": ""is_valid_ip_address"", ""description"": ""Checks if a string is a valid IP address (IPv4)."", ""parameters"": {""ip"": {""description"": ""The string to check."", ""type"": ""str""}}}]"
34,7314,What lens item can I get with ID '67890' on Snapchat and who are the followers of Kylie Jenner that match the query 'makeup'?,"[{""name"": ""getlensitem"", ""arguments"": {""lens_id"": ""67890""}}, {""name"": ""searchfollowers"", ""arguments"": {""user_id"": ""kyliejenner"", ""query"": ""makeup""}}]","[{""name"": ""following_by_username"", ""description"": ""Retrieve the list of users that the specified Instagram user is following, up to 1000 records."", ""parameters"": {""username"": {""description"": ""The Instagram username for which to retrieve the following list."", ""type"": ""str"", ""default"": ""therock""}, ""corsenabled"": {""description"": ""Whether CORS is enabled. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""nextmaxid"": {""description"": ""The next maximum ID for pagination. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""searchfollowers"", ""description"": ""Search the followers of a specific Instagram user based on a query."", ""parameters"": {""user_id"": {""description"": ""The ID of the Instagram user whose followers will be searched."", ""type"": ""str"", ""default"": ""25025320""}, ""query"": {""description"": ""The search query to filter the followers."", ""type"": ""str"", ""default"": ""fake""}}}, {""name"": ""getlensitem"", ""description"": ""Fetches lens item information from the Snapchat RapidAPI using the provided lens ID and API key."", ""parameters"": {""lens_id"": {""description"": ""The ID of the lens item to retrieve."", ""type"": ""str"", ""default"": ""41a72e9ae9a44f8891327ce6cf1c344d""}}}]"
35,7454,Simulate a database query for a 'products' table with conditions: price < 100 and category = 'Electronics'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""products"", ""conditions"": [{""price"": ""<"", ""value"": 100}, {""category"": ""="", ""value"": ""Electronics""}]}}]","[{""name"": ""project_population"", ""description"": ""Projects the population size after a specified number of years."", ""parameters"": {""current_pop"": {""description"": ""The current population size."", ""type"": ""int"", ""default"": 1.2}, ""num_years"": {""description"": ""The number of years into the future to make the projection."", ""type"": ""int"", ""default"": 1.2}, ""annual_growth"": {""description"": ""The annual population growth rate as a percentage. Defaults to 1.2."", ""type"": ""float, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_valid_email"", ""description"": ""Checks if an email address is valid."", ""parameters"": {""email"": {""description"": ""The email address to validate."", ""type"": ""str""}}}, {""name"": ""place_safeway_order"", ""description"": ""Order specified items from a Safeway location."", ""parameters"": {""location"": {""description"": ""The location of the Safeway store, e.g., 'Palo Alto, CA'."", ""type"": ""str""}, ""items"": {""description"": ""List of items to order."", ""type"": ""list""}, ""quantity"": {""description"": ""Quantity of each item in the order list."", ""type"": ""list""}}}, {""name"": ""get_ip_zipcode"", ""description"": ""Retrieves the ZIP code of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}, {""name"": ""structural_analysis"", ""description"": ""Performs structural analysis on a building based on its ID, floor numbers, and analysis mode."", ""parameters"": {""building_id"": {""description"": ""The unique identifier of the building."", ""type"": ""str"", ""default"": ""static""}, ""floor_numbers"": {""description"": ""The list of floor numbers to be analyzed."", ""type"": ""List[int]"", ""default"": ""static""}, ""analysis_mode"": {""description"": ""The mode of analysis, either \""static\"" or \""dynamic\"". Defaults to \""static\""."", ""type"": ""str, optional""}}}, {""name"": ""geocode_city"", ""description"": ""Retrieves the latitude and longitude coordinates of a given city using the Maps.co Geocoding API."", ""parameters"": {""city"": {""description"": ""The name of the city."", ""type"": ""str""}}}]"
36,7975,Simulate a database query on a 'users' table with conditions: age > 30 and city = 'New York'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": "">"", ""value"": 30}, {""city"": ""="", ""value"": ""New York""}]}}]","[{""name"": ""analyze_social_group_dynamics"", ""description"": ""Analyzes the social dynamics within a group based on the personality traits and group size."", ""parameters"": {""total"": {""description"": ""The total group size."", ""type"": ""int""}, ""extroverts"": {""description"": ""The number of extroverted members in the group."", ""type"": ""int""}, ""introverts"": {""description"": ""The number of introverted members in the group."", ""type"": ""int""}}}, {""name"": ""project_population"", ""description"": ""Projects the population size after a specified number of years."", ""parameters"": {""current_pop"": {""description"": ""The current population size."", ""type"": ""int"", ""default"": 1.2}, ""num_years"": {""description"": ""The number of years into the future to make the projection."", ""type"": ""int"", ""default"": 1.2}, ""annual_growth"": {""description"": ""The annual population growth rate as a percentage. Defaults to 1.2."", ""type"": ""float, optional""}}}, {""name"": ""get_pokemon_move_info"", ""description"": ""Retrieves information about a Pok\u00e9mon's move using the Pok\u00e9API."", ""parameters"": {""pokemon_name"": {""description"": ""The name of the Pok\u00e9mon."", ""type"": ""str"", ""default"": ""run""}, ""move_name"": {""description"": ""The name of the move to check. Defaults to \""run\""."", ""type"": ""str, optional"", ""default"": ""run""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""assess_diabetes_risk"", ""description"": ""Assesses the risk of developing type 2 diabetes based on body mass index (BMI) and physical activity level."", ""parameters"": {""weight_lbs"": {""description"": ""Body weight in pounds."", ""type"": ""int""}, ""height_inches"": {""description"": ""Height in inches."", ""type"": ""int""}, ""activity"": {""description"": ""Physical activity level. Allowed values: \""sedentary\"", \""lightly active\"", \""moderately active\"", or \""very active\""."", ""type"": ""str""}}}, {""name"": ""is_valid_email"", ""description"": ""Checks if an email address is valid."", ""parameters"": {""email"": {""description"": ""The email address to validate."", ""type"": ""str""}}}, {""name"": ""calculate_calorie_intake"", ""description"": ""Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals."", ""parameters"": {""weight_kg"": {""description"": ""Body weight in kilograms."", ""type"": ""float""}, ""height_cm"": {""description"": ""Height in centimeters."", ""type"": ""float""}, ""age"": {""description"": ""Age in years."", ""type"": ""int""}, ""sex"": {""description"": ""Biological sex, either 'male' or 'female'."", ""type"": ""str""}, ""activity_level"": {""description"": ""Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active)."", ""type"": ""int""}, ""goal"": {""description"": ""Fitness goal, either 'lose', 'maintain', or 'gain'."", ""type"": ""str""}}}]"
37,8036,"Simulate a database query on a table named 'Products' with conditions {'price': '<100', 'category': 'Electronics'}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""Products"", ""conditions"": [{""price"": ""<100"", ""category"": ""Electronics""}]}}]","[{""name"": ""analyze_social_group_dynamics"", ""description"": ""Analyzes the social dynamics within a group based on the personality traits and group size."", ""parameters"": {""total"": {""description"": ""The total group size."", ""type"": ""int""}, ""extroverts"": {""description"": ""The number of extroverted members in the group."", ""type"": ""int""}, ""introverts"": {""description"": ""The number of introverted members in the group."", ""type"": ""int""}}}, {""name"": ""structural_analysis"", ""description"": ""Performs structural analysis on a building based on its ID, floor numbers, and analysis mode."", ""parameters"": {""building_id"": {""description"": ""The unique identifier of the building."", ""type"": ""str"", ""default"": ""static""}, ""floor_numbers"": {""description"": ""The list of floor numbers to be analyzed."", ""type"": ""List[int]"", ""default"": ""static""}, ""analysis_mode"": {""description"": ""The mode of analysis, either \""static\"" or \""dynamic\"". Defaults to \""static\""."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_valid_ip_address"", ""description"": ""Checks if a string is a valid IP address (IPv4)."", ""parameters"": {""ip"": {""description"": ""The string to check."", ""type"": ""str""}}}]"
38,8043,Get search suggestions for the query 'climate change' on Twitter and media information for the Instagram post at 'https://www.instagram.com/p/B0Z567KHN89/'.,"[{""name"": ""search_suggestions"", ""arguments"": {""query"": ""climate change""}}, {""name"": ""get_media_info_by_url"", ""arguments"": {""link"": ""https://www.instagram.com/p/B0Z567KHN89/""}}]","[{""name"": ""search_suggestions"", ""description"": ""Fetches search suggestions from the Twitter API using specified query parameters."", ""parameters"": {""query"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": ""elonmusk""}, ""twttr_session"": {""description"": ""The Twitter session ID for authenticated requests. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""twttr_proxy"": {""description"": ""The Twitter proxy server address. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""cursor"": {""description"": ""The cursor for paginated results. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""music_metadata"", ""description"": ""Fetch metadata for a given music track from TikTok."", ""parameters"": {""music"": {""description"": ""The TikTok music URL. For example: 'https://www.tiktok.com/music/Streets-x-Kiss-it-better-7090403288818584347'."", ""type"": ""str"", ""default"": ""https://www.tiktok.com/music/Streets-x-Kiss-it-better-7090403288818584347""}, ""fresh"": {""description"": ""Set to 1 to force the API to return fresh data instead of cached data. Defaults to 0."", ""type"": ""int, optional"", ""default"": ""0""}}}, {""name"": ""hashtag_data_by_name"", ""description"": ""Fetches data for a specified TikTok hashtag using the given challenge name."", ""parameters"": {""challenge_name"": {""description"": ""The name of the TikTok hashtag challenge to retrieve data for."", ""type"": ""str"", ""default"": ""food""}}}, {""name"": ""music_information"", ""description"": ""Fetch music information from Instagram using the provided audio cluster ID."", ""parameters"": {""musicid"": {""description"": ""The Instagram audio cluster ID."", ""type"": ""str"", ""default"": ""514041080820366""}}}, {""name"": ""user_tweets"", ""description"": ""Fetches a user's tweets using the Twttr RapidAPI."", ""parameters"": {""twttr_proxy"": {""description"": ""Optional proxy to use for the Twitter API request."", ""type"": ""str, optional"", ""default"": """"}, ""twttr_session"": {""description"": ""Optional session identifier for the Twitter API request."", ""type"": ""str, optional"", ""default"": """"}, ""cursor"": {""description"": ""Optional cursor for paginated results."", ""type"": ""str, optional"", ""default"": """"}, ""user_id"": {""description"": ""The Twitter user ID for which to fetch tweets."", ""type"": ""str, optional"", ""default"": """"}, ""username"": {""description"": ""The Twitter username for which to fetch tweets (default is 'elonmusk')."", ""type"": ""str, default='elonmusk'"", ""default"": ""elonmusk""}}}, {""name"": ""get_media_info_by_url"", ""description"": ""Fetches Instagram media information based on the given URL."", ""parameters"": {""link"": {""description"": ""The URL link to the specific Instagram media."", ""type"": ""str"", ""default"": ""https://www.instagram.com/p/CqIbCzYMi5C/""}}}, {""name"": ""get_info_user"", ""description"": ""Fetch information about a TikTok user using the provided username."", ""parameters"": {""username"": {""description"": ""The TikTok username for which to retrieve information."", ""type"": ""str"", ""default"": ""tiktok""}}}]"
39,8236,Fetch 5 links from Wikipedia's main page without including query parameters.,"[{""name"": ""scrape_links"", ""arguments"": {""url"": ""https://www.wikipedia.org"", ""maxlinks"": 5, ""includequery"": false}}]","[{""name"": ""scrape_links"", ""description"": ""Scrapes a specified number of links from the provided URL using the Scrapey Link Scraper API."", ""parameters"": {""url"": {""description"": ""The target URL from which to scrape links."", ""type"": ""str"", ""default"": ""amazon.com""}, ""maxlinks"": {""description"": ""The maximum number of links to scrape. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}, ""includequery"": {""description"": ""Whether to include query parameters in the links. Defaults to None."", ""type"": ""bool, optional"", ""default"": ""true""}}}]"
40,8554,Check the status of the callback URL 'https://urgentcallback.com' and query the IP address of the connecting client.,"[{""name"": ""get_callback_url_status"", ""arguments"": {""callback_url"": ""https://urgentcallback.com""}}, {""name"": ""query"", ""arguments"": {}}]","[{""name"": ""v1"", ""description"": ""Retrieves filtered observations from the Version 1 endpoint based on specified time and filters."", ""parameters"": {""time"": {""description"": ""Select one of the following timeframes:"", ""type"": ""str"", ""default"": ""today""}, ""filter1"": {""description"": ""Can be a specific user, type, or tag (e.g., url, domain, ip, sha256, md5 for type, and phishing, ransomware, CobaltStrike for tag). Default is 'phishing'."", ""type"": ""str, optional"", ""default"": ""phishing""}, ""filter2"": {""description"": ""Can be a specific user, type, or tag (e.g., url, domain, ip, sha256, md5 for type, and phishing, ransomware, CobaltStrike for tag). Default is 'url'."", ""type"": ""str, optional"", ""default"": ""url""}}}, {""name"": ""get_scan_id"", ""description"": ""Initiates a scan against a target URL and retrieves a scan ID."", ""parameters"": {""target"": {""description"": ""The URL of the target to be scanned."", ""type"": ""str"", ""default"": ""tesla.com""}, ""callback_url"": {""description"": ""The URL to receive the scan results automatically via a POST request upon scan completion. Defaults to 'https://my-callback-url.com'."", ""type"": ""str, optional"", ""default"": ""https://my-callback-url.com""}}}, {""name"": ""get_callback_url_status"", ""description"": ""Check the status of a callback URL to determine if it can receive scan results via POST requests."", ""parameters"": {""callback_url"": {""description"": ""The URL to be checked for its ability to receive scan results."", ""type"": ""str"", ""default"": ""https://my-callback-url.com""}}}, {""name"": ""query"", ""description"": ""Queries information about an IP address using the NetDetective API."", ""parameters"": {""ipaddress"": {""description"": ""The IP address to use for the query. Defaults to None, which uses the IP address of the connecting client."", ""type"": ""str, optional"", ""default"": """"}}}]"
41,8565,"Simulate a database query on the 'sales' table with conditions {'date': '2023-01-01', 'region': 'North'}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""sales"", ""conditions"": [{""date"": ""2023-01-01"", ""region"": ""North""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""predict_forest_area"", ""description"": ""Predicts the change in forest area over a specified number of years."", ""parameters"": {""location"": {""description"": ""The geographic location for the prediction."", ""type"": ""str""}, ""num_years"": {""description"": ""The number of years into the future to make the prediction."", ""type"": ""int""}, ""include_humans"": {""description"": ""Whether to include the impact of human activities in the prediction. Defaults to False."", ""type"": ""bool, optional""}}}, {""name"": ""project_population"", ""description"": ""Projects the population size after a specified number of years."", ""parameters"": {""current_pop"": {""description"": ""The current population size."", ""type"": ""int"", ""default"": 1.2}, ""num_years"": {""description"": ""The number of years into the future to make the projection."", ""type"": ""int"", ""default"": 1.2}, ""annual_growth"": {""description"": ""The annual population growth rate as a percentage. Defaults to 1.2."", ""type"": ""float, optional""}}}, {""name"": ""place_safeway_order"", ""description"": ""Order specified items from a Safeway location."", ""parameters"": {""location"": {""description"": ""The location of the Safeway store, e.g., 'Palo Alto, CA'."", ""type"": ""str""}, ""items"": {""description"": ""List of items to order."", ""type"": ""list""}, ""quantity"": {""description"": ""Quantity of each item in the order list."", ""type"": ""list""}}}, {""name"": ""structural_analysis"", ""description"": ""Performs structural analysis on a building based on its ID, floor numbers, and analysis mode."", ""parameters"": {""building_id"": {""description"": ""The unique identifier of the building."", ""type"": ""str"", ""default"": ""static""}, ""floor_numbers"": {""description"": ""The list of floor numbers to be analyzed."", ""type"": ""List[int]"", ""default"": ""static""}, ""analysis_mode"": {""description"": ""The mode of analysis, either \""static\"" or \""dynamic\"". Defaults to \""static\""."", ""type"": ""str, optional""}}}]"
42,8634,"As a GIS analyst, you need to retrieve vector tiles for a detailed map view of downtown Toronto at zoom level 14, with coordinates (x=5678, y=1234). Additionally, you want to query the LDU boundary for a specific H3 index representing a region in Vancouver, which is 6112987653219.","[{""name"": ""planet_vector_tiles"", ""arguments"": {""y"": ""1234"", ""x"": ""5678"", ""z"": ""14""}}, {""name"": ""query_for_ldu_boundary_by_h3index"", ""arguments"": {""h3ndex"": 6112987653219}}]","[{""name"": ""planet_vector_tiles"", ""description"": ""Retrieves global planet vector tiles in Protocolbuffer Binary Format (PBF) from the specified map service."", ""parameters"": {""y"": {""description"": ""The y coordinate (tile row) of the map tile."", ""type"": ""str"", ""default"": ""1""}, ""x"": {""description"": ""The x coordinate (tile column) of the map tile."", ""type"": ""str"", ""default"": ""1""}, ""z"": {""description"": ""The zoom level of the map tile."", ""type"": ""str"", ""default"": ""1""}}}, {""name"": ""query_for_ldu_boundary_by_h3index"", ""description"": ""Queries for a Local Delivery Unit (LDU) boundary by its H3 index."", ""parameters"": {""h3ndex"": {""description"": ""The H3 index used to query the LDU boundary."", ""type"": ""int"", ""default"": ""635775751926485631""}}}]"
43,9111,"Query city names in Florida and New York. Also, calculate a bike route with waypoints '48.8566, 2.3522' and '52.5200, 13.4050'.","[{""name"": ""query_for_city_names_by_state"", ""arguments"": {""state"": ""Florida""}}, {""name"": ""query_for_city_names_by_state"", ""arguments"": {""state"": ""New York""}}, {""name"": ""routing"", ""arguments"": {""points"": ""48.8566, 2.3522|52.5200, 13.4050""}}]","[{""name"": ""query_for_city_names_by_state"", ""description"": ""This function queries a list of city names for a given state from the RapidAPI \""Boundaries\"" service."", ""parameters"": {""state"": {""description"": ""The name of the state to query for city names."", ""type"": ""str"", ""default"": ""berlin""}}}, {""name"": ""v1_reversegeocoding"", ""description"": ""This function performs reverse geocoding using the API Ninjas service to obtain location information based on provided latitude and longitude coordinates."", ""parameters"": {""lat"": {""description"": ""The latitude coordinate to be used for reverse geocoding."", ""type"": ""int"", ""default"": ""47.6062""}, ""lon"": {""description"": ""The longitude coordinate to be used for reverse geocoding."", ""type"": ""int"", ""default"": ""-122.3321""}}}, {""name"": ""routing"", ""description"": ""Calculates a route based on specified waypoints and options using the Map Toolkit API."", ""parameters"": {""points"": {""description"": ""Waypoints defined as latitude and longitude pairs in the format `{lat},{lng}|{lat},{lng}...`. At least 2 points are required."", ""type"": ""str"", ""default"": ""48.202596,16.369801|48.208373,16.370401""}, ""finish_instruction"": {""description"": ""Adds a finish instruction at the end of the route. Default is None."", ""type"": ""str, optional"", ""default"": """"}, ""language"": {""description"": ""Language for the given instructions in ISO 639-1 code format. Default is `en`."", ""type"": ""str, optional"", ""default"": """"}, ""voice_instructions"": {""description"": ""Enables voice instructions for text-to-speech engines. Default is None."", ""type"": ""str, optional"", ""default"": """"}, ""filename"": {""description"": ""The name of the file if the output `format` is `gpx` or `kml`. Default is None."", ""type"": ""str, optional"", ""default"": """"}, ""format"": {""description"": ""The format of the output. Default is `json`."", ""type"": ""str, optional"", ""default"": """"}, ""weighting"": {""description"": ""Weighting option for bike routes. Default is `networks`."", ""type"": ""str, optional"", ""default"": """"}, ""routetype"": {""description"": ""The type of route to calculate. Default is `bike`."", ""type"": ""str, optional"", ""default"": ""bike""}}}, {""name"": ""geocode"", ""description"": ""Fetch geocoordinates for a given address using the TrueWay Geocoding API."", ""parameters"": {""address"": {""description"": ""The address that you want to geocode."", ""type"": ""str"", ""default"": ""505 Howard St, San Francisco""}, ""language"": {""description"": ""The language in which to return results. Default is 'en'."", ""type"": ""str, optional"", ""default"": ""en""}, ""country"": {""description"": ""The country code to narrow the search results."", ""type"": ""str, optional"", ""default"": """"}, ""bounds"": {""description"": ""The bounding box to narrow the search results."", ""type"": ""str, optional"", ""default"": """"}}}]"
44,9430,A brand enthusiast is interested in products from a specific brand. What query should be used to get the first page of results sorted by brand name?,"[{""name"": ""zappos_search_product"", ""arguments"": {""keyword"": ""Nike"", ""sort"": ""brand_name"", ""page"": 1}}]","[{""name"": ""zappos_search_product"", ""description"": ""Searches for products on Zappos using the given keyword and various optional parameters for sorting and pagination."", ""parameters"": {""keyword"": {""description"": ""The search term to use for finding products on Zappos."", ""type"": ""str"", ""default"": ""crocs body""}, ""sort"": {""description"": ""The sorting criteria for the search results. Possible values are 'best_seller', 'relevance', 'low_to_high', 'high_to_low', 'customer_rating', 'new_arrivals', and 'brand_name'. Defaults to 'new_arrivals'."", ""type"": ""str, optional"", ""default"": ""new_arrivals""}, ""page"": {""description"": ""The page number for pagination of search results. Defaults to 1."", ""type"": ""int, optional"", ""default"": ""1""}}}]"
45,9529,"Is '192.168.1.1' a valid IP address? Also, simulate a database query for the 'users' table where the conditions are {'age': '>30', 'city': 'New York'}.","[{""name"": ""is_valid_ip_address"", ""arguments"": {""ip"": ""192.168.1.1""}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": "">30"", ""city"": ""New York""}]}}]","[{""name"": ""is_valid_ip_address"", ""description"": ""Checks if a string is a valid IP address (IPv4)."", ""parameters"": {""ip"": {""description"": ""The string to check."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
46,9611,"Simulate a database query for the 'Orders' table with conditions: {'status': 'pending', 'date': {'$lt': '2023-01-01'}}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""Orders"", ""conditions"": [{""status"": ""pending"", ""date"": {""$lt"": ""2023-01-01""}}]}}]","[{""name"": ""get_holidays_by_year"", ""description"": ""Retrieves the list of public holidays for a given year and country using the Nager.Date API."", ""parameters"": {""year"": {""description"": ""The year for which to retrieve the holidays."", ""type"": ""int""}, ""country_code"": {""description"": ""The two-letter ISO 3166-1 alpha-2 country code."", ""type"": ""str""}}}, {""name"": ""calculate_order_total"", ""description"": ""Calculates the total cost of an order based on the items, quantities, and prices."", ""parameters"": {""items"": {""description"": ""A list of item names."", ""type"": ""List[str]""}, ""quantities"": {""description"": ""A list of corresponding quantities for each item."", ""type"": ""List[int]""}, ""prices"": {""description"": ""A list of corresponding prices for each item."", ""type"": ""List[float]""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""calculate_calorie_intake"", ""description"": ""Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals."", ""parameters"": {""weight_kg"": {""description"": ""Body weight in kilograms."", ""type"": ""float""}, ""height_cm"": {""description"": ""Height in centimeters."", ""type"": ""float""}, ""age"": {""description"": ""Age in years."", ""type"": ""int""}, ""sex"": {""description"": ""Biological sex, either 'male' or 'female'."", ""type"": ""str""}, ""activity_level"": {""description"": ""Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active)."", ""type"": ""int""}, ""goal"": {""description"": ""Fitness goal, either 'lose', 'maintain', or 'gain'."", ""type"": ""str""}}}]"
47,9723,"Simulate a database query for the 'Orders' table with conditions {'status': 'pending', 'amount': 1000}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""Orders"", ""conditions"": [{""status"": ""pending"", ""amount"": 1000}]}}]","[{""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_hotel_available"", ""description"": ""Checks the availability of a hotel for a given date range."", ""parameters"": {""hotel"": {""description"": ""The name of the hotel."", ""type"": ""str""}, ""city"": {""description"": ""The city where the hotel is located."", ""type"": ""str""}, ""checkin"": {""description"": ""The check-in date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}, ""checkout"": {""description"": ""The check-out date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}}}]"
48,10099,"I need to query a database for all entries in the 'sales' table where the 'product_id' is 5 and the 'date' is after January 1, 2023. Can you simulate this?","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""sales"", ""conditions"": [{""product_id"": 5}, {""date"": "">2023-01-01""}]}}]","[{""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
49,10202,"Retrieve data from PMI Jateng API without any specific query parameter. Also, fetch 3 random female Indian first names.","[{""name"": ""test"", ""arguments"": {}}, {""name"": ""get_names"", ""arguments"": {""first"": true, ""gender"": ""female"", ""number"": 3}}]","[{""name"": ""test"", ""description"": ""Retrieves data from the PMI Jateng API and returns the response as a JSON or text."", ""parameters"": {""iniya"": {""description"": ""An optional query string parameter to be sent with the request. Defaults to 9."", ""type"": ""int, optional"", ""default"": ""9""}}}, {""name"": ""getrandomquote"", ""description"": ""Fetches a random quote from the specified category using the provided API key."", ""parameters"": {""category"": {""description"": ""The category of the quote to fetch. Defaults to 'life'."", ""type"": ""str, optional"", ""default"": ""life""}, ""count"": {""description"": ""The number of quotes to fetch. Defaults to 1."", ""type"": ""int, optional"", ""default"": ""1""}}}, {""name"": ""get_names"", ""description"": ""Fetch a random list of Indian names based on specified criteria."", ""parameters"": {""first"": {""description"": ""If True, include first names in the result. Defaults to None."", ""type"": ""bool, optional"", ""default"": ""true""}, ""gender"": {""description"": ""Specify the gender for names ('male' or 'female'). Defaults to 'male'."", ""type"": ""str, optional"", ""default"": ""male""}, ""last"": {""description"": ""If True, include last names in the result. Defaults to None."", ""type"": ""bool, optional"", ""default"": ""true""}, ""number"": {""description"": ""The number of names to fetch. Defaults to 5."", ""type"": ""int, optional"", ""default"": ""5""}}}]"
50,10348,"Simulate a database query for a table named 'Customers' with conditions: {'city': 'New York', 'age': {'$gt': 30}}","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""Customers"", ""conditions"": [{""city"": ""New York"", ""age"": {""$gt"": 30}}]}}]","[{""name"": ""calculate_calorie_intake"", ""description"": ""Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals."", ""parameters"": {""weight_kg"": {""description"": ""Body weight in kilograms."", ""type"": ""float""}, ""height_cm"": {""description"": ""Height in centimeters."", ""type"": ""float""}, ""age"": {""description"": ""Age in years."", ""type"": ""int""}, ""sex"": {""description"": ""Biological sex, either 'male' or 'female'."", ""type"": ""str""}, ""activity_level"": {""description"": ""Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active)."", ""type"": ""int""}, ""goal"": {""description"": ""Fitness goal, either 'lose', 'maintain', or 'gain'."", ""type"": ""str""}}}, {""name"": ""predict_forest_area"", ""description"": ""Predicts the change in forest area over a specified number of years."", ""parameters"": {""location"": {""description"": ""The geographic location for the prediction."", ""type"": ""str""}, ""num_years"": {""description"": ""The number of years into the future to make the prediction."", ""type"": ""int""}, ""include_humans"": {""description"": ""Whether to include the impact of human activities in the prediction. Defaults to False."", ""type"": ""bool, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""calculate_order_total"", ""description"": ""Calculates the total cost of an order based on the items, quantities, and prices."", ""parameters"": {""items"": {""description"": ""A list of item names."", ""type"": ""List[str]""}, ""quantities"": {""description"": ""A list of corresponding quantities for each item."", ""type"": ""List[int]""}, ""prices"": {""description"": ""A list of corresponding prices for each item."", ""type"": ""List[float]""}}}, {""name"": ""project_population"", ""description"": ""Projects the population size after a specified number of years."", ""parameters"": {""current_pop"": {""description"": ""The current population size."", ""type"": ""int"", ""default"": 1.2}, ""num_years"": {""description"": ""The number of years into the future to make the projection."", ""type"": ""int"", ""default"": 1.2}, ""annual_growth"": {""description"": ""The annual population growth rate as a percentage. Defaults to 1.2."", ""type"": ""float, optional""}}}, {""name"": ""get_pokemon_move_info"", ""description"": ""Retrieves information about a Pok\u00e9mon's move using the Pok\u00e9API."", ""parameters"": {""pokemon_name"": {""description"": ""The name of the Pok\u00e9mon."", ""type"": ""str"", ""default"": ""run""}, ""move_name"": {""description"": ""The name of the move to check. Defaults to \""run\""."", ""type"": ""str, optional"", ""default"": ""run""}}}]"
51,10453,Simulate a database query for customers who are over 30 and live in New York.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""customers"", ""conditions"": [{""age"": "">30""}, {""city"": ""New York""}]}}]","[{""name"": ""calculate_calorie_intake"", ""description"": ""Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals."", ""parameters"": {""weight_kg"": {""description"": ""Body weight in kilograms."", ""type"": ""float""}, ""height_cm"": {""description"": ""Height in centimeters."", ""type"": ""float""}, ""age"": {""description"": ""Age in years."", ""type"": ""int""}, ""sex"": {""description"": ""Biological sex, either 'male' or 'female'."", ""type"": ""str""}, ""activity_level"": {""description"": ""Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active)."", ""type"": ""int""}, ""goal"": {""description"": ""Fitness goal, either 'lose', 'maintain', or 'gain'."", ""type"": ""str""}}}, {""name"": ""project_population"", ""description"": ""Projects the population size after a specified number of years."", ""parameters"": {""current_pop"": {""description"": ""The current population size."", ""type"": ""int"", ""default"": 1.2}, ""num_years"": {""description"": ""The number of years into the future to make the projection."", ""type"": ""int"", ""default"": 1.2}, ""annual_growth"": {""description"": ""The annual population growth rate as a percentage. Defaults to 1.2."", ""type"": ""float, optional""}}}, {""name"": ""is_valid_ip_address"", ""description"": ""Checks if a string is a valid IP address (IPv4)."", ""parameters"": {""ip"": {""description"": ""The string to check."", ""type"": ""str""}}}, {""name"": ""get_dna_sequence"", ""description"": ""Retrieves the DNA sequence for a given sequence ID from the NCBI Nucleotide database."", ""parameters"": {""sequence_id"": {""description"": ""The unique identifier for the DNA sequence."", ""type"": ""str"", ""default"": ""fasta""}, ""file_format"": {""description"": ""The format of the returned sequence. Allowed values: \""fasta\"" (default) or \""gb\""."", ""type"": ""str, optional""}, ""upstream_bases"": {""description"": ""The number of bases upstream of the sequence to include. Defaults to 0."", ""type"": ""int, optional"", ""default"": ""fasta""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""project_investment_growth"", ""description"": ""Projects the growth of an investment over a specified number of years."", ""parameters"": {""principal"": {""description"": ""The initial investment amount."", ""type"": ""float"", ""default"": true}, ""annual_addition"": {""description"": ""The amount added to the investment annually."", ""type"": ""float"", ""default"": true}, ""years"": {""description"": ""The number of years to project the investment growth."", ""type"": ""int""}, ""return_rate"": {""description"": ""The annual return rate as a decimal (e.g., 0.07 for 7%)."", ""type"": ""float""}, ""inflation"": {""description"": ""A list of annual inflation rates as decimals."", ""type"": ""List[float]""}, ""inflation_adjusted"": {""description"": ""Whether to adjust the final value for inflation. Defaults to True."", ""type"": ""bool, optional""}}}, {""name"": ""geocode_city"", ""description"": ""Retrieves the latitude and longitude coordinates of a given city using the Maps.co Geocoding API."", ""parameters"": {""city"": {""description"": ""The name of the city."", ""type"": ""str""}}}]"
52,10457,Simulate a database query for the 'orders' table where the 'status' is 'pending' and 'amount' is greater than 100.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""orders"", ""conditions"": [{""status"": ""pending""}, {""amount"": {""$gt"": 100}}]}}]","[{""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}]"
53,10587,Retrieve a list of city names in the state of California using the query_for_city_names_by_state function.,"[{""name"": ""query_for_city_names_by_state"", ""arguments"": {""state"": ""California""}}]","[{""name"": ""query_for_ldu_boundary_by_h3index"", ""description"": ""Queries for a Local Delivery Unit (LDU) boundary by its H3 index."", ""parameters"": {""h3ndex"": {""description"": ""The H3 index used to query the LDU boundary."", ""type"": ""int"", ""default"": ""635775751926485631""}}}, {""name"": ""query_for_city_names_by_state"", ""description"": ""This function queries a list of city names for a given state from the RapidAPI \""Boundaries\"" service."", ""parameters"": {""state"": {""description"": ""The name of the state to query for city names."", ""type"": ""str"", ""default"": ""berlin""}}}, {""name"": ""map"", ""description"": ""Fetches a map image in WMTS format based on the given parameters."", ""parameters"": {""tilerow"": {""description"": ""The WMTS tile row number (latitude direction)."", ""type"": ""int"", ""default"": ""25806""}, ""tilematrix"": {""description"": ""The tile matrix, specified in the format `[EPSG code]:[Scale value]`."", ""type"": ""str"", ""default"": ""EPSG:3857:16""}, ""tilecol"": {""description"": ""The WMTS tile column number (longitude direction)."", ""type"": ""int"", ""default"": ""58211""}, ""rotationangle"": {""description"": ""Angle to rotate the map image. Valid range is 0 to 359, default is 0."", ""type"": ""int, optional"", ""default"": """"}, ""mapstyle"": {""description"": ""Design of the map. Format is `[design]_[annotation size]`, default is `std_pc`."", ""type"": ""str, optional"", ""default"": """"}, ""landmarkicon"": {""description"": ""Display of landmark icons. `on` for display, `off` for hide, default is `off`."", ""type"": ""str, optional"", ""default"": """"}, ""resolution"": {""description"": ""Resolution of the map image. Values can be `1`, `2`, or `4`, default is `1`."", ""type"": ""str, optional"", ""default"": """"}, ""contour"": {""description"": ""Display of contour lines. `on` for display, `off` for hide, default is `on`."", ""type"": ""str, optional"", ""default"": """"}, ""bldgname"": {""description"": ""Display of building names. `on` for display, `off` for hide, default is `off`."", ""type"": ""str, optional"", ""default"": """"}, ""logo"": {""description"": ""Display of brand logos. `on` for display, `off` for hide, default is `off`."", ""type"": ""str, optional"", ""default"": """"}, ""target"": {""description"": ""Display contents of the map. Values can be `1` for background only, `2` for annotations only, `3` for both, default is `3`."", ""type"": ""str, optional"", ""default"": """"}, ""format"": {""description"": ""Output image format. Values can be `image/png` or `image/jpeg`, default is `image/png`."", ""type"": ""str, optional"", ""default"": """"}}}]"
54,10684,"Simulate a database query on a table named 'sales' with conditions: {'product': 'apple', 'quantity': {'$gt': 100}}","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""sales"", ""conditions"": [{""product"": ""apple"", ""quantity"": {""$gt"": 100}}]}}]","[{""name"": ""analyze_social_group_dynamics"", ""description"": ""Analyzes the social dynamics within a group based on the personality traits and group size."", ""parameters"": {""total"": {""description"": ""The total group size."", ""type"": ""int""}, ""extroverts"": {""description"": ""The number of extroverted members in the group."", ""type"": ""int""}, ""introverts"": {""description"": ""The number of introverted members in the group."", ""type"": ""int""}}}, {""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_pokemon_move_info"", ""description"": ""Retrieves information about a Pok\u00e9mon's move using the Pok\u00e9API."", ""parameters"": {""pokemon_name"": {""description"": ""The name of the Pok\u00e9mon."", ""type"": ""str"", ""default"": ""run""}, ""move_name"": {""description"": ""The name of the move to check. Defaults to \""run\""."", ""type"": ""str, optional"", ""default"": ""run""}}}]"
55,10865,"Calculate the daily calorie intake for a 30-year-old female weighing 60 kg, 165 cm tall, with an activity level of 3, aiming to maintain weight. Simulate a database query for a 'users' table with conditions {'age': 30, 'sex': 'female'}. Perform a dynamic structural analysis on building 'B123' for floors 5, 10, and 15.","[{""name"": ""calculate_calorie_intake"", ""arguments"": {""weight_kg"": 60, ""height_cm"": 165, ""age"": 30, ""sex"": ""female"", ""activity_level"": 3, ""goal"": ""maintain""}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": 30, ""sex"": ""female""}]}}, {""name"": ""structural_analysis"", ""arguments"": {""building_id"": ""B123"", ""floor_numbers"": [5, 10, 15], ""analysis_mode"": ""dynamic""}}]","[{""name"": ""is_valid_email"", ""description"": ""Checks if an email address is valid."", ""parameters"": {""email"": {""description"": ""The email address to validate."", ""type"": ""str""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}, {""name"": ""analyze_social_group_dynamics"", ""description"": ""Analyzes the social dynamics within a group based on the personality traits and group size."", ""parameters"": {""total"": {""description"": ""The total group size."", ""type"": ""int""}, ""extroverts"": {""description"": ""The number of extroverted members in the group."", ""type"": ""int""}, ""introverts"": {""description"": ""The number of introverted members in the group."", ""type"": ""int""}}}, {""name"": ""calculate_calorie_intake"", ""description"": ""Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals."", ""parameters"": {""weight_kg"": {""description"": ""Body weight in kilograms."", ""type"": ""float""}, ""height_cm"": {""description"": ""Height in centimeters."", ""type"": ""float""}, ""age"": {""description"": ""Age in years."", ""type"": ""int""}, ""sex"": {""description"": ""Biological sex, either 'male' or 'female'."", ""type"": ""str""}, ""activity_level"": {""description"": ""Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active)."", ""type"": ""int""}, ""goal"": {""description"": ""Fitness goal, either 'lose', 'maintain', or 'gain'."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""structural_analysis"", ""description"": ""Performs structural analysis on a building based on its ID, floor numbers, and analysis mode."", ""parameters"": {""building_id"": {""description"": ""The unique identifier of the building."", ""type"": ""str"", ""default"": ""static""}, ""floor_numbers"": {""description"": ""The list of floor numbers to be analyzed."", ""type"": ""List[int]"", ""default"": ""static""}, ""analysis_mode"": {""description"": ""The mode of analysis, either \""static\"" or \""dynamic\"". Defaults to \""static\""."", ""type"": ""str, optional""}}}]"
56,10873,What are the search suggestions for the query 'climate change' on YouTube?,"[{""name"": ""search_suggestions"", ""arguments"": {""q"": ""climate change""}}]","[{""name"": ""shows_id"", ""description"": ""Fetch metadata associated with the specified show from the given platform."", ""parameters"": {""platform"": {""description"": ""Source platform for the show. Possible values are 'ios', 'android', 'androidtv', 'web'."", ""type"": ""str"", ""default"": ""web""}, ""is_id"": {""description"": ""The ID of the show. Can also be a TMDB ID."", ""type"": ""str"", ""default"": ""82856""}, ""region"": {""description"": ""Region to retrieve the sources' deep link from. Default is 'US'. Possible values are 'US', 'FR'."", ""type"": ""str, optional"", ""default"": ""US""}}}, {""name"": ""search_video_list_by_keywords"", ""description"": ""Search for videos on TikTok by specified keywords and additional filtering options."", ""parameters"": {""keywords"": {""description"": ""Keywords to search videos for."", ""type"": ""str"", ""default"": ""\u8e0a\u3063\u3066\u307f\u305f""}, ""sort_type"": {""description"": ""Criterion for sorting results. Defaults to '0'."", ""type"": ""str, optional"", ""default"": ""0""}, ""publish_time"": {""description"": ""Time filter for when videos were posted. Defaults to '0'."", ""type"": ""str, optional"", ""default"": ""0""}, ""cursor"": {""description"": ""Pagination cursor for navigating results. Defaults to '0'."", ""type"": ""str, optional"", ""default"": ""0""}, ""region"": {""description"": ""ISO region code to filter results by location. Defaults to 'US'."", ""type"": ""str, optional"", ""default"": ""US""}, ""count"": {""description"": ""Number of results to retrieve. Defaults to '10'."", ""type"": ""str, optional"", ""default"": ""10""}}}, {""name"": ""search_suggestions"", ""description"": ""Fetches search suggestions for a given query using the Cheap YouTube API through RapidAPI."", ""parameters"": {""q"": {""description"": ""The search query for which to fetch suggestions."", ""type"": ""str"", ""default"": ""crypto""}}}]"
57,10991,"Simulate a database query for the 'orders' table with conditions 'status = 'pending' and 'customer_id = 500'. Also, get the coordinates for Miami.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""orders"", ""conditions"": [{""status"": ""pending""}, {""customer_id"": 500}]}}, {""name"": ""geocode_city"", ""arguments"": {""city"": ""Miami""}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""geocode_city"", ""description"": ""Retrieves the latitude and longitude coordinates of a given city using the Maps.co Geocoding API."", ""parameters"": {""city"": {""description"": ""The name of the city."", ""type"": ""str""}}}, {""name"": ""project_investment_growth"", ""description"": ""Projects the growth of an investment over a specified number of years."", ""parameters"": {""principal"": {""description"": ""The initial investment amount."", ""type"": ""float"", ""default"": true}, ""annual_addition"": {""description"": ""The amount added to the investment annually."", ""type"": ""float"", ""default"": true}, ""years"": {""description"": ""The number of years to project the investment growth."", ""type"": ""int""}, ""return_rate"": {""description"": ""The annual return rate as a decimal (e.g., 0.07 for 7%)."", ""type"": ""float""}, ""inflation"": {""description"": ""A list of annual inflation rates as decimals."", ""type"": ""List[float]""}, ""inflation_adjusted"": {""description"": ""Whether to adjust the final value for inflation. Defaults to True."", ""type"": ""bool, optional""}}}, {""name"": ""place_safeway_order"", ""description"": ""Order specified items from a Safeway location."", ""parameters"": {""location"": {""description"": ""The location of the Safeway store, e.g., 'Palo Alto, CA'."", ""type"": ""str""}, ""items"": {""description"": ""List of items to order."", ""type"": ""list""}, ""quantity"": {""description"": ""Quantity of each item in the order list."", ""type"": ""list""}}}]"
58,11307,Simulate a database query for the 'sales' table with conditions like product = 'laptop' and price > $1000.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""sales"", ""conditions"": [{""product"": ""laptop""}, {""price"": "">1000""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_valid_email"", ""description"": ""Checks if an email address is valid."", ""parameters"": {""email"": {""description"": ""The email address to validate."", ""type"": ""str""}}}, {""name"": ""place_safeway_order"", ""description"": ""Order specified items from a Safeway location."", ""parameters"": {""location"": {""description"": ""The location of the Safeway store, e.g., 'Palo Alto, CA'."", ""type"": ""str""}, ""items"": {""description"": ""List of items to order."", ""type"": ""list""}, ""quantity"": {""description"": ""Quantity of each item in the order list."", ""type"": ""list""}}}, {""name"": ""is_hotel_available"", ""description"": ""Checks the availability of a hotel for a given date range."", ""parameters"": {""hotel"": {""description"": ""The name of the hotel."", ""type"": ""str""}, ""city"": {""description"": ""The city where the hotel is located."", ""type"": ""str""}, ""checkin"": {""description"": ""The check-in date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}, ""checkout"": {""description"": ""The check-out date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}}}, {""name"": ""project_investment_growth"", ""description"": ""Projects the growth of an investment over a specified number of years."", ""parameters"": {""principal"": {""description"": ""The initial investment amount."", ""type"": ""float"", ""default"": true}, ""annual_addition"": {""description"": ""The amount added to the investment annually."", ""type"": ""float"", ""default"": true}, ""years"": {""description"": ""The number of years to project the investment growth."", ""type"": ""int""}, ""return_rate"": {""description"": ""The annual return rate as a decimal (e.g., 0.07 for 7%)."", ""type"": ""float""}, ""inflation"": {""description"": ""A list of annual inflation rates as decimals."", ""type"": ""List[float]""}, ""inflation_adjusted"": {""description"": ""Whether to adjust the final value for inflation. Defaults to True."", ""type"": ""bool, optional""}}}, {""name"": ""calculate_order_total"", ""description"": ""Calculates the total cost of an order based on the items, quantities, and prices."", ""parameters"": {""items"": {""description"": ""A list of item names."", ""type"": ""List[str]""}, ""quantities"": {""description"": ""A list of corresponding quantities for each item."", ""type"": ""List[int]""}, ""prices"": {""description"": ""A list of corresponding prices for each item."", ""type"": ""List[float]""}}}, {""name"": ""predict_forest_area"", ""description"": ""Predicts the change in forest area over a specified number of years."", ""parameters"": {""location"": {""description"": ""The geographic location for the prediction."", ""type"": ""str""}, ""num_years"": {""description"": ""The number of years into the future to make the prediction."", ""type"": ""int""}, ""include_humans"": {""description"": ""Whether to include the impact of human activities in the prediction. Defaults to False."", ""type"": ""bool, optional""}}}]"
59,11435,Simulate querying a 'users' database table to find all users who are active and have a role of 'admin'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""status"": ""active""}, {""role"": ""admin""}]}}]","[{""name"": ""project_investment_growth"", ""description"": ""Projects the growth of an investment over a specified number of years."", ""parameters"": {""principal"": {""description"": ""The initial investment amount."", ""type"": ""float"", ""default"": true}, ""annual_addition"": {""description"": ""The amount added to the investment annually."", ""type"": ""float"", ""default"": true}, ""years"": {""description"": ""The number of years to project the investment growth."", ""type"": ""int""}, ""return_rate"": {""description"": ""The annual return rate as a decimal (e.g., 0.07 for 7%)."", ""type"": ""float""}, ""inflation"": {""description"": ""A list of annual inflation rates as decimals."", ""type"": ""List[float]""}, ""inflation_adjusted"": {""description"": ""Whether to adjust the final value for inflation. Defaults to True."", ""type"": ""bool, optional""}}}, {""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
60,11458,"Search for 'Cyberpunk 2077' games on the Epic Games Store in the US region using English locale, and also generate a medium double name using the query 'Tech'.","[{""name"": ""search"", ""arguments"": {""page"": 1, ""locale"": ""en-US"", ""country"": ""US"", ""term"": ""Cyberpunk 2077""}}, {""name"": ""double_name_medium"", ""arguments"": {""query"": ""Tech""}}]","[{""name"": ""search"", ""description"": ""Search for games using the Epic Games Store RapidAPI."", ""parameters"": {""page"": {""description"": ""The page number of the search results to retrieve."", ""type"": ""int"", ""default"": ""1""}, ""locale"": {""description"": ""The locale for the search results (e.g., 'en-US')."", ""type"": ""str"", ""default"": ""en""}, ""country"": {""description"": ""The country code for the search results (e.g., 'US')."", ""type"": ""str"", ""default"": ""US""}, ""term"": {""description"": ""The search term to query."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""double_name_medium"", ""description"": ""Generates a medium double name based on the provided query string."", ""parameters"": {""query"": {""description"": ""The query string for generating the double name. Maximum length is 50 characters."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""get_quotes_by_anime_title"", ""description"": ""Fetches quotes from a specified anime title using the Anime Quotes API."", ""parameters"": {""title"": {""description"": ""The title of the anime for which to fetch quotes. Defaults to 'Fairy Tail'."", ""type"": ""str"", ""default"": ""Fairy Tail""}, ""page"": {""description"": ""The page number for pagination. Defaults to '1'."", ""type"": ""str"", ""default"": ""1""}}}]"
61,11702,A fashion blogger wants to find the latest arrivals of sneakers. What is the query to fetch the first page of results sorted by new arrivals?,"[{""name"": ""zappos_search_product"", ""arguments"": {""keyword"": ""sneakers"", ""sort"": ""new_arrivals"", ""page"": 1}}]","[{""name"": ""zappos_search_product"", ""description"": ""Searches for products on Zappos using the given keyword and various optional parameters for sorting and pagination."", ""parameters"": {""keyword"": {""description"": ""The search term to use for finding products on Zappos."", ""type"": ""str"", ""default"": ""crocs body""}, ""sort"": {""description"": ""The sorting criteria for the search results. Possible values are 'best_seller', 'relevance', 'low_to_high', 'high_to_low', 'customer_rating', 'new_arrivals', and 'brand_name'. Defaults to 'new_arrivals'."", ""type"": ""str, optional"", ""default"": ""new_arrivals""}, ""page"": {""description"": ""The page number for pagination of search results. Defaults to 1."", ""type"": ""int, optional"", ""default"": ""1""}}}]"
62,11788,"Query the 'inventory' table to find items with 'quantity' less than 10 and 'expiry_date' before December 31, 2023.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""inventory"", ""conditions"": [{""quantity"": ""<10""}, {""expiry_date"": ""<2023-12-31""}]}}]","[{""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
63,12229,Simulate a database query on the 'products' table to find all products priced above $100.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""products"", ""conditions"": [{""price"": {"">"": 100}}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""project_population"", ""description"": ""Projects the population size after a specified number of years."", ""parameters"": {""current_pop"": {""description"": ""The current population size."", ""type"": ""int"", ""default"": 1.2}, ""num_years"": {""description"": ""The number of years into the future to make the projection."", ""type"": ""int"", ""default"": 1.2}, ""annual_growth"": {""description"": ""The annual population growth rate as a percentage. Defaults to 1.2."", ""type"": ""float, optional""}}}, {""name"": ""calculate_order_total"", ""description"": ""Calculates the total cost of an order based on the items, quantities, and prices."", ""parameters"": {""items"": {""description"": ""A list of item names."", ""type"": ""List[str]""}, ""quantities"": {""description"": ""A list of corresponding quantities for each item."", ""type"": ""List[int]""}, ""prices"": {""description"": ""A list of corresponding prices for each item."", ""type"": ""List[float]""}}}, {""name"": ""project_investment_growth"", ""description"": ""Projects the growth of an investment over a specified number of years."", ""parameters"": {""principal"": {""description"": ""The initial investment amount."", ""type"": ""float"", ""default"": true}, ""annual_addition"": {""description"": ""The amount added to the investment annually."", ""type"": ""float"", ""default"": true}, ""years"": {""description"": ""The number of years to project the investment growth."", ""type"": ""int""}, ""return_rate"": {""description"": ""The annual return rate as a decimal (e.g., 0.07 for 7%)."", ""type"": ""float""}, ""inflation"": {""description"": ""A list of annual inflation rates as decimals."", ""type"": ""List[float]""}, ""inflation_adjusted"": {""description"": ""Whether to adjust the final value for inflation. Defaults to True."", ""type"": ""bool, optional""}}}, {""name"": ""predict_evolution_rate"", ""description"": ""Predict the evolutionary rate for a specific species for a given timeframe."", ""parameters"": {""species"": {""description"": ""The species that the evolution rate will be predicted for."", ""type"": ""str"", ""default"": ""Darwin""}, ""years"": {""description"": ""Number of years for the prediction."", ""type"": ""int"", ""default"": ""Darwin""}, ""model"": {""description"": ""The model used to make the prediction, options: 'Darwin', 'Lamarck', default is 'Darwin'."", ""type"": ""str""}}}, {""name"": ""structural_analysis"", ""description"": ""Performs structural analysis on a building based on its ID, floor numbers, and analysis mode."", ""parameters"": {""building_id"": {""description"": ""The unique identifier of the building."", ""type"": ""str"", ""default"": ""static""}, ""floor_numbers"": {""description"": ""The list of floor numbers to be analyzed."", ""type"": ""List[int]"", ""default"": ""static""}, ""analysis_mode"": {""description"": ""The mode of analysis, either \""static\"" or \""dynamic\"". Defaults to \""static\""."", ""type"": ""str, optional""}}}, {""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}]"
64,12351,Simulate querying a database for users who are active and have a role of 'admin' in the 'users' table.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""role"": ""admin""}, {""status"": ""active""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}]"
65,12364,"For the upcoming safety inspection, please perform a dynamic structural analysis on Building 123, focusing on floors 5 to 10. Also, simulate a database query for the 'Employees' table with conditions {'department': 'HR', 'salary': {'$gt': 70000}}.","[{""name"": ""structural_analysis"", ""arguments"": {""building_id"": ""123"", ""floor_numbers"": [5, 6, 7, 8, 9, 10], ""analysis_mode"": ""dynamic""}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""Employees"", ""conditions"": [{""department"": ""HR"", ""salary"": {""$gt"": 70000}}]}}]","[{""name"": ""structural_analysis"", ""description"": ""Performs structural analysis on a building based on its ID, floor numbers, and analysis mode."", ""parameters"": {""building_id"": {""description"": ""The unique identifier of the building."", ""type"": ""str"", ""default"": ""static""}, ""floor_numbers"": {""description"": ""The list of floor numbers to be analyzed."", ""type"": ""List[int]"", ""default"": ""static""}, ""analysis_mode"": {""description"": ""The mode of analysis, either \""static\"" or \""dynamic\"". Defaults to \""static\""."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_dna_sequence"", ""description"": ""Retrieves the DNA sequence for a given sequence ID from the NCBI Nucleotide database."", ""parameters"": {""sequence_id"": {""description"": ""The unique identifier for the DNA sequence."", ""type"": ""str"", ""default"": ""fasta""}, ""file_format"": {""description"": ""The format of the returned sequence. Allowed values: \""fasta\"" (default) or \""gb\""."", ""type"": ""str, optional""}, ""upstream_bases"": {""description"": ""The number of bases upstream of the sequence to include. Defaults to 0."", ""type"": ""int, optional"", ""default"": ""fasta""}}}, {""name"": ""project_investment_growth"", ""description"": ""Projects the growth of an investment over a specified number of years."", ""parameters"": {""principal"": {""description"": ""The initial investment amount."", ""type"": ""float"", ""default"": true}, ""annual_addition"": {""description"": ""The amount added to the investment annually."", ""type"": ""float"", ""default"": true}, ""years"": {""description"": ""The number of years to project the investment growth."", ""type"": ""int""}, ""return_rate"": {""description"": ""The annual return rate as a decimal (e.g., 0.07 for 7%)."", ""type"": ""float""}, ""inflation"": {""description"": ""A list of annual inflation rates as decimals."", ""type"": ""List[float]""}, ""inflation_adjusted"": {""description"": ""Whether to adjust the final value for inflation. Defaults to True."", ""type"": ""bool, optional""}}}, {""name"": ""predict_evolution_rate"", ""description"": ""Predict the evolutionary rate for a specific species for a given timeframe."", ""parameters"": {""species"": {""description"": ""The species that the evolution rate will be predicted for."", ""type"": ""str"", ""default"": ""Darwin""}, ""years"": {""description"": ""Number of years for the prediction."", ""type"": ""int"", ""default"": ""Darwin""}, ""model"": {""description"": ""The model used to make the prediction, options: 'Darwin', 'Lamarck', default is 'Darwin'."", ""type"": ""str""}}}]"
66,12632,What are the auto-complete suggestions for the query 'Nike Air' using the auto_complete_deprecating function?,"[{""name"": ""auto_complete_deprecating"", ""arguments"": {""query"": ""Nike Air""}}]","[{""name"": ""get_awesome_product_details"", ""description"": ""Fetches detailed information about a product using a given product ID from the Amazon Data Scraper API."", ""parameters"": {""productid"": {""description"": ""The unique identifier for the product to retrieve details for."", ""type"": ""str"", ""default"": ""B00K3OM3PS""}}}, {""name"": ""auto_complete_deprecating"", ""description"": ""Fetch auto-complete suggestions for a given query from the specified API."", ""parameters"": {""query"": {""description"": ""The term or phrase for which to get suggestions."", ""type"": ""str"", ""default"": ""bikini tops""}}}]"
67,13083,Extract 12 links including query parameters from the LinkedIn homepage.,"[{""name"": ""scrape_links"", ""arguments"": {""url"": ""https://www.linkedin.com"", ""maxlinks"": 12, ""includequery"": true}}]","[{""name"": ""scrape_links"", ""description"": ""Scrapes a specified number of links from the provided URL using the Scrapey Link Scraper API."", ""parameters"": {""url"": {""description"": ""The target URL from which to scrape links."", ""type"": ""str"", ""default"": ""amazon.com""}, ""maxlinks"": {""description"": ""The maximum number of links to scrape. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}, ""includequery"": {""description"": ""Whether to include query parameters in the links. Defaults to None."", ""type"": ""bool, optional"", ""default"": ""true""}}}]"
68,13088,"Perform a simulated database query on a 'products' table with conditions {'price': 50, 'category': 'Electronics'}","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""products"", ""conditions"": [{""price"": 50, ""category"": ""Electronics""}]}}]","[{""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}]"
69,13195,"Simulate a database query on a table named 'Users' with conditions {'age': '>30', 'city': 'New York'}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""Users"", ""conditions"": [{""age"": "">30"", ""city"": ""New York""}]}}]","[{""name"": ""analyze_social_group_dynamics"", ""description"": ""Analyzes the social dynamics within a group based on the personality traits and group size."", ""parameters"": {""total"": {""description"": ""The total group size."", ""type"": ""int""}, ""extroverts"": {""description"": ""The number of extroverted members in the group."", ""type"": ""int""}, ""introverts"": {""description"": ""The number of introverted members in the group."", ""type"": ""int""}}}, {""name"": ""structural_analysis"", ""description"": ""Performs structural analysis on a building based on its ID, floor numbers, and analysis mode."", ""parameters"": {""building_id"": {""description"": ""The unique identifier of the building."", ""type"": ""str"", ""default"": ""static""}, ""floor_numbers"": {""description"": ""The list of floor numbers to be analyzed."", ""type"": ""List[int]"", ""default"": ""static""}, ""analysis_mode"": {""description"": ""The mode of analysis, either \""static\"" or \""dynamic\"". Defaults to \""static\""."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_valid_ip_address"", ""description"": ""Checks if a string is a valid IP address (IPv4)."", ""parameters"": {""ip"": {""description"": ""The string to check."", ""type"": ""str""}}}]"
70,13236,Simulate a database query for the 'products' table where price is less than $100 and category is 'Electronics'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""products"", ""conditions"": [{""price"": ""<100""}, {""category"": ""Electronics""}]}}]","[{""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""is_hotel_available"", ""description"": ""Checks the availability of a hotel for a given date range."", ""parameters"": {""hotel"": {""description"": ""The name of the hotel."", ""type"": ""str""}, ""city"": {""description"": ""The city where the hotel is located."", ""type"": ""str""}, ""checkin"": {""description"": ""The check-in date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}, ""checkout"": {""description"": ""The check-out date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
71,13275,Scrape 15 links from the URL 'https://www.example.com' and include query parameters.,"[{""name"": ""scrape_links"", ""arguments"": {""url"": ""https://www.example.com"", ""maxlinks"": 15, ""includequery"": true}}]","[{""name"": ""scrape_links"", ""description"": ""Scrapes a specified number of links from the provided URL using the Scrapey Link Scraper API."", ""parameters"": {""url"": {""description"": ""The target URL from which to scrape links."", ""type"": ""str"", ""default"": ""amazon.com""}, ""maxlinks"": {""description"": ""The maximum number of links to scrape. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}, ""includequery"": {""description"": ""Whether to include query parameters in the links. Defaults to None."", ""type"": ""bool, optional"", ""default"": ""true""}}}, {""name"": ""photo_from_given_number"", ""description"": ""Searches for a photo on the internet using the provided phone number and returns the photo in bytes if a match is found."", ""parameters"": {""phone"": {""description"": ""The phone number to search for."", ""type"": ""str"", ""default"": ""+79999999999""}}}, {""name"": ""convert_from_one_unit_to_another"", ""description"": ""Converts a given quantity from one unit to another using the RapidAPI measurement unit converter."", ""parameters"": {""to"": {""description"": ""The target unit for conversion. Can be specified in abbreviation, singular, or plural forms (e.g., 'km', 'kilometer', 'kilometers')."", ""type"": ""str"", ""default"": ""km""}, ""is_from"": {""description"": ""The source unit for conversion. Can be specified in abbreviation, singular, or plural forms (e.g., 'm', 'meter', 'meters')."", ""type"": ""str"", ""default"": ""m""}, ""value"": {""description"": ""The numeric value to be converted."", ""type"": ""int"", ""default"": ""1200""}, ""measure"": {""description"": ""The type of measurement (e.g., 'length', 'mass')."", ""type"": ""str"", ""default"": ""length""}}}]"
72,13715,Query the National Football Players API for all tight ends (TE).,"[{""name"": ""players_at_position"", ""arguments"": {""position"": ""TE""}}]","[{""name"": ""players_at_position"", ""description"": ""Fetches all players at a specified position from the National Football Players API."", ""parameters"": {""position"": {""description"": ""The abbreviated position name to query players for (e.g., QB, RB, WR)."", ""type"": ""str"", ""default"": ""QB""}}}, {""name"": ""prematchform"", ""description"": ""Fetch the pregame form for a specific handball match using its ID."", ""parameters"": {""is_id"": {""description"": ""The ID of the handball match for which to retrieve the pre-match form."", ""type"": ""int"", ""default"": 10485760}}}]"
73,13786,An individual needs to find shoes priced from low to high. What query should be used to get the first page of such results?,"[{""name"": ""zappos_search_product"", ""arguments"": {""keyword"": ""shoes"", ""sort"": ""low_to_high"", ""page"": 1}}]","[{""name"": ""zappos_search_product"", ""description"": ""Searches for products on Zappos using the given keyword and various optional parameters for sorting and pagination."", ""parameters"": {""keyword"": {""description"": ""The search term to use for finding products on Zappos."", ""type"": ""str"", ""default"": ""crocs body""}, ""sort"": {""description"": ""The sorting criteria for the search results. Possible values are 'best_seller', 'relevance', 'low_to_high', 'high_to_low', 'customer_rating', 'new_arrivals', and 'brand_name'. Defaults to 'new_arrivals'."", ""type"": ""str, optional"", ""default"": ""new_arrivals""}, ""page"": {""description"": ""The page number for pagination of search results. Defaults to 1."", ""type"": ""int, optional"", ""default"": ""1""}}}]"
74,13813,Simulate a database query for customers from New York with a purchase history.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""customers"", ""conditions"": [{""city"": ""New York""}, {""purchase_history"": "">0""}]}}]","[{""name"": ""geocode_city"", ""description"": ""Retrieves the latitude and longitude coordinates of a given city using the Maps.co Geocoding API."", ""parameters"": {""city"": {""description"": ""The name of the city."", ""type"": ""str""}}}, {""name"": ""get_holidays_by_year"", ""description"": ""Retrieves the list of public holidays for a given year and country using the Nager.Date API."", ""parameters"": {""year"": {""description"": ""The year for which to retrieve the holidays."", ""type"": ""int""}, ""country_code"": {""description"": ""The two-letter ISO 3166-1 alpha-2 country code."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
75,14031,Simulate a database query for products in the 'products' table that are out of stock and priced above $100.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""products"", ""conditions"": [{""stock"": ""out""}, {""price"": {""$gt"": 100}}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}]"
76,14195,Provide search suggestions on Twitter for the query 'climate change' without using a session or proxy.,"[{""name"": ""search_suggestions"", ""arguments"": {""query"": ""climate change""}}]","[{""name"": ""sign_info"", ""description"": ""Fetches and returns the sign information from the OnlyFans API using the provided user agent and RapidAPI key."", ""parameters"": {""useragent"": {""description"": ""The user agent string to be used in the API request."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""get_image"", ""description"": ""Retrieve an image by its file ID using the specified RapidAPI key."", ""parameters"": {""fileid"": {""description"": ""The ID of the image file to retrieve."", ""type"": ""str"", ""default"": ""639f7fda5ec4b33ef2e476b8""}}}, {""name"": ""search_suggestions"", ""description"": ""Fetches search suggestions from the Twitter API using specified query parameters."", ""parameters"": {""query"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": ""elonmusk""}, ""twttr_session"": {""description"": ""The Twitter session ID for authenticated requests. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""twttr_proxy"": {""description"": ""The Twitter proxy server address. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""cursor"": {""description"": ""The cursor for paginated results. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""video_post_metadata"", ""description"": ""Fetch metadata for a single TikTok video post."", ""parameters"": {""video"": {""description"": ""The URL of the TikTok video post. For example: 'https://www.tiktok.com/@charlidamelio/video/7137423965982592302'."", ""type"": ""str"", ""default"": ""https://www.tiktok.com/@charlidamelio/video/7010108194051640582""}, ""fresh"": {""description"": ""If set to 1, force the return of fresh data (not cached). Defaults to 0."", ""type"": ""int, optional"", ""default"": ""0""}}}]"
77,14460,"Can you simulate a database query on the 'users' table where the conditions are that the user's age is greater than 30 and their city is 'New York'? Also, what are the coordinates of Tokyo?","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": "">30""}, {""city"": ""New York""}]}}, {""name"": ""geocode_city"", ""arguments"": {""city"": ""Tokyo""}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""geocode_city"", ""description"": ""Retrieves the latitude and longitude coordinates of a given city using the Maps.co Geocoding API."", ""parameters"": {""city"": {""description"": ""The name of the city."", ""type"": ""str""}}}, {""name"": ""get_holidays_by_year"", ""description"": ""Retrieves the list of public holidays for a given year and country using the Nager.Date API."", ""parameters"": {""year"": {""description"": ""The year for which to retrieve the holidays."", ""type"": ""int""}, ""country_code"": {""description"": ""The two-letter ISO 3166-1 alpha-2 country code."", ""type"": ""str""}}}]"
78,14648,"What are the public holidays in the UK for the year 2023? Additionally, simulate a database query on the 'products' table with conditions that the product price is less than $100 and the category is 'Electronics'.","[{""name"": ""get_holidays_by_year"", ""arguments"": {""year"": 2023, ""country_code"": ""GB""}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""products"", ""conditions"": [{""price"": ""<100""}, {""category"": ""Electronics""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""geocode_city"", ""description"": ""Retrieves the latitude and longitude coordinates of a given city using the Maps.co Geocoding API."", ""parameters"": {""city"": {""description"": ""The name of the city."", ""type"": ""str""}}}, {""name"": ""get_holidays_by_year"", ""description"": ""Retrieves the list of public holidays for a given year and country using the Nager.Date API."", ""parameters"": {""year"": {""description"": ""The year for which to retrieve the holidays."", ""type"": ""int""}, ""country_code"": {""description"": ""The two-letter ISO 3166-1 alpha-2 country code."", ""type"": ""str""}}}]"
79,15261,"I want to know the total cost of 4 books at $15 each and 2 notebooks at $5 each. Additionally, can you simulate a database query to check if these items are available for immediate delivery?","[{""name"": ""calculate_order_total"", ""arguments"": {""items"": [""books"", ""notebooks""], ""quantities"": [4, 2], ""prices"": [15, 5]}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""delivery"", ""conditions"": [{""item"": ""books"", ""delivery_status"": ""immediate""}, {""item"": ""notebooks"", ""delivery_status"": ""immediate""}]}}]","[{""name"": ""calculate_order_total"", ""description"": ""Calculates the total cost of an order based on the items, quantities, and prices."", ""parameters"": {""items"": {""description"": ""A list of item names."", ""type"": ""List[str]""}, ""quantities"": {""description"": ""A list of corresponding quantities for each item."", ""type"": ""List[int]""}, ""prices"": {""description"": ""A list of corresponding prices for each item."", ""type"": ""List[float]""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
80,15648,Simulate a database query on the 'users' table with conditions: age > 30 and city = 'Los Angeles'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": ""> 30""}, {""city"": ""Los Angeles""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_valid_email"", ""description"": ""Checks if an email address is valid."", ""parameters"": {""email"": {""description"": ""The email address to validate."", ""type"": ""str""}}}, {""name"": ""project_investment_growth"", ""description"": ""Projects the growth of an investment over a specified number of years."", ""parameters"": {""principal"": {""description"": ""The initial investment amount."", ""type"": ""float"", ""default"": true}, ""annual_addition"": {""description"": ""The amount added to the investment annually."", ""type"": ""float"", ""default"": true}, ""years"": {""description"": ""The number of years to project the investment growth."", ""type"": ""int""}, ""return_rate"": {""description"": ""The annual return rate as a decimal (e.g., 0.07 for 7%)."", ""type"": ""float""}, ""inflation"": {""description"": ""A list of annual inflation rates as decimals."", ""type"": ""List[float]""}, ""inflation_adjusted"": {""description"": ""Whether to adjust the final value for inflation. Defaults to True."", ""type"": ""bool, optional""}}}, {""name"": ""geocode_city"", ""description"": ""Retrieves the latitude and longitude coordinates of a given city using the Maps.co Geocoding API."", ""parameters"": {""city"": {""description"": ""The name of the city."", ""type"": ""str""}}}, {""name"": ""project_population"", ""description"": ""Projects the population size after a specified number of years."", ""parameters"": {""current_pop"": {""description"": ""The current population size."", ""type"": ""int"", ""default"": 1.2}, ""num_years"": {""description"": ""The number of years into the future to make the projection."", ""type"": ""int"", ""default"": 1.2}, ""annual_growth"": {""description"": ""The annual population growth rate as a percentage. Defaults to 1.2."", ""type"": ""float, optional""}}}, {""name"": ""is_valid_ip_address"", ""description"": ""Checks if a string is a valid IP address (IPv4)."", ""parameters"": {""ip"": {""description"": ""The string to check."", ""type"": ""str""}}}, {""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}]"
81,15700,Simulate a database query on a 'users' table with conditions: age > 30 and city = 'New York'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": "">30""}, {""city"": ""New York""}]}}]","[{""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}, {""name"": ""project_population"", ""description"": ""Projects the population size after a specified number of years."", ""parameters"": {""current_pop"": {""description"": ""The current population size."", ""type"": ""int"", ""default"": 1.2}, ""num_years"": {""description"": ""The number of years into the future to make the projection."", ""type"": ""int"", ""default"": 1.2}, ""annual_growth"": {""description"": ""The annual population growth rate as a percentage. Defaults to 1.2."", ""type"": ""float, optional""}}}, {""name"": ""get_ip_zipcode"", ""description"": ""Retrieves the ZIP code of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}, {""name"": ""calculate_calorie_intake"", ""description"": ""Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals."", ""parameters"": {""weight_kg"": {""description"": ""Body weight in kilograms."", ""type"": ""float""}, ""height_cm"": {""description"": ""Height in centimeters."", ""type"": ""float""}, ""age"": {""description"": ""Age in years."", ""type"": ""int""}, ""sex"": {""description"": ""Biological sex, either 'male' or 'female'."", ""type"": ""str""}, ""activity_level"": {""description"": ""Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active)."", ""type"": ""int""}, ""goal"": {""description"": ""Fitness goal, either 'lose', 'maintain', or 'gain'."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}]"
82,16457,"Query the city boundary for Los Angeles and fetch details of records with IDs '23456', '78901'.","[{""name"": ""query_for_city_boundary_by_name"", ""arguments"": {""name"": ""Los Angeles""}}, {""name"": ""fetch_details_of_multiple_records"", ""arguments"": {""is_id"": ""23456,78901""}}]","[{""name"": ""get_fonts"", ""description"": ""Fetch fonts for vector tiles using a specified range and font stack from the Mapilion API."", ""parameters"": {""range"": {""description"": ""The range of font unicode characters to fetch."", ""type"": ""str"", ""default"": ""0-255""}, ""fontstack"": {""description"": ""The font stack to be used for the tiles."", ""type"": ""str"", ""default"": ""Roboto Regular""}}}, {""name"": ""query_for_city_boundary_by_name"", ""description"": ""Queries the city boundary information by the given city name using the Boundaries API."", ""parameters"": {""name"": {""description"": ""The name of the city for which to query boundary information."", ""type"": ""str"", ""default"": ""Karlsruhe""}}}, {""name"": ""fetch_details_of_multiple_records"", ""description"": ""Fetches details of multiple records given their IDs using the Magical Taske API."", ""parameters"": {""is_id"": {""description"": ""A comma-separated string of record IDs for which to fetch details. Maximum 10 IDs allowed, no spaces between commas."", ""type"": ""str"", ""default"": ""b4180336-ef07-453d-b833-807161aedf36,7cf78e19-57d2-4bce-8999-63aad8f0e70c""}}}]"
83,16495,Simulate a database query to find all entries in the 'Orders' table where the 'status' is 'Pending' and the 'order_date' is before '2023-01-01'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""Orders"", ""conditions"": [{""status"": ""="", ""value"": ""Pending""}, {""order_date"": ""<"", ""value"": ""2023-01-01""}]}}]","[{""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_hotel_available"", ""description"": ""Checks the availability of a hotel for a given date range."", ""parameters"": {""hotel"": {""description"": ""The name of the hotel."", ""type"": ""str""}, ""city"": {""description"": ""The city where the hotel is located."", ""type"": ""str""}, ""checkin"": {""description"": ""The check-in date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}, ""checkout"": {""description"": ""The check-out date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}}}]"
84,16617,Simulate a database query on the 'users' table to find all users who are active and have a role of 'admin'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""status"": ""active""}, {""role"": ""admin""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
85,16915,I want to find information about a horse named 'Lightning Bolt'. Can you query this for me?,"[{""name"": ""query_horses"", ""arguments"": {""name"": ""Lightning Bolt""}}]","[{""name"": ""matchdetails"", ""description"": ""Fetch detailed information for a specific American Football match from the API."", ""parameters"": {""is_id"": {""description"": ""The ID of the match for which the details are to be retrieved."", ""type"": ""int"", ""default"": 10060042}}}, {""name"": ""bet365_upcoming_events"", ""description"": ""Retrieves upcoming sports events from Bet365 based on the given parameters."", ""parameters"": {""sport_id"": {""description"": ""The ID of the sport to get upcoming events for."", ""type"": ""int"", ""default"": """"}, ""day"": {""description"": ""The specific day to get events for. Defaults to None."", ""type"": ""int, optional"", ""default"": """"}, ""league_id"": {""description"": ""The ID of the league to filter events. Defaults to None."", ""type"": ""int, optional"", ""default"": """"}, ""page"": {""description"": ""The page number for pagination. Defaults to None."", ""type"": ""int, optional"", ""default"": """"}}}, {""name"": ""getfavouriteschamps"", ""description"": ""Fetches the favorite champions data from the specified RapidAPI endpoint."", ""parameters"": {""skinname"": {""description"": ""The skin name to include in the query parameters. Defaults to 'betbiga'."", ""type"": ""str, optional"", ""default"": ""betbiga""}}}, {""name"": ""query_horses"", ""description"": ""Queries horses by name using the Horse Racing API and returns the results."", ""parameters"": {""name"": {""description"": ""The name of the horse to search for. Must be a minimum of 3 characters."", ""type"": ""str"", ""default"": ""ZANAHIYR""}}}]"
86,17285,What are the search suggestions on Twitter for the query 'climate change'?,"[{""name"": ""search_suggestions"", ""arguments"": {""query"": ""climate change""}}]","[{""name"": ""avatar"", ""description"": ""Generates an avatar with the initials derived from the given name and various customization options."", ""parameters"": {""name"": {""description"": ""The name from which to derive the initials. Default is 'john doe'."", ""type"": ""str, optional"", ""default"": ""john doe""}, ""rounded"": {""description"": ""If True, the avatar will be rounded. Default is None."", ""type"": ""bool, optional"", ""default"": true}, ""uppercase"": {""description"": ""If True, the initials will be in uppercase. Default is None."", ""type"": ""bool, optional"", ""default"": true}, ""font_size"": {""description"": ""The font size of the initials, ranging from 0 to 1. Default is 0."", ""type"": ""int, optional"", ""default"": ""0.5""}, ""length"": {""description"": ""The number of initials to display. Default is 2."", ""type"": ""int, optional"", ""default"": ""2""}, ""size"": {""description"": ""The font size of the initials, ranging from 0 to 1. Default is 0."", ""type"": ""int, optional"", ""default"": ""128""}, ""background"": {""description"": ""The background color of the avatar in RRGGBB hex format. Default is '000000'."", ""type"": ""str, optional"", ""default"": ""000000""}, ""color"": {""description"": ""The color of the initials in RRGGBB hex format. Default is 'ffffff'."", ""type"": ""str, optional"", ""default"": ""ffffff""}}}, {""name"": ""search_suggestions"", ""description"": ""Fetches search suggestions from the Twitter API using specified query parameters."", ""parameters"": {""query"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": ""elonmusk""}, ""twttr_session"": {""description"": ""The Twitter session ID for authenticated requests. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""twttr_proxy"": {""description"": ""The Twitter proxy server address. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""cursor"": {""description"": ""The cursor for paginated results. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""getlenscreators"", ""description"": ""Fetches Lens creators from the Snapchat API using the provided parameters."", ""parameters"": {""cursor"": {""description"": ""A cursor indicating the starting point for fetching Lens creators. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}]"
87,17406,Can you simulate a database query for the 'sales' table with conditions like 'product_id = 123' and 'sale_date between 2023-01-01 and 2023-01-31'? I need this for my sales report analysis.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""sales"", ""conditions"": [{""product_id"": 123}, {""sale_date"": [""2023-01-01"", ""2023-01-31""]}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""predict_evolution_rate"", ""description"": ""Predict the evolutionary rate for a specific species for a given timeframe."", ""parameters"": {""species"": {""description"": ""The species that the evolution rate will be predicted for."", ""type"": ""str"", ""default"": ""Darwin""}, ""years"": {""description"": ""Number of years for the prediction."", ""type"": ""int"", ""default"": ""Darwin""}, ""model"": {""description"": ""The model used to make the prediction, options: 'Darwin', 'Lamarck', default is 'Darwin'."", ""type"": ""str""}}}, {""name"": ""predict_forest_area"", ""description"": ""Predicts the change in forest area over a specified number of years."", ""parameters"": {""location"": {""description"": ""The geographic location for the prediction."", ""type"": ""str""}, ""num_years"": {""description"": ""The number of years into the future to make the prediction."", ""type"": ""int""}, ""include_humans"": {""description"": ""Whether to include the impact of human activities in the prediction. Defaults to False."", ""type"": ""bool, optional""}}}, {""name"": ""place_safeway_order"", ""description"": ""Order specified items from a Safeway location."", ""parameters"": {""location"": {""description"": ""The location of the Safeway store, e.g., 'Palo Alto, CA'."", ""type"": ""str""}, ""items"": {""description"": ""List of items to order."", ""type"": ""list""}, ""quantity"": {""description"": ""Quantity of each item in the order list."", ""type"": ""list""}}}, {""name"": ""analyze_social_group_dynamics"", ""description"": ""Analyzes the social dynamics within a group based on the personality traits and group size."", ""parameters"": {""total"": {""description"": ""The total group size."", ""type"": ""int""}, ""extroverts"": {""description"": ""The number of extroverted members in the group."", ""type"": ""int""}, ""introverts"": {""description"": ""The number of introverted members in the group."", ""type"": ""int""}}}, {""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""calculate_calorie_intake"", ""description"": ""Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals."", ""parameters"": {""weight_kg"": {""description"": ""Body weight in kilograms."", ""type"": ""float""}, ""height_cm"": {""description"": ""Height in centimeters."", ""type"": ""float""}, ""age"": {""description"": ""Age in years."", ""type"": ""int""}, ""sex"": {""description"": ""Biological sex, either 'male' or 'female'."", ""type"": ""str""}, ""activity_level"": {""description"": ""Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active)."", ""type"": ""int""}, ""goal"": {""description"": ""Fitness goal, either 'lose', 'maintain', or 'gain'."", ""type"": ""str""}}}, {""name"": ""is_hotel_available"", ""description"": ""Checks the availability of a hotel for a given date range."", ""parameters"": {""hotel"": {""description"": ""The name of the hotel."", ""type"": ""str""}, ""city"": {""description"": ""The city where the hotel is located."", ""type"": ""str""}, ""checkin"": {""description"": ""The check-in date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}, ""checkout"": {""description"": ""The check-out date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}}}]"
88,17922,"What are the ASNs for the country with ISO code 'US'? Additionally, could you find protocols on the 'eth' chain with a search query 'defi'?","[{""name"": ""get_asn_by_country"", ""arguments"": {""country_code"": ""US""}}, {""name"": ""protocols"", ""arguments"": {""q"": ""defi"", ""chain_id"": ""eth""}}]","[{""name"": ""document"", ""description"": ""Fetches the authorized blob URI for a court document using the provided document ID and RapidAPI key."", ""parameters"": {""documentid"": {""description"": ""The ID of the document to fetch. Defaults to '41aac429-40dd-ea11-a813-000d3a79365a'."", ""type"": ""str, optional"", ""default"": ""41aac429-40dd-ea11-a813-000d3a79365a""}}}, {""name"": ""protocols"", ""description"": ""Fetches protocol information from the \""All-in-One Crypto Swiss Knife\"" RapidAPI service, optionally filtering by a search query and chain identifier."", ""parameters"": {""q"": {""description"": ""Search parameter to filter the protocols. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""chain_id"": {""description"": ""Chain identifier to filter the protocols. Supported chains: \""eth\"", \""bsc\"", \""matic\"", \""avax\"", \""okt\"", \""hmy\"", \""heco\"", \""klay\"", \""op\"", \""arb\"", \""ftm\"", \""xdai\"", \""cro\"", \""mobm\"", \""celo\"", \""aurora\"", \""fuse\"", \""evmos\"", \""cfx\"", \""kava\"". Defaults to 'fuse'."", ""type"": ""str, optional"", ""default"": ""fuse""}}}, {""name"": ""get_asn_by_country"", ""description"": ""Retrieves all Autonomous System Numbers (ASNs) associated with a given country."", ""parameters"": {""country_code"": {""description"": ""The ISO 3166-1 alpha-2 country code (e.g., 'US', 'GB') to retrieve all ASNs for."", ""type"": ""str"", ""default"": ""sm""}}}]"
89,18038,"Simulate a database query for the 'Customers' table with conditions: {'city': 'London', 'age': {'$gt': 30}}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""Customers"", ""conditions"": [{""city"": ""London"", ""age"": {""$gt"": 30}}]}}]","[{""name"": ""get_holidays_by_year"", ""description"": ""Retrieves the list of public holidays for a given year and country using the Nager.Date API."", ""parameters"": {""year"": {""description"": ""The year for which to retrieve the holidays."", ""type"": ""int""}, ""country_code"": {""description"": ""The two-letter ISO 3166-1 alpha-2 country code."", ""type"": ""str""}}}, {""name"": ""calculate_order_total"", ""description"": ""Calculates the total cost of an order based on the items, quantities, and prices."", ""parameters"": {""items"": {""description"": ""A list of item names."", ""type"": ""List[str]""}, ""quantities"": {""description"": ""A list of corresponding quantities for each item."", ""type"": ""List[int]""}, ""prices"": {""description"": ""A list of corresponding prices for each item."", ""type"": ""List[float]""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""calculate_calorie_intake"", ""description"": ""Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals."", ""parameters"": {""weight_kg"": {""description"": ""Body weight in kilograms."", ""type"": ""float""}, ""height_cm"": {""description"": ""Height in centimeters."", ""type"": ""float""}, ""age"": {""description"": ""Age in years."", ""type"": ""int""}, ""sex"": {""description"": ""Biological sex, either 'male' or 'female'."", ""type"": ""str""}, ""activity_level"": {""description"": ""Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active)."", ""type"": ""int""}, ""goal"": {""description"": ""Fitness goal, either 'lose', 'maintain', or 'gain'."", ""type"": ""str""}}}]"
90,18293,I need auto-complete suggestions for the query 'Apple Inc.' and the latest news articles for the stock symbol 'AAPL'.,"[{""name"": ""market_auto_complete"", ""arguments"": {""query"": ""Apple Inc.""}}, {""name"": ""news_v2_list_by_symbol"", ""arguments"": {""symbol"": ""AAPL""}}]","[{""name"": ""spac_price_targets"", ""description"": ""Fetches the latest SPAC (Special Purpose Acquisition Company) price targets from analysts, filtered by a specific SPAC symbol."", ""parameters"": {""symbol"": {""description"": ""The SPAC symbol to filter the price targets by. Defaults to 'SOFI'."", ""type"": ""str"", ""default"": ""SOFI""}}}, {""name"": ""coins_get_fullsize_chart"", ""description"": ""Fetches the full-size chart data for a specific cryptocurrency pair."", ""parameters"": {""pair_id"": {""description"": ""The identifier of the cryptocurrency pair."", ""type"": ""int"", ""default"": ""33""}, ""pair_interval"": {""description"": ""The interval for the chart data in seconds."", ""type"": ""int, optional"", ""default"": ""900""}, ""lang_id"": {""description"": ""The language ID for the data. Default is 1."", ""type"": ""int, optional"", ""default"": ""1""}, ""time_utc_offset"": {""description"": ""The time offset in UTC seconds. For example, UTC+8 corresponds to 28800 seconds. Default is 28800."", ""type"": ""int, optional"", ""default"": ""28800""}}}, {""name"": ""market_auto_complete"", ""description"": ""Fetch auto-complete suggestions for stock market queries."", ""parameters"": {""query"": {""description"": ""The search query for which auto-complete suggestions are needed."", ""type"": ""str"", ""default"": ""nasdaq""}}}, {""name"": ""news_v2_list_by_symbol"", ""description"": ""Fetches the latest news articles associated with a given stock symbol."", ""parameters"": {""symbol"": {""description"": ""The stock symbol for which to retrieve news. This is typically obtained from the auto-complete or other relevant endpoints."", ""type"": ""str"", ""default"": ""AAPL""}, ""page"": {""description"": ""The page number for paginated results. Defaults to 1."", ""type"": ""int, optional"", ""default"": ""1""}, ""pagesize"": {""description"": ""The number of news articles to return per page. Defaults to 30."", ""type"": ""int, optional"", ""default"": ""30""}}}, {""name"": ""short_ticker"", ""description"": ""Fetches the latest and daily average prices for the specified cryptocurrency in the given market and against the provided fiat currencies."", ""parameters"": {""market"": {""description"": ""The market type, possible values include 'global' and 'local'."", ""type"": ""str"", ""default"": ""global""}, ""crypto"": {""description"": ""The cryptocurrency to get ticker information for, default is 'ETH'."", ""type"": ""str, optional"", ""default"": ""ETH""}, ""fiats"": {""description"": ""A comma-separated string of fiat currencies to return values for, default is 'USD,EUR'."", ""type"": ""str, optional"", ""default"": ""USD,EUR""}}}]"
91,18356,Retrieve the search results for the query 'Python programming tutorial' from YouTube.,"[{""name"": ""search_results"", ""arguments"": {""query"": ""Python programming tutorial""}}]","[{""name"": ""replies"", ""description"": ""Fetch replies for a given Instagram comment."", ""parameters"": {""after"": {""description"": ""The cursor value after which to fetch the replies. This can be obtained from the `edge_threaded_comments.page_info.end_cursor` field in the response from the comments endpoint."", ""type"": ""str"", ""default"": """"}, ""commentid"": {""description"": ""The unique identifier for the comment. This can be obtained from the `node.id` field in the response from the comments endpoint."", ""type"": ""str"", ""default"": ""17898559397187730""}}}, {""name"": ""find_zip_codes_by_city_and_district"", ""description"": ""Fetch the zip codes for a specified city and district in Poland."", ""parameters"": {""accept"": {""description"": ""Requested content type."", ""type"": ""str"", ""default"": ""application/json""}, ""city"": {""description"": ""The name of the city to search for zip codes."", ""type"": ""str"", ""default"": ""Wroc\u0142aw""}, ""district"": {""description"": ""The district within the specified city to search for zip codes."", ""type"": ""str"", ""default"": ""Opor\u00f3w""}, ""x_traceid"": {""description"": ""A trace ID that is copied to the API response header. Default is 'optional_abc123'."", ""type"": ""str, optional"", ""default"": ""optional_abc123""}}}, {""name"": ""top_backlinks"", ""description"": ""Fetches the list of top backlinks for a given domain using the Best Backlink Checker API."", ""parameters"": {""domain"": {""description"": ""The domain for which to retrieve the top backlinks."", ""type"": ""str"", ""default"": ""getecz.com""}}}, {""name"": ""search_results"", ""description"": ""Fetches the top 22 YouTube search results based on a provided query."", ""parameters"": {""query"": {""description"": ""The search query string to use for retrieving YouTube search results."", ""type"": ""str"", ""default"": ""interview preparation""}}}]"
92,18370,"Project the investment growth for a principal of $5000, with no annual additions, over 10 years at a return rate of 6%, considering inflation rates of [1%, 1.5%, 2%, 2.5%, 3%, 3.5%, 4%, 4.5%, 5%, 5.5%]. Also, simulate a database query to find all products in the 'Inventory' table with a 'Price' greater than $100.","[{""name"": ""project_investment_growth"", ""arguments"": {""principal"": 5000, ""annual_addition"": 0, ""years"": 10, ""return_rate"": 0.06, ""inflation"": [0.01, 0.015, 0.02, 0.025, 0.03, 0.035, 0.04, 0.045, 0.05, 0.055]}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""Inventory"", ""conditions"": [{""Price"": {""$gt"": 100}}]}}]","[{""name"": ""predict_forest_area"", ""description"": ""Predicts the change in forest area over a specified number of years."", ""parameters"": {""location"": {""description"": ""The geographic location for the prediction."", ""type"": ""str""}, ""num_years"": {""description"": ""The number of years into the future to make the prediction."", ""type"": ""int""}, ""include_humans"": {""description"": ""Whether to include the impact of human activities in the prediction. Defaults to False."", ""type"": ""bool, optional""}}}, {""name"": ""get_holidays_by_year"", ""description"": ""Retrieves the list of public holidays for a given year and country using the Nager.Date API."", ""parameters"": {""year"": {""description"": ""The year for which to retrieve the holidays."", ""type"": ""int""}, ""country_code"": {""description"": ""The two-letter ISO 3166-1 alpha-2 country code."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""project_investment_growth"", ""description"": ""Projects the growth of an investment over a specified number of years."", ""parameters"": {""principal"": {""description"": ""The initial investment amount."", ""type"": ""float"", ""default"": true}, ""annual_addition"": {""description"": ""The amount added to the investment annually."", ""type"": ""float"", ""default"": true}, ""years"": {""description"": ""The number of years to project the investment growth."", ""type"": ""int""}, ""return_rate"": {""description"": ""The annual return rate as a decimal (e.g., 0.07 for 7%)."", ""type"": ""float""}, ""inflation"": {""description"": ""A list of annual inflation rates as decimals."", ""type"": ""List[float]""}, ""inflation_adjusted"": {""description"": ""Whether to adjust the final value for inflation. Defaults to True."", ""type"": ""bool, optional""}}}, {""name"": ""get_dna_sequence"", ""description"": ""Retrieves the DNA sequence for a given sequence ID from the NCBI Nucleotide database."", ""parameters"": {""sequence_id"": {""description"": ""The unique identifier for the DNA sequence."", ""type"": ""str"", ""default"": ""fasta""}, ""file_format"": {""description"": ""The format of the returned sequence. Allowed values: \""fasta\"" (default) or \""gb\""."", ""type"": ""str, optional""}, ""upstream_bases"": {""description"": ""The number of bases upstream of the sequence to include. Defaults to 0."", ""type"": ""int, optional"", ""default"": ""fasta""}}}, {""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}]"
93,18452,"What's the total cost if I buy 5 shirts at $20 each, 3 pants at $30 each, and 2 hats at $10 each? Additionally, simulate a database query to retrieve all entries from the 'inventory' table where the price is less than $25.","[{""name"": ""calculate_order_total"", ""arguments"": {""items"": [""shirts"", ""pants"", ""hats""], ""quantities"": [5, 3, 2], ""prices"": [20, 30, 10]}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""inventory"", ""conditions"": [{""price"": {""$lt"": 25}}]}}]","[{""name"": ""calculate_order_total"", ""description"": ""Calculates the total cost of an order based on the items, quantities, and prices."", ""parameters"": {""items"": {""description"": ""A list of item names."", ""type"": ""List[str]""}, ""quantities"": {""description"": ""A list of corresponding quantities for each item."", ""type"": ""List[int]""}, ""prices"": {""description"": ""A list of corresponding prices for each item."", ""type"": ""List[float]""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
94,18484,"Simulate a database query on a 'products' table with conditions {'price': 100, 'category': 'Electronics'} and {'price': 50, 'category': 'Books'}","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""products"", ""conditions"": [{""price"": 100, ""category"": ""Electronics""}, {""price"": 50, ""category"": ""Books""}]}}]","[{""name"": ""get_dna_sequence"", ""description"": ""Retrieves the DNA sequence for a given sequence ID from the NCBI Nucleotide database."", ""parameters"": {""sequence_id"": {""description"": ""The unique identifier for the DNA sequence."", ""type"": ""str"", ""default"": ""fasta""}, ""file_format"": {""description"": ""The format of the returned sequence. Allowed values: \""fasta\"" (default) or \""gb\""."", ""type"": ""str, optional""}, ""upstream_bases"": {""description"": ""The number of bases upstream of the sequence to include. Defaults to 0."", ""type"": ""int, optional"", ""default"": ""fasta""}}}, {""name"": ""get_ip_zipcode"", ""description"": ""Retrieves the ZIP code of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""structural_analysis"", ""description"": ""Performs structural analysis on a building based on its ID, floor numbers, and analysis mode."", ""parameters"": {""building_id"": {""description"": ""The unique identifier of the building."", ""type"": ""str"", ""default"": ""static""}, ""floor_numbers"": {""description"": ""The list of floor numbers to be analyzed."", ""type"": ""List[int]"", ""default"": ""static""}, ""analysis_mode"": {""description"": ""The mode of analysis, either \""static\"" or \""dynamic\"". Defaults to \""static\""."", ""type"": ""str, optional""}}}, {""name"": ""whole_foods_order"", ""description"": ""Places an order at Whole Foods."", ""parameters"": {""store_location"": {""description"": ""The location of the Whole Foods store."", ""type"": ""str""}, ""item_list"": {""description"": ""A list of items to order."", ""type"": ""list""}, ""order_size"": {""description"": ""The size of the order. Allowed values: \""small\"", \""medium\"", or \""large\""."", ""type"": ""str""}}}, {""name"": ""is_valid_ip_address"", ""description"": ""Checks if a string is a valid IP address (IPv4)."", ""parameters"": {""ip"": {""description"": ""The string to check."", ""type"": ""str""}}}]"
95,18982,"Simulate a database query on a 'users' table where the conditions are {'age': '>30', 'city': 'New York'}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": "">30"", ""city"": ""New York""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}]"
96,19493,"Can you simulate a database query for the 'sales' table with conditions where product_type is 'electronics' and date is '2023-01-01'? Also, find the coordinates of New York City.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""sales"", ""conditions"": [{""product_type"": ""electronics"", ""date"": ""2023-01-01""}]}}, {""name"": ""geocode_city"", ""arguments"": {""city"": ""New York City""}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""geocode_city"", ""description"": ""Retrieves the latitude and longitude coordinates of a given city using the Maps.co Geocoding API."", ""parameters"": {""city"": {""description"": ""The name of the city."", ""type"": ""str""}}}, {""name"": ""project_investment_growth"", ""description"": ""Projects the growth of an investment over a specified number of years."", ""parameters"": {""principal"": {""description"": ""The initial investment amount."", ""type"": ""float"", ""default"": true}, ""annual_addition"": {""description"": ""The amount added to the investment annually."", ""type"": ""float"", ""default"": true}, ""years"": {""description"": ""The number of years to project the investment growth."", ""type"": ""int""}, ""return_rate"": {""description"": ""The annual return rate as a decimal (e.g., 0.07 for 7%)."", ""type"": ""float""}, ""inflation"": {""description"": ""A list of annual inflation rates as decimals."", ""type"": ""List[float]""}, ""inflation_adjusted"": {""description"": ""Whether to adjust the final value for inflation. Defaults to True."", ""type"": ""bool, optional""}}}, {""name"": ""place_safeway_order"", ""description"": ""Order specified items from a Safeway location."", ""parameters"": {""location"": {""description"": ""The location of the Safeway store, e.g., 'Palo Alto, CA'."", ""type"": ""str""}, ""items"": {""description"": ""List of items to order."", ""type"": ""list""}, ""quantity"": {""description"": ""Quantity of each item in the order list."", ""type"": ""list""}}}]"
97,19527,Retrieve the Power BI news from page 5 and suggest locations based on the query 'San Francisco'.,"[{""name"": ""getnews"", ""arguments"": {""page"": 5}}, {""name"": ""locationsuggestions"", ""arguments"": {""location"": ""San Francisco""}}]","[{""name"": ""getnews"", ""description"": ""Fetches Power BI news from the specified page using the given RapidAPI key."", ""parameters"": {""page"": {""description"": ""The page number of the news to retrieve."", ""type"": ""int"", ""default"": ""1""}}}, {""name"": ""draw_date_listing"", ""description"": ""Fetches a listing of Thai lottery draw dates from the RapidAPI service."", ""parameters"": {""page"": {""description"": ""The page number of the results to fetch. Defaults to 1."", ""type"": ""int, optional"", ""default"": ""1""}}}, {""name"": ""locationsuggestions"", ""description"": ""Fetches location suggestions using the Zillow API based on the provided location query."", ""parameters"": {""location"": {""description"": ""The location query string. This can be a state, county, neighborhood, city, street name, or zip code."", ""type"": ""str"", ""default"": ""Brownsville, TX""}}}]"
98,19999,Fetch auto-complete results for 'headph' (incomplete query) and product details for 'PlayStation 5'.,"[{""name"": ""auto_complete_deprecating"", ""arguments"": {""query"": ""headph""}}, {""name"": ""product_data"", ""arguments"": {""product"": ""PlayStation 5""}}]","[{""name"": ""auto_complete_deprecating"", ""description"": ""Fetch auto-complete suggestions for a given query from the specified API."", ""parameters"": {""query"": {""description"": ""The term or phrase for which to get suggestions."", ""type"": ""str"", ""default"": ""bikini tops""}}}, {""name"": ""product_data"", ""description"": ""Fetches detailed information about a specific product from the Ecommerce Product API."", ""parameters"": {""product"": {""description"": ""The name of the product to retrieve information for."", ""type"": ""str"", ""default"": ""phone""}, ""page"": {""description"": ""The page number for paginated results. Defaults to 1."", ""type"": ""int, optional"", ""default"": ""1""}}}]"
99,20030,Simulate a database query to find all entries in the 'Products' table where the 'price' is less than $50 and the 'category' is 'Electronics'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""Products"", ""conditions"": [{""price"": ""<"", ""value"": 50}, {""category"": ""="", ""value"": ""Electronics""}]}}]","[{""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_hotel_available"", ""description"": ""Checks the availability of a hotel for a given date range."", ""parameters"": {""hotel"": {""description"": ""The name of the hotel."", ""type"": ""str""}, ""city"": {""description"": ""The city where the hotel is located."", ""type"": ""str""}, ""checkin"": {""description"": ""The check-in date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}, ""checkout"": {""description"": ""The check-out date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}}}]"
100,20128,Suggest train stations near Munich for a query 'München Hauptbahnhof'.,"[{""name"": ""autocomplete"", ""arguments"": {""query"": ""M\u00fcnchen Hauptbahnhof""}}]","[{""name"": ""download_states"", ""description"": ""Downloads a list of states from the Priceline API using the provided parameters."", ""parameters"": {""limit"": {""description"": ""Limits the number of results returned by the API. Defaults to 100."", ""type"": ""int, optional"", ""default"": 100}, ""resume_key"": {""description"": ""A key to resume results from a specific ID. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""get_timetable"", ""description"": ""Fetches the timetable for a given FlixBus station and date using the Toolbench RapidAPI service."", ""parameters"": {""station_id"": {""description"": ""ID of the FlixBus station."", ""type"": ""str"", ""default"": ""dcbd21fc-9603-11e6-9066-549f350fcb0c""}, ""date"": {""description"": ""Date for which to fetch the timetable, in the format DD.MM.YYYY."", ""type"": ""str"", ""default"": ""15.05.2022""}}}, {""name"": ""autocomplete"", ""description"": ""Search for train and public transport stations in Germany and across Europe using the RapidAPI service."", ""parameters"": {""query"": {""description"": ""The search query for train and public transport stations."", ""type"": ""str"", ""default"": ""berlin""}}}, {""name"": ""get_property_type_filters"", ""description"": ""Retrieves property type filters from the Airbnb API."", ""parameters"": {""languageid"": {""description"": ""The language ID for the requested response. To get the language ID, call the `getLanguages` API."", ""type"": ""str, optional"", ""default"": """"}}}]"
101,20517,Simulate querying a 'products' table to find all products with a price greater than $100 and in stock.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""products"", ""conditions"": [{""price"": {""$gt"": 100}}, {""stock"": {""$gt"": 0}}]}}]","[{""name"": ""project_investment_growth"", ""description"": ""Projects the growth of an investment over a specified number of years."", ""parameters"": {""principal"": {""description"": ""The initial investment amount."", ""type"": ""float"", ""default"": true}, ""annual_addition"": {""description"": ""The amount added to the investment annually."", ""type"": ""float"", ""default"": true}, ""years"": {""description"": ""The number of years to project the investment growth."", ""type"": ""int""}, ""return_rate"": {""description"": ""The annual return rate as a decimal (e.g., 0.07 for 7%)."", ""type"": ""float""}, ""inflation"": {""description"": ""A list of annual inflation rates as decimals."", ""type"": ""List[float]""}, ""inflation_adjusted"": {""description"": ""Whether to adjust the final value for inflation. Defaults to True."", ""type"": ""bool, optional""}}}, {""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
102,20580,Simulate querying a database for a table named 'users' with conditions that include 'age >= 18' and 'city = 'San Francisco''.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": "">= 18""}, {""city"": ""San Francisco""}]}}]","[{""name"": ""whole_foods_order"", ""description"": ""Places an order at Whole Foods."", ""parameters"": {""store_location"": {""description"": ""The location of the Whole Foods store."", ""type"": ""str""}, ""item_list"": {""description"": ""A list of items to order."", ""type"": ""list""}, ""order_size"": {""description"": ""The size of the order. Allowed values: \""small\"", \""medium\"", or \""large\""."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""calculate_calorie_intake"", ""description"": ""Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals."", ""parameters"": {""weight_kg"": {""description"": ""Body weight in kilograms."", ""type"": ""float""}, ""height_cm"": {""description"": ""Height in centimeters."", ""type"": ""float""}, ""age"": {""description"": ""Age in years."", ""type"": ""int""}, ""sex"": {""description"": ""Biological sex, either 'male' or 'female'."", ""type"": ""str""}, ""activity_level"": {""description"": ""Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active)."", ""type"": ""int""}, ""goal"": {""description"": ""Fitness goal, either 'lose', 'maintain', or 'gain'."", ""type"": ""str""}}}]"
103,20588,"Simulate a database query on the 'users' table where the conditions are {'age': 30, 'city': 'New York'} and another query with {'age': 25, 'city': 'Los Angeles'}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": 30, ""city"": ""New York""}]}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": 25, ""city"": ""Los Angeles""}]}}]","[{""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}, {""name"": ""structural_analysis"", ""description"": ""Performs structural analysis on a building based on its ID, floor numbers, and analysis mode."", ""parameters"": {""building_id"": {""description"": ""The unique identifier of the building."", ""type"": ""str"", ""default"": ""static""}, ""floor_numbers"": {""description"": ""The list of floor numbers to be analyzed."", ""type"": ""List[int]"", ""default"": ""static""}, ""analysis_mode"": {""description"": ""The mode of analysis, either \""static\"" or \""dynamic\"". Defaults to \""static\""."", ""type"": ""str, optional""}}}, {""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""place_safeway_order"", ""description"": ""Order specified items from a Safeway location."", ""parameters"": {""location"": {""description"": ""The location of the Safeway store, e.g., 'Palo Alto, CA'."", ""type"": ""str""}, ""items"": {""description"": ""List of items to order."", ""type"": ""list""}, ""quantity"": {""description"": ""Quantity of each item in the order list."", ""type"": ""list""}}}]"
104,20960,"Calculate the total for 10 boxes of cereal at $3 each, 5 bags of chips at $2 each, and 7 bottles of juice at $1.50 each. Also, perform a database query to find all items in the 'orders' table that were ordered more than once.","[{""name"": ""calculate_order_total"", ""arguments"": {""items"": [""cereal"", ""chips"", ""juice""], ""quantities"": [10, 5, 7], ""prices"": [3, 2, 1.5]}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""orders"", ""conditions"": [{""quantity"": {""$gt"": 1}}]}}]","[{""name"": ""calculate_order_total"", ""description"": ""Calculates the total cost of an order based on the items, quantities, and prices."", ""parameters"": {""items"": {""description"": ""A list of item names."", ""type"": ""List[str]""}, ""quantities"": {""description"": ""A list of corresponding quantities for each item."", ""type"": ""List[int]""}, ""prices"": {""description"": ""A list of corresponding prices for each item."", ""type"": ""List[float]""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
105,21466,Simulate a database query on the 'Products' table where the conditions are that the product category is 'Electronics' and the price is between $50 and $100.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""Products"", ""conditions"": [{""category"": ""="", ""value"": ""Electronics""}, {""price"": ""between"", ""value"": [50, 100]}]}}]","[{""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
106,21979,"What are the EV charging stations near (37.7749° N, 122.4194° W) with available connectors and a query for 'ChargePoint'?","[{""name"": ""search_by_coordinates_point"", ""arguments"": {""lng"": ""122.4194"", ""lat"": ""37.7749"", ""available"": ""true"", ""query"": ""ChargePoint""}}]","[{""name"": ""get_a_specific_employee_by_employee_id"", ""description"": ""Fetches details of a specific employee by their unique employee ID."", ""parameters"": {""is_id"": {""description"": ""The unique ID of the employee whose details are to be fetched."", ""type"": ""int"", ""default"": ""715505""}}}, {""name"": ""document"", ""description"": ""Fetches the authorized blob URI for a court document using the provided document ID and RapidAPI key."", ""parameters"": {""documentid"": {""description"": ""The ID of the document to fetch. Defaults to '41aac429-40dd-ea11-a813-000d3a79365a'."", ""type"": ""str, optional"", ""default"": ""41aac429-40dd-ea11-a813-000d3a79365a""}}}, {""name"": ""search_by_coordinates_point"", ""description"": ""Search for EV charging stations near specific geographic coordinates."", ""parameters"": {""lng"": {""description"": ""Longitude of the geographic coordinates point to search nearby."", ""type"": ""str"", ""default"": ""-121.925337""}, ""lat"": {""description"": ""Latitude of the geographic coordinates point to search nearby."", ""type"": ""str"", ""default"": ""37.359428""}, ""query"": {""description"": ""Keyword to filter the search results by a specific query, such as 'evgo', 'tesla', or 'chargepoint'."", ""type"": ""str, optional"", ""default"": """"}, ""min_kw"": {""description"": ""Minimum power in kilowatts to filter the availability of connectors."", ""type"": ""str, optional"", ""default"": """"}, ""max_kw"": {""description"": ""Maximum power in kilowatts to filter the availability of connectors."", ""type"": ""str, optional"", ""default"": """"}, ""limit"": {""description"": ""Maximum number of results to return. Allowed values range from 1 to 500."", ""type"": ""str, optional, default='20'"", ""default"": ""20""}, ""available"": {""description"": ""Filter to find EV charging stations with an available connector."", ""type"": ""str, optional"", ""default"": """"}, ""type"": {""description"": ""Filter to return EV charging stations with connectors of specified types, provided as a comma-delimited list, e.g., 'CHAdeMO', 'J1772,CCS'."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""getuserbyid"", ""description"": ""Fetches and returns user information by user ID from a specified API."", ""parameters"": {""is_id"": {""description"": ""The ID of the user to fetch information for."", ""type"": ""str"", ""default"": ""1""}}}]"
107,22217,Query the boundary information for 'Los Angeles'.,"[{""name"": ""query_for_city_boundary_by_name"", ""arguments"": {""name"": ""Los Angeles""}}]","[{""name"": ""get_fonts"", ""description"": ""Fetch fonts for vector tiles using a specified range and font stack from the Mapilion API."", ""parameters"": {""range"": {""description"": ""The range of font unicode characters to fetch."", ""type"": ""str"", ""default"": ""0-255""}, ""fontstack"": {""description"": ""The font stack to be used for the tiles."", ""type"": ""str"", ""default"": ""Roboto Regular""}}}, {""name"": ""query_for_city_boundary_by_name"", ""description"": ""Queries the city boundary information by the given city name using the Boundaries API."", ""parameters"": {""name"": {""description"": ""The name of the city for which to query boundary information."", ""type"": ""str"", ""default"": ""Karlsruhe""}}}, {""name"": ""fetch_details_of_multiple_records"", ""description"": ""Fetches details of multiple records given their IDs using the Magical Taske API."", ""parameters"": {""is_id"": {""description"": ""A comma-separated string of record IDs for which to fetch details. Maximum 10 IDs allowed, no spaces between commas."", ""type"": ""str"", ""default"": ""b4180336-ef07-453d-b833-807161aedf36,7cf78e19-57d2-4bce-8999-63aad8f0e70c""}}}]"
108,22257,"Calculate the total for my grocery order: 2 liters of milk at $3 each, 1 loaf of bread at $2, and 3 packs of cheese at $4 each. Also, simulate a database query to see if there are any promotions for these items.","[{""name"": ""calculate_order_total"", ""arguments"": {""items"": [""milk"", ""bread"", ""cheese""], ""quantities"": [2, 1, 3], ""prices"": [3, 2, 4]}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""promotions"", ""conditions"": [{""item"": ""milk"", ""promotion_condition"": ""active""}, {""item"": ""bread"", ""promotion_condition"": ""active""}, {""item"": ""cheese"", ""promotion_condition"": ""active""}]}}]","[{""name"": ""calculate_order_total"", ""description"": ""Calculates the total cost of an order based on the items, quantities, and prices."", ""parameters"": {""items"": {""description"": ""A list of item names."", ""type"": ""List[str]""}, ""quantities"": {""description"": ""A list of corresponding quantities for each item."", ""type"": ""List[int]""}, ""prices"": {""description"": ""A list of corresponding prices for each item."", ""type"": ""List[float]""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
109,22316,"I need to find details about two devices, one with the identifier 'DEV001' and another with 'DEV002'. Also, could you suggest some locations based on the query 'Dubai Marina' in English?","[{""name"": ""get_device_asset_by_identifier_copy"", ""arguments"": {""identifier"": ""DEV001""}}, {""name"": ""get_device_asset_by_identifier_copy"", ""arguments"": {""identifier"": ""DEV002""}}, {""name"": ""auto_complete"", ""arguments"": {""query"": ""Dubai Marina"", ""lang"": ""en""}}]","[{""name"": ""get_device_asset_by_identifier_copy"", ""description"": ""Fetches device asset information by identifier using the provided RapidAPI key."", ""parameters"": {""identifier"": {""description"": ""The unique identifier for the device asset."", ""type"": ""str"", ""default"": ""71491234-A""}}}, {""name"": ""auto_complete"", ""description"": ""Fetches location suggestions based on a given search term or phrase from the Bayut API."", ""parameters"": {""query"": {""description"": ""The term or phrase to search for location suggestions."", ""type"": ""str"", ""default"": ""abu dhabi""}, ""hitsperpage"": {""description"": ""The number of results to return per page. Default is 25."", ""type"": ""int, optional"", ""default"": ""25""}, ""lang"": {""description"": ""The language of the results. Options are 'en' or 'ar'. Default is 'en'."", ""type"": ""str, optional"", ""default"": ""en""}, ""page"": {""description"": ""The number of results to return per page. Default is 25."", ""type"": ""int, optional"", ""default"": ""0""}}}]"
110,22467,"Scrape 20 links from wikipedia.org, including query parameters, and generate a large thumbnail for apple.com.","[{""name"": ""scrape_links"", ""arguments"": {""url"": ""https://www.wikipedia.org"", ""maxlinks"": 20, ""includequery"": true}}, {""name"": ""get_1_shoot_thumbnail"", ""arguments"": {""size"": ""l"", ""url"": ""https://www.apple.com""}}]","[{""name"": ""whois"", ""description"": ""Fetches WHOIS data for a given domain."", ""parameters"": {""q"": {""description"": ""The domain name to query for WHOIS information."", ""type"": ""str"", ""default"": ""google.com""}}}, {""name"": ""get_1_shoot_thumbnail"", ""description"": ""Generates a thumbnail image from a given URL using the Pagepeeker API. Optionally, the thumbnail can be refreshed."", ""parameters"": {""size"": {""description"": ""The desired size of the thumbnail. Options are:"", ""type"": ""str"", ""default"": ""m""}, ""url"": {""description"": ""The URL from which to generate the thumbnail."", ""type"": ""str"", ""default"": ""http://www.mashape.com/""}, ""refresh"": {""description"": ""Set to '1' to force a refresh of the thumbnail. Defaults to '1'."", ""type"": ""str, optional"", ""default"": ""1""}}}, {""name"": ""download_stream"", ""description"": ""Downloads or streams video information from YouTube using the provided RapidAPI key."", ""parameters"": {""is_id"": {""description"": ""YouTube Video ID to stream or download information."", ""type"": ""str"", ""default"": ""UxxajLWwzqY""}, ""cgeo"": {""description"": ""Country code in ISO 3166 format of the end user. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""list_specific_qr_code"", ""description"": ""Fetches information about a specific registered QR code using the provided reference and RapidAPI key."", ""parameters"": {""ref"": {""description"": ""The reference identifier for the specific QR code."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""get_from_eztv"", ""description"": ""Fetches torrent search results from EZTV using the provided search topic."", ""parameters"": {""searchtopic"": {""description"": ""The topic to search for on EZTV."", ""type"": ""str"", ""default"": ""cars""}}}, {""name"": ""scrape_links"", ""description"": ""Scrapes a specified number of links from the provided URL using the Scrapey Link Scraper API."", ""parameters"": {""url"": {""description"": ""The target URL from which to scrape links."", ""type"": ""str"", ""default"": ""amazon.com""}, ""maxlinks"": {""description"": ""The maximum number of links to scrape. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}, ""includequery"": {""description"": ""Whether to include query parameters in the links. Defaults to None."", ""type"": ""bool, optional"", ""default"": ""true""}}}]"
111,22571,Retrieve the playlist details for the search query '90s rock hits'.,"[{""name"": ""playlist_extraction"", ""arguments"": {""search"": ""90s rock hits""}}]","[{""name"": ""playlist_extraction"", ""description"": ""Retrieves information about songs in a playlist from YouTube, Spotify, or SoundCloud using the RapidAPI service."", ""parameters"": {""search"": {""description"": ""The search query for the playlist."", ""type"": ""str"", ""default"": ""https://www.youtube.com/playlist?list=PLXFwTY00FRUUZzL_Vjhy-bE8WIao3eyOi""}}}, {""name"": ""get_radio_playlist"", ""description"": ""Fetches a radio playlist for a given artist or song using the Spotify API."", ""parameters"": {""uri"": {""description"": ""The URI of the artist or song for which to generate the radio playlist."", ""type"": ""str"", ""default"": ""spotify:artist:2w9zwq3AktTeYYMuhMjju8""}}}, {""name"": ""singapore_songs"", ""description"": ""Fetches the Singapore Songs chart information from the Billboard API."", ""parameters"": {""range"": {""description"": ""The range of chart information to fetch."", ""type"": ""str"", ""default"": ""1-10""}, ""date"": {""description"": ""The date of the chart in YYYY-MM-DD format."", ""type"": ""str"", ""default"": ""2022-05-07""}}}]"
112,22640,What are the host details for version v1 filtered by date from '2023-01-01' to '2023-01-31' and a query 'examplehost'?,"[{""name"": ""get_host_list_version_hosts_get"", ""arguments"": {""version"": ""v1"", ""q"": ""examplehost"", ""date_from"": ""2023-01-01"", ""date_to"": ""2023-01-31""}}]","[{""name"": ""getpetbyid"", ""description"": ""Get details of a pet by its ID using the provided RapidAPI key."", ""parameters"": {""petid"": {""description"": ""The ID of the pet to retrieve."", ""type"": ""int"", ""default"": 0}}}, {""name"": ""transaction_id"", ""description"": ""Retrieve the information of a transaction using its ID from the Uniswap V2 API."", ""parameters"": {""is_id"": {""description"": ""The ID of the transaction to retrieve information for."", ""type"": ""str"", ""default"": ""0xd259f882f051c3ef49a6f79e0a634be47ff643513c418ca753c93dcca8d4d675""}}}, {""name"": ""getusers"", ""description"": ""Fetches user information from the RapidAPI user-demo service, optionally filtered by email and name."", ""parameters"": {""email"": {""description"": ""Email address to filter the users."", ""type"": ""str, optional"", ""default"": """"}, ""name"": {""description"": ""Name to filter the users."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""mensajes_2"", ""description"": ""Fetches messages for student number 2 using the provided RapidAPI key and authorization details."", ""parameters"": {""authorization"": {""description"": ""The authorization token required for API access."", ""type"": ""str"", ""default"": ""1234567890""}, ""authoriza"": {""description"": ""An additional authorization token. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""exclusiveness_callerid"", ""description"": ""This function checks the exclusiveness status associated with the given `callerid` by making a request to the \""most-exclusive-api\"" on RapidAPI."", ""parameters"": {""callerid"": {""description"": ""A unique string identifying the requester. It should be alphanumeric with allowed characters [a-zA-Z0-9_-] and have a maximum length of 32 characters."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""get_host_list_version_hosts_get"", ""description"": ""Fetch a list of hosts that ran an EcoIndex analysis, ordered by the number of requests made."", ""parameters"": {""version"": {""description"": ""Engine version used to run the analysis (v0 or v1)."", ""type"": ""str"", ""default"": ""v1""}, ""q"": {""description"": ""Filter for partial host name. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""date_from"": {""description"": ""Start date for filtering elements (format: YYYY-MM-DD). Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""size"": {""description"": ""Number of elements per page. Defaults to 50."", ""type"": ""int, optional"", ""default"": 50}, ""date_to"": {""description"": ""End date for filtering elements (format: YYYY-MM-DD). Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""page"": {""description"": ""Page number to retrieve. Defaults to 1."", ""type"": ""int, optional"", ""default"": 1}}}, {""name"": ""dashboard"", ""description"": ""Fetches the deployment and response dashboard for a specified survey using provided credentials and API keys."", ""parameters"": {""login_id"": {""description"": ""The login identifier for accessing the survey methods API."", ""type"": ""str"", ""default"": """"}, ""api_key"": {""description"": ""The API key associated with the user account."", ""type"": ""str"", ""default"": """"}, ""survey_code"": {""description"": ""The code identifying the specific survey whose dashboard is being fetched."", ""type"": ""str"", ""default"": """"}}}]"
113,22761,Retrieve details about the TV show with TMDb ID 1399 for a movie type query and get related contents for a video with ID 'dQw4w9WgXcQ' in German from Germany.,"[{""name"": ""get_by_tmdb_id"", ""arguments"": {""tm"": 1399, ""m"": ""show""}}, {""name"": ""video_related_contents"", ""arguments"": {""hl"": ""de"", ""is_id"": ""dQw4w9WgXcQ"", ""gl"": ""DE""}}]","[{""name"": ""get_by_tmdb_id"", ""description"": ""Fetches movie or TV show information based on a given TMDb ID."", ""parameters"": {""tm"": {""description"": ""A valid TMDb ID for the movie or TV show."", ""type"": ""int"", ""default"": ""578""}, ""m"": {""description"": ""A valid TMDb ID for the movie or TV show."", ""type"": ""int"", ""default"": """"}}}, {""name"": ""video_related_contents"", ""description"": ""Fetches related video contents from YouTube using the RapidAPI service."", ""parameters"": {""hl"": {""description"": ""Language code for the response (default is 'en')."", ""type"": ""str"", ""default"": ""en""}, ""is_id"": {""description"": ""The YouTube video ID for which related contents are to be fetched (default is 'kJQP7kiw5Fk')."", ""type"": ""str"", ""default"": ""kJQP7kiw5Fk""}, ""gl"": {""description"": ""Country code for the response (default is 'US')."", ""type"": ""str"", ""default"": ""US""}, ""cursor"": {""description"": ""Token for pagination to retrieve the next set of results."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""text"", ""description"": ""Converts the input text into a fancy text format using the Ajith Fancy Text API."", ""parameters"": {""text"": {""description"": ""The text to be converted into fancy text."", ""type"": ""str"", ""default"": ""This is funny.""}}}]"
114,23426,Can you simulate a database query for the 'users' table with conditions like age > 30 and city = 'New York'?,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": "">30""}, {""city"": ""New York""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_valid_email"", ""description"": ""Checks if an email address is valid."", ""parameters"": {""email"": {""description"": ""The email address to validate."", ""type"": ""str""}}}, {""name"": ""place_safeway_order"", ""description"": ""Order specified items from a Safeway location."", ""parameters"": {""location"": {""description"": ""The location of the Safeway store, e.g., 'Palo Alto, CA'."", ""type"": ""str""}, ""items"": {""description"": ""List of items to order."", ""type"": ""list""}, ""quantity"": {""description"": ""Quantity of each item in the order list."", ""type"": ""list""}}}, {""name"": ""is_hotel_available"", ""description"": ""Checks the availability of a hotel for a given date range."", ""parameters"": {""hotel"": {""description"": ""The name of the hotel."", ""type"": ""str""}, ""city"": {""description"": ""The city where the hotel is located."", ""type"": ""str""}, ""checkin"": {""description"": ""The check-in date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}, ""checkout"": {""description"": ""The check-out date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}}}, {""name"": ""project_investment_growth"", ""description"": ""Projects the growth of an investment over a specified number of years."", ""parameters"": {""principal"": {""description"": ""The initial investment amount."", ""type"": ""float"", ""default"": true}, ""annual_addition"": {""description"": ""The amount added to the investment annually."", ""type"": ""float"", ""default"": true}, ""years"": {""description"": ""The number of years to project the investment growth."", ""type"": ""int""}, ""return_rate"": {""description"": ""The annual return rate as a decimal (e.g., 0.07 for 7%)."", ""type"": ""float""}, ""inflation"": {""description"": ""A list of annual inflation rates as decimals."", ""type"": ""List[float]""}, ""inflation_adjusted"": {""description"": ""Whether to adjust the final value for inflation. Defaults to True."", ""type"": ""bool, optional""}}}, {""name"": ""calculate_order_total"", ""description"": ""Calculates the total cost of an order based on the items, quantities, and prices."", ""parameters"": {""items"": {""description"": ""A list of item names."", ""type"": ""List[str]""}, ""quantities"": {""description"": ""A list of corresponding quantities for each item."", ""type"": ""List[int]""}, ""prices"": {""description"": ""A list of corresponding prices for each item."", ""type"": ""List[float]""}}}, {""name"": ""predict_forest_area"", ""description"": ""Predicts the change in forest area over a specified number of years."", ""parameters"": {""location"": {""description"": ""The geographic location for the prediction."", ""type"": ""str""}, ""num_years"": {""description"": ""The number of years into the future to make the prediction."", ""type"": ""int""}, ""include_humans"": {""description"": ""Whether to include the impact of human activities in the prediction. Defaults to False."", ""type"": ""bool, optional""}}}]"
115,23693,"Can you tell me the details of the product with ID 12345 and also, what happens if I send 'hello' as the header and 'world' as the query parameter to the Echo API?","[{""name"": ""get_product"", ""arguments"": {""is_id"": 12345}}, {""name"": ""echo"", ""arguments"": {""header1"": ""hello"", ""query2"": ""world""}}]","[{""name"": ""get_product"", ""description"": ""Fetches the product details for a given product ID from the RapidAPI demo project."", ""parameters"": {""is_id"": {""description"": ""The ID of the product to retrieve."", ""type"": ""int"", ""default"": """"}}}, {""name"": ""echo"", ""description"": ""Sends a GET request to the Echo API with specific headers and query parameters."", ""parameters"": {""header1"": {""description"": ""The first header to include in the request. Defaults to '1'."", ""type"": ""str, optional"", ""default"": ""1""}, ""query2"": {""description"": ""The second query parameter to include in the request. Defaults to '2'."", ""type"": ""str, optional"", ""default"": ""2""}}}, {""name"": ""get_invite_data"", ""description"": ""Fetch detailed data for a given Discord invite code using the RapidAPI service."", ""parameters"": {""invite"": {""description"": ""The Discord invite code to fetch data for."", ""type"": ""str"", ""default"": ""minecraft""}}}]"
116,24030,Query the readiness of 'U901' for 'I234' and get the definition of 'paradigm'.,"[{""name"": ""memre_api_v1_readiness"", ""arguments"": {""user_id"": ""U901"", ""item_id"": ""I234""}}, {""name"": ""getdefinition"", ""arguments"": {""word"": ""paradigm""}}]","[{""name"": ""memre_api_v1_readiness"", ""description"": ""Get the readiness status of a user for a specified item from the memre API."", ""parameters"": {""user_id"": {""description"": ""The ID of the user whose readiness status is being queried."", ""type"": ""str"", ""default"": """"}, ""item_id"": {""description"": ""The ID of the item for which the readiness status is being queried."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""getdefinition"", ""description"": ""Retrieves the definition, pronunciation, and example usages of a given word using the Dictionary Data API."", ""parameters"": {""word"": {""description"": ""The word for which the definition, pronunciation, and example usages are retrieved."", ""type"": ""str"", ""default"": ""dance""}}}]"
117,24108,"Simulate a database query on the 'sales' table with conditions {'product': 'laptop', 'price': ['>1000']}","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""sales"", ""conditions"": [{""product"": ""laptop"", ""price"": ["">1000""]}]}}]","[{""name"": ""structural_analysis"", ""description"": ""Performs structural analysis on a building based on its ID, floor numbers, and analysis mode."", ""parameters"": {""building_id"": {""description"": ""The unique identifier of the building."", ""type"": ""str"", ""default"": ""static""}, ""floor_numbers"": {""description"": ""The list of floor numbers to be analyzed."", ""type"": ""List[int]"", ""default"": ""static""}, ""analysis_mode"": {""description"": ""The mode of analysis, either \""static\"" or \""dynamic\"". Defaults to \""static\""."", ""type"": ""str, optional""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""project_investment_growth"", ""description"": ""Projects the growth of an investment over a specified number of years."", ""parameters"": {""principal"": {""description"": ""The initial investment amount."", ""type"": ""float"", ""default"": true}, ""annual_addition"": {""description"": ""The amount added to the investment annually."", ""type"": ""float"", ""default"": true}, ""years"": {""description"": ""The number of years to project the investment growth."", ""type"": ""int""}, ""return_rate"": {""description"": ""The annual return rate as a decimal (e.g., 0.07 for 7%)."", ""type"": ""float""}, ""inflation"": {""description"": ""A list of annual inflation rates as decimals."", ""type"": ""List[float]""}, ""inflation_adjusted"": {""description"": ""Whether to adjust the final value for inflation. Defaults to True."", ""type"": ""bool, optional""}}}, {""name"": ""get_dna_sequence"", ""description"": ""Retrieves the DNA sequence for a given sequence ID from the NCBI Nucleotide database."", ""parameters"": {""sequence_id"": {""description"": ""The unique identifier for the DNA sequence."", ""type"": ""str"", ""default"": ""fasta""}, ""file_format"": {""description"": ""The format of the returned sequence. Allowed values: \""fasta\"" (default) or \""gb\""."", ""type"": ""str, optional""}, ""upstream_bases"": {""description"": ""The number of bases upstream of the sequence to include. Defaults to 0."", ""type"": ""int, optional"", ""default"": ""fasta""}}}]"
118,24127,"Locate the IP address 168.168.168.168 and simulate a database query on a 'orders' table with conditions {'status': 'shipped', 'amount': 100}","[{""name"": ""get_ip_location"", ""arguments"": {""ip"": ""168.168.168.168""}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""orders"", ""conditions"": [{""status"": ""shipped"", ""amount"": 100}]}}]","[{""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}]"
119,24193,"Check if '256.0.0.1' is a valid IP address. Simulate a database query on the 'products' table with conditions {'price': '<100', 'category': 'electronics'}. Also, locate the IP '1.1.1.1' and find the city for ZIP 10001.","[{""name"": ""is_valid_ip_address"", ""arguments"": {""ip"": ""256.0.0.1""}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""products"", ""conditions"": [{""price"": ""<100"", ""category"": ""electronics""}]}}, {""name"": ""get_ip_location"", ""arguments"": {""ip"": ""1.1.1.1""}}, {""name"": ""get_city_from_zipcode"", ""arguments"": {""zipcode"": ""10001""}}]","[{""name"": ""is_valid_ip_address"", ""description"": ""Checks if a string is a valid IP address (IPv4)."", ""parameters"": {""ip"": {""description"": ""The string to check."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
120,24569,"Simulate a database query on the 'sales' table where the sale date is in the last week and the amount is greater than $500. Also, find the coordinates of Sydney.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""sales"", ""conditions"": [{""date"": ""last week""}, {""amount"": "">500""}]}}, {""name"": ""geocode_city"", ""arguments"": {""city"": ""Sydney""}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""geocode_city"", ""description"": ""Retrieves the latitude and longitude coordinates of a given city using the Maps.co Geocoding API."", ""parameters"": {""city"": {""description"": ""The name of the city."", ""type"": ""str""}}}, {""name"": ""get_holidays_by_year"", ""description"": ""Retrieves the list of public holidays for a given year and country using the Nager.Date API."", ""parameters"": {""year"": {""description"": ""The year for which to retrieve the holidays."", ""type"": ""int""}, ""country_code"": {""description"": ""The two-letter ISO 3166-1 alpha-2 country code."", ""type"": ""str""}}}]"
121,24621,"Simulate a database query on 'employees' table with conditions: {'department': 'HR', 'salary': {'$gt': 50000}}","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""employees"", ""conditions"": [{""department"": ""HR"", ""salary"": {""$gt"": 50000}}]}}]","[{""name"": ""analyze_social_group_dynamics"", ""description"": ""Analyzes the social dynamics within a group based on the personality traits and group size."", ""parameters"": {""total"": {""description"": ""The total group size."", ""type"": ""int""}, ""extroverts"": {""description"": ""The number of extroverted members in the group."", ""type"": ""int""}, ""introverts"": {""description"": ""The number of introverted members in the group."", ""type"": ""int""}}}, {""name"": ""structural_analysis"", ""description"": ""Performs structural analysis on a building based on its ID, floor numbers, and analysis mode."", ""parameters"": {""building_id"": {""description"": ""The unique identifier of the building."", ""type"": ""str"", ""default"": ""static""}, ""floor_numbers"": {""description"": ""The list of floor numbers to be analyzed."", ""type"": ""List[int]"", ""default"": ""static""}, ""analysis_mode"": {""description"": ""The mode of analysis, either \""static\"" or \""dynamic\"". Defaults to \""static\""."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_valid_ip_address"", ""description"": ""Checks if a string is a valid IP address (IPv4)."", ""parameters"": {""ip"": {""description"": ""The string to check."", ""type"": ""str""}}}]"
122,24912,Request the scorecard for match 112233 and all games data without specifying any additional query parameters.,"[{""name"": ""match_scorecard"", ""arguments"": {""match_id"": 112233}}, {""name"": ""getallgames"", ""arguments"": {}}]","[{""name"": ""match_scorecard"", ""description"": ""Fetches the full scorecard (updated live) for a given match ID using the RapidAPI service."", ""parameters"": {""match_id"": {""description"": ""The ID of the cricket match for which to retrieve the live scorecard."", ""type"": ""int"", ""default"": ""2432999""}}}, {""name"": ""getallgames"", ""description"": ""Retrieve all games data using the RapidAPI service."", ""parameters"": {""cookie"": {""description"": ""The cookie value to include in the query parameters. Default is 'i18next=es;'."", ""type"": ""str"", ""default"": ""i18next=es;""}, ""host"": {""description"": ""The host value to include in the query parameters. Default is 'www.mozzartbet.com.co'."", ""type"": ""str"", ""default"": ""www.mozzartbet.com.co""}, ""referer"": {""description"": ""The referer value to include in the query parameters. Default is 'https://www.mozzartbet.com.co/es'."", ""type"": ""str"", ""default"": ""https://www.mozzartbet.com.co/es""}}}]"
123,25244,Please get the time token for 'timeQuery1' and 'timeQuery2' from the PubNub Network.,"[{""name"": ""time"", ""arguments"": {""callback"": ""timeQuery1""}}, {""name"": ""time"", ""arguments"": {""callback"": ""timeQuery2""}}]","[{""name"": ""time"", ""description"": ""Retrieves the current time token from the PubNub Network."", ""parameters"": {""callback"": {""description"": ""JSONP callback function name."", ""type"": ""str"", ""default"": ""0""}}}]"
124,25326,Simulate a query on a 'orders' table to find all orders placed in the last month by customers in New York.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""orders"", ""conditions"": [{""order_date"": ""<1 month""}, {""customer_state"": ""New York""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
125,25410,Fetch search suggestions for the query 'climate change'.,"[{""name"": ""search_suggestions"", ""arguments"": {""query"": ""climate change""}}]","[{""name"": ""search_suggestions"", ""description"": ""Fetches search suggestions from the Twitter API using specified query parameters."", ""parameters"": {""query"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": ""elonmusk""}, ""twttr_session"": {""description"": ""The Twitter session ID for authenticated requests. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""twttr_proxy"": {""description"": ""The Twitter proxy server address. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""cursor"": {""description"": ""The cursor for paginated results. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""random_meme"", ""description"": ""Fetches a random meme from a specified genre and type using the given RapidAPI key."", ""parameters"": {""genre"": {""description"": ""The genre of the meme. Default is 'memes'. Available genres include 'anime', 'dnd', 'history', 'historyani', 'memes', 'politics', 'science', 'lotr', and 'ww2'."", ""type"": ""str"", ""default"": ""memes""}, ""type"": {""description"": ""The type of the meme. Default is 'top'. Available types include 'top', 'hot', and 'new'."", ""type"": ""str"", ""default"": ""top""}}}]"
126,26636,"I have a Discord invite code 'ABC123'. What data can you fetch for it? Also, if I use 'test' as the header and 'example' as the query to the Echo API, what will be the response?","[{""name"": ""get_invite_data"", ""arguments"": {""invite"": ""ABC123""}}, {""name"": ""echo"", ""arguments"": {""header1"": ""test"", ""query2"": ""example""}}]","[{""name"": ""get_product"", ""description"": ""Fetches the product details for a given product ID from the RapidAPI demo project."", ""parameters"": {""is_id"": {""description"": ""The ID of the product to retrieve."", ""type"": ""int"", ""default"": """"}}}, {""name"": ""echo"", ""description"": ""Sends a GET request to the Echo API with specific headers and query parameters."", ""parameters"": {""header1"": {""description"": ""The first header to include in the request. Defaults to '1'."", ""type"": ""str, optional"", ""default"": ""1""}, ""query2"": {""description"": ""The second query parameter to include in the request. Defaults to '2'."", ""type"": ""str, optional"", ""default"": ""2""}}}, {""name"": ""get_invite_data"", ""description"": ""Fetch detailed data for a given Discord invite code using the RapidAPI service."", ""parameters"": {""invite"": {""description"": ""The Discord invite code to fetch data for."", ""type"": ""str"", ""default"": ""minecraft""}}}]"
127,27031,Query the LDU boundary using H3 index 7890123.,"[{""name"": ""query_for_ldu_boundary_by_h3index"", ""arguments"": {""h3ndex"": 7890123}}]","[{""name"": ""get_tile_json"", ""description"": ""Returns the tile JSON for the given style type from the Mapilion Vector and Raster Map Tiles API. "", ""parameters"": {""type"": {""description"": ""Style type for the tile JSON to be retrieved."", ""type"": ""str"", ""default"": ""v3""}}}, {""name"": ""fetch_details_of_multiple_records"", ""description"": ""Fetches details of multiple records given their IDs using the Magical Taske API."", ""parameters"": {""is_id"": {""description"": ""A comma-separated string of record IDs for which to fetch details. Maximum 10 IDs allowed, no spaces between commas."", ""type"": ""str"", ""default"": ""b4180336-ef07-453d-b833-807161aedf36,7cf78e19-57d2-4bce-8999-63aad8f0e70c""}}}, {""name"": ""fetch_by_region"", ""description"": ""Fetches records by region from the Magical Taske API."", ""parameters"": {""region"": {""description"": ""The region for which to fetch records."", ""type"": ""str"", ""default"": ""Central""}, ""limit"": {""description"": ""The maximum number of records to return."", ""type"": ""int"", ""default"": ""5""}}}, {""name"": ""map"", ""description"": ""Fetches a map image in WMTS format based on the given parameters."", ""parameters"": {""tilerow"": {""description"": ""The WMTS tile row number (latitude direction)."", ""type"": ""int"", ""default"": ""25806""}, ""tilematrix"": {""description"": ""The tile matrix, specified in the format `[EPSG code]:[Scale value]`."", ""type"": ""str"", ""default"": ""EPSG:3857:16""}, ""tilecol"": {""description"": ""The WMTS tile column number (longitude direction)."", ""type"": ""int"", ""default"": ""58211""}, ""rotationangle"": {""description"": ""Angle to rotate the map image. Valid range is 0 to 359, default is 0."", ""type"": ""int, optional"", ""default"": """"}, ""mapstyle"": {""description"": ""Design of the map. Format is `[design]_[annotation size]`, default is `std_pc`."", ""type"": ""str, optional"", ""default"": """"}, ""landmarkicon"": {""description"": ""Display of landmark icons. `on` for display, `off` for hide, default is `off`."", ""type"": ""str, optional"", ""default"": """"}, ""resolution"": {""description"": ""Resolution of the map image. Values can be `1`, `2`, or `4`, default is `1`."", ""type"": ""str, optional"", ""default"": """"}, ""contour"": {""description"": ""Display of contour lines. `on` for display, `off` for hide, default is `on`."", ""type"": ""str, optional"", ""default"": """"}, ""bldgname"": {""description"": ""Display of building names. `on` for display, `off` for hide, default is `off`."", ""type"": ""str, optional"", ""default"": """"}, ""logo"": {""description"": ""Display of brand logos. `on` for display, `off` for hide, default is `off`."", ""type"": ""str, optional"", ""default"": """"}, ""target"": {""description"": ""Display contents of the map. Values can be `1` for background only, `2` for annotations only, `3` for both, default is `3`."", ""type"": ""str, optional"", ""default"": """"}, ""format"": {""description"": ""Output image format. Values can be `image/png` or `image/jpeg`, default is `image/png`."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""query_for_ldu_boundary_by_h3index"", ""description"": ""Queries for a Local Delivery Unit (LDU) boundary by its H3 index."", ""parameters"": {""h3ndex"": {""description"": ""The H3 index used to query the LDU boundary."", ""type"": ""int"", ""default"": ""635775751926485631""}}}, {""name"": ""query_for_city_boundary_by_name"", ""description"": ""Queries the city boundary information by the given city name using the Boundaries API."", ""parameters"": {""name"": {""description"": ""The name of the city for which to query boundary information."", ""type"": ""str"", ""default"": ""Karlsruhe""}}}, {""name"": ""planet_vector_tiles"", ""description"": ""Retrieves global planet vector tiles in Protocolbuffer Binary Format (PBF) from the specified map service."", ""parameters"": {""y"": {""description"": ""The y coordinate (tile row) of the map tile."", ""type"": ""str"", ""default"": ""1""}, ""x"": {""description"": ""The x coordinate (tile column) of the map tile."", ""type"": ""str"", ""default"": ""1""}, ""z"": {""description"": ""The zoom level of the map tile."", ""type"": ""str"", ""default"": ""1""}}}]"
128,27085,What are the search suggestions for the query 'travel vlogs' on YouTube?,"[{""name"": ""search_suggestions"", ""arguments"": {""q"": ""travel vlogs""}}]","[{""name"": ""shows_id"", ""description"": ""Fetch metadata associated with the specified show from the given platform."", ""parameters"": {""platform"": {""description"": ""Source platform for the show. Possible values are 'ios', 'android', 'androidtv', 'web'."", ""type"": ""str"", ""default"": ""web""}, ""is_id"": {""description"": ""The ID of the show. Can also be a TMDB ID."", ""type"": ""str"", ""default"": ""82856""}, ""region"": {""description"": ""Region to retrieve the sources' deep link from. Default is 'US'. Possible values are 'US', 'FR'."", ""type"": ""str, optional"", ""default"": ""US""}}}, {""name"": ""search_video_list_by_keywords"", ""description"": ""Search for videos on TikTok by specified keywords and additional filtering options."", ""parameters"": {""keywords"": {""description"": ""Keywords to search videos for."", ""type"": ""str"", ""default"": ""\u8e0a\u3063\u3066\u307f\u305f""}, ""sort_type"": {""description"": ""Criterion for sorting results. Defaults to '0'."", ""type"": ""str, optional"", ""default"": ""0""}, ""publish_time"": {""description"": ""Time filter for when videos were posted. Defaults to '0'."", ""type"": ""str, optional"", ""default"": ""0""}, ""cursor"": {""description"": ""Pagination cursor for navigating results. Defaults to '0'."", ""type"": ""str, optional"", ""default"": ""0""}, ""region"": {""description"": ""ISO region code to filter results by location. Defaults to 'US'."", ""type"": ""str, optional"", ""default"": ""US""}, ""count"": {""description"": ""Number of results to retrieve. Defaults to '10'."", ""type"": ""str, optional"", ""default"": ""10""}}}, {""name"": ""search_suggestions"", ""description"": ""Fetches search suggestions for a given query using the Cheap YouTube API through RapidAPI."", ""parameters"": {""q"": {""description"": ""The search query for which to fetch suggestions."", ""type"": ""str"", ""default"": ""crypto""}}}]"
129,27163,Simulate querying a database for a table named 'sales' with conditions that include 'date > 2023-01-01' and 'product = 'laptop''.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""sales"", ""conditions"": [{""date"": ""> 2023-01-01""}, {""product"": ""laptop""}]}}]","[{""name"": ""whole_foods_order"", ""description"": ""Places an order at Whole Foods."", ""parameters"": {""store_location"": {""description"": ""The location of the Whole Foods store."", ""type"": ""str""}, ""item_list"": {""description"": ""A list of items to order."", ""type"": ""list""}, ""order_size"": {""description"": ""The size of the order. Allowed values: \""small\"", \""medium\"", or \""large\""."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""calculate_calorie_intake"", ""description"": ""Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals."", ""parameters"": {""weight_kg"": {""description"": ""Body weight in kilograms."", ""type"": ""float""}, ""height_cm"": {""description"": ""Height in centimeters."", ""type"": ""float""}, ""age"": {""description"": ""Age in years."", ""type"": ""int""}, ""sex"": {""description"": ""Biological sex, either 'male' or 'female'."", ""type"": ""str""}, ""activity_level"": {""description"": ""Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active)."", ""type"": ""int""}, ""goal"": {""description"": ""Fitness goal, either 'lose', 'maintain', or 'gain'."", ""type"": ""str""}}}]"
130,27376,Get search suggestions for the query 'travel destinations'.,"[{""name"": ""search_suggestions"", ""arguments"": {""q"": ""travel destinations""}}]","[{""name"": ""shows_id"", ""description"": ""Fetch metadata associated with the specified show from the given platform."", ""parameters"": {""platform"": {""description"": ""Source platform for the show. Possible values are 'ios', 'android', 'androidtv', 'web'."", ""type"": ""str"", ""default"": ""web""}, ""is_id"": {""description"": ""The ID of the show. Can also be a TMDB ID."", ""type"": ""str"", ""default"": ""82856""}, ""region"": {""description"": ""Region to retrieve the sources' deep link from. Default is 'US'. Possible values are 'US', 'FR'."", ""type"": ""str, optional"", ""default"": ""US""}}}, {""name"": ""search_video_list_by_keywords"", ""description"": ""Search for videos on TikTok by specified keywords and additional filtering options."", ""parameters"": {""keywords"": {""description"": ""Keywords to search videos for."", ""type"": ""str"", ""default"": ""\u8e0a\u3063\u3066\u307f\u305f""}, ""sort_type"": {""description"": ""Criterion for sorting results. Defaults to '0'."", ""type"": ""str, optional"", ""default"": ""0""}, ""publish_time"": {""description"": ""Time filter for when videos were posted. Defaults to '0'."", ""type"": ""str, optional"", ""default"": ""0""}, ""cursor"": {""description"": ""Pagination cursor for navigating results. Defaults to '0'."", ""type"": ""str, optional"", ""default"": ""0""}, ""region"": {""description"": ""ISO region code to filter results by location. Defaults to 'US'."", ""type"": ""str, optional"", ""default"": ""US""}, ""count"": {""description"": ""Number of results to retrieve. Defaults to '10'."", ""type"": ""str, optional"", ""default"": ""10""}}}, {""name"": ""search_suggestions"", ""description"": ""Fetches search suggestions for a given query using the Cheap YouTube API through RapidAPI."", ""parameters"": {""q"": {""description"": ""The search query for which to fetch suggestions."", ""type"": ""str"", ""default"": ""crypto""}}}]"
131,27703,"Simulate a database query on a 'users' table where the conditions are {'age': 30, 'city': 'New York'}","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": 30, ""city"": ""New York""}]}}]","[{""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}]"
132,28104,"I need the expiry date for 'GHI789'. Also, get me the reviews for '0x880fd393d427a591:0x8cba02d713a995ed' with a query 'food quality'.","[{""name"": ""expiry_date_enquiry"", ""arguments"": {""rego"": ""GHI789""}}, {""name"": ""business_reviews"", ""arguments"": {""business_id"": ""0x880fd393d427a591:0x8cba02d713a995ed"", ""query"": ""food quality""}}]","[{""name"": ""business_reviews"", ""description"": ""Fetches and paginates business reviews by Business ID."", ""parameters"": {""business_id"": {""description"": ""Unique Business ID. Accepts google_id, business_id, and google_place_id. Examples of valid ids: `0x880fd393d427a591:0x8cba02d713a995ed`, `ChIJkaUn1JPTD4gR7ZWpE9cCuow`."", ""type"": ""str"", ""default"": ""0x89c259b5a9bd152b:0x31453e62a3be9f76""}, ""language"": {""description"": ""Language code for the results. For a list of supported language codes see https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes. Default is 'en'."", ""type"": ""str, optional"", ""default"": ""en""}, ""fields"": {""description"": ""A comma-separated list of review fields to include in the response. Default is None, which returns all fields."", ""type"": ""str, optional"", ""default"": """"}, ""sort_by"": {""description"": ""Sort order for the reviews, allowed values are `most_relevant`, `newest`, `highest_ranking`, `lowest_ranking`. Default is 'most_relevant'."", ""type"": ""str, optional"", ""default"": """"}, ""region"": {""description"": ""Region or country code to query Google Maps from, see https://en.wikipedia.org/wiki/List_of_ISO_3166-1_alpha-2 (Alpha-2 code). Default is 'us'."", ""type"": ""str, optional"", ""default"": ""us""}, ""limit"": {""description"": ""Maximum number of business reviews to return (1-150). Default is 5."", ""type"": ""int, optional"", ""default"": ""5""}, ""offset"": {""description"": ""Number of business reviews to skip for pagination. Default is None."", ""type"": ""int, optional"", ""default"": """"}, ""query"": {""description"": ""Filter reviews matching a text query. Default is None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""expiry_date_enquiry"", ""description"": ""Queries the expiry date of a vehicle's license registration using the given registration number."", ""parameters"": {""rego"": {""description"": ""The vehicle's registration number."", ""type"": ""str"", ""default"": ""1HNT923""}}}, {""name"": ""tourism_allcountries"", ""description"": ""This function retrieves tourism locations and categories for a given country in Africa using the Toolbench RapidAPI."", ""parameters"": {""country_name"": {""description"": ""The name of the country in Africa for which to retrieve tourism information."", ""type"": ""str"", ""default"": ""all""}}}]"
133,28500,"Retrieve the managers for match ID 54321 and the header information for club ID 98765 in the 'com.tr' domain. Also, query for a horse named 'Thunder Bolt'.","[{""name"": ""matchmanagers"", ""arguments"": {""is_id"": 54321}}, {""name"": ""clubs_get_header_info"", ""arguments"": {""is_id"": 98765, ""domain"": ""com.tr""}}, {""name"": ""query_horses"", ""arguments"": {""name"": ""Thunder Bolt""}}]","[{""name"": ""matchmanagers"", ""description"": ""Retrieve managers for a specific American Football match by providing its ID."", ""parameters"": {""is_id"": {""description"": ""The ID of the match for which you want to get the managers."", ""type"": ""int"", ""default"": 10060042}}}, {""name"": ""clubs_get_header_info"", ""description"": ""Fetches the header information of a club using the TransferMarket API."", ""parameters"": {""is_id"": {""description"": ""The ID of the club to fetch header information for."", ""type"": ""int"", ""default"": ""631""}, ""domain"": {""description"": ""The domain to use for the API request. Defaults to 'de'. Possible values include 'com', 'de', 'be', 'es', 'it', 'nl', 'pl', 'pt', 'com.tr', and 'world'."", ""type"": ""str, optional"", ""default"": ""de""}}}, {""name"": ""query_horses"", ""description"": ""Queries horses by name using the Horse Racing API and returns the results."", ""parameters"": {""name"": {""description"": ""The name of the horse to search for. Must be a minimum of 3 characters."", ""type"": ""str"", ""default"": ""ZANAHIYR""}}}, {""name"": ""competitions_scorers"", ""description"": ""Fetches the list of current top scorers for a specified league and year."", ""parameters"": {""is_id"": {""description"": ""The identifier for the league."", ""type"": ""str"", ""default"": ""BUN""}, ""year"": {""description"": ""The year for which the top scorers are being requested. Defaults to '2021'."", ""type"": ""str, optional"", ""default"": ""2021""}}}]"
134,29270,Simulate a database query for a table named 'users' with conditions to filter users who are active and have a role of 'admin'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""active"": true}, {""role"": ""admin""}]}}]","[{""name"": ""analyze_social_group_dynamics"", ""description"": ""Analyzes the social dynamics within a group based on the personality traits and group size."", ""parameters"": {""total"": {""description"": ""The total group size."", ""type"": ""int""}, ""extroverts"": {""description"": ""The number of extroverted members in the group."", ""type"": ""int""}, ""introverts"": {""description"": ""The number of introverted members in the group."", ""type"": ""int""}}}, {""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_pokemon_move_info"", ""description"": ""Retrieves information about a Pok\u00e9mon's move using the Pok\u00e9API."", ""parameters"": {""pokemon_name"": {""description"": ""The name of the Pok\u00e9mon."", ""type"": ""str"", ""default"": ""run""}, ""move_name"": {""description"": ""The name of the move to check. Defaults to \""run\""."", ""type"": ""str, optional"", ""default"": ""run""}}}]"
135,29305,"Simulate a database query on the 'employees' table where the employee's department is 'HR' and their salary is above $60000. Also, what are the public holidays in France for the year 2024?","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""employees"", ""conditions"": [{""department"": ""HR""}, {""salary"": "">60000""}]}}, {""name"": ""get_holidays_by_year"", ""arguments"": {""year"": 2024, ""country_code"": ""FR""}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""geocode_city"", ""description"": ""Retrieves the latitude and longitude coordinates of a given city using the Maps.co Geocoding API."", ""parameters"": {""city"": {""description"": ""The name of the city."", ""type"": ""str""}}}, {""name"": ""get_holidays_by_year"", ""description"": ""Retrieves the list of public holidays for a given year and country using the Nager.Date API."", ""parameters"": {""year"": {""description"": ""The year for which to retrieve the holidays."", ""type"": ""int""}, ""country_code"": {""description"": ""The two-letter ISO 3166-1 alpha-2 country code."", ""type"": ""str""}}}]"
136,29381,Execute a database query on the 'sales' table to find sales with a total amount greater than $1000.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""sales"", ""conditions"": [{""total_amount"": {""$gt"": 1000}}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
137,29758,"Simulate a database query for the 'inventory' table to find items with a quantity less than 10 and a price greater than $50. Also, get the coordinates of Chicago.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""inventory"", ""conditions"": [{""quantity"": {""<"": 10}}, {""price"": {"">"": 50}}]}}, {""name"": ""geocode_city"", ""arguments"": {""city"": ""Chicago""}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""geocode_city"", ""description"": ""Retrieves the latitude and longitude coordinates of a given city using the Maps.co Geocoding API."", ""parameters"": {""city"": {""description"": ""The name of the city."", ""type"": ""str""}}}, {""name"": ""project_investment_growth"", ""description"": ""Projects the growth of an investment over a specified number of years."", ""parameters"": {""principal"": {""description"": ""The initial investment amount."", ""type"": ""float"", ""default"": true}, ""annual_addition"": {""description"": ""The amount added to the investment annually."", ""type"": ""float"", ""default"": true}, ""years"": {""description"": ""The number of years to project the investment growth."", ""type"": ""int""}, ""return_rate"": {""description"": ""The annual return rate as a decimal (e.g., 0.07 for 7%)."", ""type"": ""float""}, ""inflation"": {""description"": ""A list of annual inflation rates as decimals."", ""type"": ""List[float]""}, ""inflation_adjusted"": {""description"": ""Whether to adjust the final value for inflation. Defaults to True."", ""type"": ""bool, optional""}}}, {""name"": ""place_safeway_order"", ""description"": ""Order specified items from a Safeway location."", ""parameters"": {""location"": {""description"": ""The location of the Safeway store, e.g., 'Palo Alto, CA'."", ""type"": ""str""}, ""items"": {""description"": ""List of items to order."", ""type"": ""list""}, ""quantity"": {""description"": ""Quantity of each item in the order list."", ""type"": ""list""}}}]"
138,29865,"Could you find all matching cities for the query '48.8567,2.3508' and 'London'?","[{""name"": ""search_autocomplete_api"", ""arguments"": {""q"": ""48.8567,2.3508""}}, {""name"": ""search_autocomplete_api"", ""arguments"": {""q"": ""London""}}]","[{""name"": ""search_autocomplete_api"", ""description"": ""Search or Autocomplete API returns matching cities and towns based on the query."", ""parameters"": {""q"": {""description"": ""Query parameter used to obtain matching locations. Supported formats include:"", ""type"": ""str"", ""default"": """"}}}, {""name"": ""get_hourly_forecast"", ""description"": ""Retrieves the hourly weather forecast for a specified city using the RapidAPI Cloud Cast service."", ""parameters"": {""city"": {""description"": ""The name of the city for which to retrieve the hourly weather forecast."", ""type"": ""str"", ""default"": ""New York""}}}, {""name"": ""get_5_day_3_hour_forecast_data"", ""description"": ""Fetches the 5-day weather forecast data with 3-hour intervals for a specified location."", ""parameters"": {""q"": {""description"": ""The location query in the format \""{city name},{country code}\"". The city name and country code should be divided by a comma, and the country code should follow ISO 3166 standards. Defaults to 'dallas,us'."", ""type"": ""str"", ""default"": ""dallas,us""}}}, {""name"": ""by_geographic_coordinates"", ""description"": ""Fetches weather data based on geographic coordinates."", ""parameters"": {""lon"": {""description"": ""Longitude of the geographic coordinates."", ""type"": ""int"", ""default"": ""139""}, ""lat"": {""description"": ""Latitude of the geographic coordinates."", ""type"": ""int"", ""default"": ""35""}, ""units"": {""description"": ""Units of measurement. Options are 'standard', 'metric', and 'imperial'. Defaults to 'standard' if not specified."", ""type"": ""str, optional"", ""default"": """"}, ""lang"": {""description"": ""Language for the output. Defaults to the API's default language if not specified."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""hourly_forecast_48_hours"", ""description"": ""Fetches a 48-hour weather forecast for the specified latitude and longitude coordinates."", ""parameters"": {""latitude"": {""description"": ""The latitude coordinate for the forecast location."", ""type"": ""str"", ""default"": ""-22.95""}, ""longitude"": {""description"": ""The longitude coordinate for the forecast location."", ""type"": ""str"", ""default"": ""-43.21""}}}]"
139,30027,Simulate a database query on a 'products' table to find all products priced over $100 and in stock.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""products"", ""conditions"": [{""price"": "">100""}, {""in_stock"": ""true""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
140,30064,"Search for SoundCloud tracks, users, and playlists with the query 'ambient chill'.","[{""name"": ""search"", ""arguments"": {""type"": ""all"", ""query"": ""ambient chill""}}]","[{""name"": ""user_metadata_information"", ""description"": ""Fetch and return metadata information for a specified TikTok user, such as number of followers, followings, avatar URL, description, and more."", ""parameters"": {""username"": {""description"": ""The TikTok username to fetch metadata for (e.g., \""amazon\"")."", ""type"": ""str"", ""default"": ""tiktok""}, ""fresh"": {""description"": ""If set to '1', forces the API to return fresh (non-cached) data. Defaults to '0'."", ""type"": ""str, optional"", ""default"": ""0""}}}, {""name"": ""medias"", ""description"": ""Retrieves media posts from a specified Instagram user using the Instagram RapidAPI."", ""parameters"": {""user_id"": {""description"": ""The ID of the Instagram user whose media posts are to be retrieved."", ""type"": ""str"", ""default"": ""25025320""}, ""batch_size"": {""description"": ""The number of media posts to retrieve in a single batch, ranging from 1 to 50. Defaults to 20."", ""type"": ""int, optional"", ""default"": ""20""}, ""next_cursor"": {""description"": ""The cursor for fetching the next set of media posts in pagination. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""followers"", ""description"": ""Retrieves the list of followers for a given Instagram user."", ""parameters"": {""user_id"": {""description"": ""The ID of the Instagram user whose followers are to be retrieved."", ""type"": ""str"", ""default"": ""25025320""}, ""batch_size"": {""description"": ""The number of followers to retrieve in one batch. Default is 20."", ""type"": ""int, optional"", ""default"": ""20""}, ""next_cursor"": {""description"": ""A cursor for pagination to fetch the next set of followers. Default is None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""getlenscreators"", ""description"": ""Fetches Lens creators from the Snapchat API using the provided parameters."", ""parameters"": {""cursor"": {""description"": ""A cursor indicating the starting point for fetching Lens creators. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""lists_details"", ""description"": ""Fetches and returns the public information of a Twitter List based on the given list ID."", ""parameters"": {""list_id"": {""description"": ""The ID of the Twitter List whose details are to be fetched."", ""type"": ""str"", ""default"": ""1591033111726391297""}}}, {""name"": ""video_subtitles"", ""description"": ""Fetches the available subtitles for a given YouTube video using the specified RapidAPI key."", ""parameters"": {""video_id"": {""description"": ""The ID of the YouTube video for which subtitles are to be fetched."", ""type"": ""str"", ""default"": ""PuQFESk0BrA""}}}, {""name"": ""get_user_info"", ""description"": ""Fetch all information about a specific user on Likee using the provided username."", ""parameters"": {""username"": {""description"": ""The Likee username to fetch information for. Example: 'MariamHany'."", ""type"": ""str"", ""default"": ""MariamHany""}}}, {""name"": ""search"", ""description"": ""Searches SoundCloud for tracks, users, or playlists based on the provided query."", ""parameters"": {""type"": {""description"": ""The type of search to be performed. Possible values are \""track\"", \""user\"", \""playlist\"", and \""all\""."", ""type"": ""str"", ""default"": ""all""}, ""query"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": ""almost lover""}}}]"
141,30180,Can you simulate a database query on a 'users' table to find all users who are over 30 years old and live in California?,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": "">30""}, {""state"": ""California""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
142,30588,Query the 'products' table to get all products that are out of stock.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""products"", ""conditions"": [{""stock"": 0}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
143,30824,How does the investment growth change if we do not adjust for inflation with the same parameters as the previous query?,"[{""name"": ""project_investment_growth"", ""arguments"": {""principal"": 10000, ""annual_addition"": 1000, ""years"": 10, ""return_rate"": 0.05, ""inflation"": [0.02, 0.03, 0.02, 0.03, 0.02, 0.03, 0.02, 0.03, 0.02, 0.03], ""inflation_adjusted"": false}}]","[{""name"": ""predict_evolution_rate"", ""description"": ""Predict the evolutionary rate for a specific species for a given timeframe."", ""parameters"": {""species"": {""description"": ""The species that the evolution rate will be predicted for."", ""type"": ""str"", ""default"": ""Darwin""}, ""years"": {""description"": ""Number of years for the prediction."", ""type"": ""int"", ""default"": ""Darwin""}, ""model"": {""description"": ""The model used to make the prediction, options: 'Darwin', 'Lamarck', default is 'Darwin'."", ""type"": ""str""}}}, {""name"": ""project_investment_growth"", ""description"": ""Projects the growth of an investment over a specified number of years."", ""parameters"": {""principal"": {""description"": ""The initial investment amount."", ""type"": ""float"", ""default"": true}, ""annual_addition"": {""description"": ""The amount added to the investment annually."", ""type"": ""float"", ""default"": true}, ""years"": {""description"": ""The number of years to project the investment growth."", ""type"": ""int""}, ""return_rate"": {""description"": ""The annual return rate as a decimal (e.g., 0.07 for 7%)."", ""type"": ""float""}, ""inflation"": {""description"": ""A list of annual inflation rates as decimals."", ""type"": ""List[float]""}, ""inflation_adjusted"": {""description"": ""Whether to adjust the final value for inflation. Defaults to True."", ""type"": ""bool, optional""}}}]"
144,31150,What are the autocomplete suggestions for the query 'San'?,"[{""name"": ""search_autocomplete_api"", ""arguments"": {""q"": ""San""}}]","[{""name"": ""realtime_weather_api"", ""description"": ""Fetches current weather information based on the provided query parameter."", ""parameters"": {""q"": {""description"": ""Query parameter used to specify the location for which weather data is required. It can be in various formats such as:"", ""type"": ""str"", ""default"": ""53.1,-0.13""}}}, {""name"": ""zones_type_zoneid_forecast"", ""description"": ""Fetches the forecast data for a given zone type and zone ID using the National Weather Service API."", ""parameters"": {""type"": {""description"": ""A valid zone type (e.g., public, coastal, fire)."", ""type"": ""str"", ""default"": """"}, ""zoneid"": {""description"": ""The ID of the zone for which to fetch the forecast."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""search_autocomplete_api"", ""description"": ""Search or Autocomplete API returns matching cities and towns based on the query."", ""parameters"": {""q"": {""description"": ""Query parameter used to obtain matching locations. Supported formats include:"", ""type"": ""str"", ""default"": """"}}}, {""name"": ""astronomy_api"", ""description"": ""Fetches astronomical data including sunrise, sunset, moonrise, moonset, moon phase, and illumination in JSON format based on the provided query parameters."", ""parameters"": {""q"": {""description"": ""The query parameter for retrieving data. It supports various formats such as:"", ""type"": ""str"", ""default"": ""London""}, ""dt"": {""description"": ""The date for which to retrieve the astronomical data. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}]"
145,31217,Simulate a database query for orders placed in January 2023.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""orders"", ""conditions"": [{""order_date"": ""2023-01""}]}}]","[{""name"": ""geocode_city"", ""description"": ""Retrieves the latitude and longitude coordinates of a given city using the Maps.co Geocoding API."", ""parameters"": {""city"": {""description"": ""The name of the city."", ""type"": ""str""}}}, {""name"": ""get_holidays_by_year"", ""description"": ""Retrieves the list of public holidays for a given year and country using the Nager.Date API."", ""parameters"": {""year"": {""description"": ""The year for which to retrieve the holidays."", ""type"": ""int""}, ""country_code"": {""description"": ""The two-letter ISO 3166-1 alpha-2 country code."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
146,31534,"Simulate a database query on a 'products' table with conditions {'price': '<100', 'category': 'electronics'}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""products"", ""conditions"": [{""price"": ""<100"", ""category"": ""electronics""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}]"
147,31551,"What is the longest word in ['database', 'query', 'optimization'] and is '(()' valid?","[{""name"": ""find_longest_word"", ""arguments"": {""words"": [""database"", ""query"", ""optimization""]}}, {""name"": ""is_valid_parentheses"", ""arguments"": {""s"": ""(()""}}]","[{""name"": ""is_valid_parentheses"", ""description"": ""Checks if a string contains valid parentheses."", ""parameters"": {""s"": {""description"": ""The input string."", ""type"": ""str""}}}, {""name"": ""format_date"", ""description"": ""Converts a date string from one format to another."", ""parameters"": {""date"": {""description"": ""The date string to convert."", ""type"": ""str""}, ""input_format"": {""description"": ""The format of the input date string."", ""type"": ""str""}, ""output_format"": {""description"": ""The desired format of the output date string."", ""type"": ""str""}}}, {""name"": ""find_longest_word"", ""description"": ""Finds the longest word in a list of words."", ""parameters"": {""words"": {""description"": ""A list of words."", ""type"": ""List[str]""}}}]"
148,31601,Can you fetch the LDU boundary for the H3 index 789321083765823493 using the query_for_ldu_boundary_by_h3index function?,"[{""name"": ""query_for_ldu_boundary_by_h3index"", ""arguments"": {""h3ndex"": 789321083765823493}}]","[{""name"": ""query_for_ldu_boundary_by_h3index"", ""description"": ""Queries for a Local Delivery Unit (LDU) boundary by its H3 index."", ""parameters"": {""h3ndex"": {""description"": ""The H3 index used to query the LDU boundary."", ""type"": ""int"", ""default"": ""635775751926485631""}}}, {""name"": ""query_for_city_names_by_state"", ""description"": ""This function queries a list of city names for a given state from the RapidAPI \""Boundaries\"" service."", ""parameters"": {""state"": {""description"": ""The name of the state to query for city names."", ""type"": ""str"", ""default"": ""berlin""}}}, {""name"": ""map"", ""description"": ""Fetches a map image in WMTS format based on the given parameters."", ""parameters"": {""tilerow"": {""description"": ""The WMTS tile row number (latitude direction)."", ""type"": ""int"", ""default"": ""25806""}, ""tilematrix"": {""description"": ""The tile matrix, specified in the format `[EPSG code]:[Scale value]`."", ""type"": ""str"", ""default"": ""EPSG:3857:16""}, ""tilecol"": {""description"": ""The WMTS tile column number (longitude direction)."", ""type"": ""int"", ""default"": ""58211""}, ""rotationangle"": {""description"": ""Angle to rotate the map image. Valid range is 0 to 359, default is 0."", ""type"": ""int, optional"", ""default"": """"}, ""mapstyle"": {""description"": ""Design of the map. Format is `[design]_[annotation size]`, default is `std_pc`."", ""type"": ""str, optional"", ""default"": """"}, ""landmarkicon"": {""description"": ""Display of landmark icons. `on` for display, `off` for hide, default is `off`."", ""type"": ""str, optional"", ""default"": """"}, ""resolution"": {""description"": ""Resolution of the map image. Values can be `1`, `2`, or `4`, default is `1`."", ""type"": ""str, optional"", ""default"": """"}, ""contour"": {""description"": ""Display of contour lines. `on` for display, `off` for hide, default is `on`."", ""type"": ""str, optional"", ""default"": """"}, ""bldgname"": {""description"": ""Display of building names. `on` for display, `off` for hide, default is `off`."", ""type"": ""str, optional"", ""default"": """"}, ""logo"": {""description"": ""Display of brand logos. `on` for display, `off` for hide, default is `off`."", ""type"": ""str, optional"", ""default"": """"}, ""target"": {""description"": ""Display contents of the map. Values can be `1` for background only, `2` for annotations only, `3` for both, default is `3`."", ""type"": ""str, optional"", ""default"": """"}, ""format"": {""description"": ""Output image format. Values can be `image/png` or `image/jpeg`, default is `image/png`."", ""type"": ""str, optional"", ""default"": """"}}}]"
149,31682,Can you simulate a database query to find all active users with the email 'example@email.com' from the 'users' table?,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""email"": ""example@email.com"", ""status"": ""active""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
150,32106,"Simulate a database query for the 'users' table to find users who joined in '2023' and are from 'USA'. Also, get the coordinates of Los Angeles.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""joined_year"": ""2023"", ""country"": ""USA""}]}}, {""name"": ""geocode_city"", ""arguments"": {""city"": ""Los Angeles""}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""geocode_city"", ""description"": ""Retrieves the latitude and longitude coordinates of a given city using the Maps.co Geocoding API."", ""parameters"": {""city"": {""description"": ""The name of the city."", ""type"": ""str""}}}, {""name"": ""project_investment_growth"", ""description"": ""Projects the growth of an investment over a specified number of years."", ""parameters"": {""principal"": {""description"": ""The initial investment amount."", ""type"": ""float"", ""default"": true}, ""annual_addition"": {""description"": ""The amount added to the investment annually."", ""type"": ""float"", ""default"": true}, ""years"": {""description"": ""The number of years to project the investment growth."", ""type"": ""int""}, ""return_rate"": {""description"": ""The annual return rate as a decimal (e.g., 0.07 for 7%)."", ""type"": ""float""}, ""inflation"": {""description"": ""A list of annual inflation rates as decimals."", ""type"": ""List[float]""}, ""inflation_adjusted"": {""description"": ""Whether to adjust the final value for inflation. Defaults to True."", ""type"": ""bool, optional""}}}, {""name"": ""place_safeway_order"", ""description"": ""Order specified items from a Safeway location."", ""parameters"": {""location"": {""description"": ""The location of the Safeway store, e.g., 'Palo Alto, CA'."", ""type"": ""str""}, ""items"": {""description"": ""List of items to order."", ""type"": ""list""}, ""quantity"": {""description"": ""Quantity of each item in the order list."", ""type"": ""list""}}}]"
151,32531,Query the LDU boundary for H3 index 123456789012345678 and city names in Texas using the respective functions.,"[{""name"": ""query_for_ldu_boundary_by_h3index"", ""arguments"": {""h3ndex"": 123456789012345678}}, {""name"": ""query_for_city_names_by_state"", ""arguments"": {""state"": ""Texas""}}]","[{""name"": ""query_for_ldu_boundary_by_h3index"", ""description"": ""Queries for a Local Delivery Unit (LDU) boundary by its H3 index."", ""parameters"": {""h3ndex"": {""description"": ""The H3 index used to query the LDU boundary."", ""type"": ""int"", ""default"": ""635775751926485631""}}}, {""name"": ""query_for_city_names_by_state"", ""description"": ""This function queries a list of city names for a given state from the RapidAPI \""Boundaries\"" service."", ""parameters"": {""state"": {""description"": ""The name of the state to query for city names."", ""type"": ""str"", ""default"": ""berlin""}}}, {""name"": ""map"", ""description"": ""Fetches a map image in WMTS format based on the given parameters."", ""parameters"": {""tilerow"": {""description"": ""The WMTS tile row number (latitude direction)."", ""type"": ""int"", ""default"": ""25806""}, ""tilematrix"": {""description"": ""The tile matrix, specified in the format `[EPSG code]:[Scale value]`."", ""type"": ""str"", ""default"": ""EPSG:3857:16""}, ""tilecol"": {""description"": ""The WMTS tile column number (longitude direction)."", ""type"": ""int"", ""default"": ""58211""}, ""rotationangle"": {""description"": ""Angle to rotate the map image. Valid range is 0 to 359, default is 0."", ""type"": ""int, optional"", ""default"": """"}, ""mapstyle"": {""description"": ""Design of the map. Format is `[design]_[annotation size]`, default is `std_pc`."", ""type"": ""str, optional"", ""default"": """"}, ""landmarkicon"": {""description"": ""Display of landmark icons. `on` for display, `off` for hide, default is `off`."", ""type"": ""str, optional"", ""default"": """"}, ""resolution"": {""description"": ""Resolution of the map image. Values can be `1`, `2`, or `4`, default is `1`."", ""type"": ""str, optional"", ""default"": """"}, ""contour"": {""description"": ""Display of contour lines. `on` for display, `off` for hide, default is `on`."", ""type"": ""str, optional"", ""default"": """"}, ""bldgname"": {""description"": ""Display of building names. `on` for display, `off` for hide, default is `off`."", ""type"": ""str, optional"", ""default"": """"}, ""logo"": {""description"": ""Display of brand logos. `on` for display, `off` for hide, default is `off`."", ""type"": ""str, optional"", ""default"": """"}, ""target"": {""description"": ""Display contents of the map. Values can be `1` for background only, `2` for annotations only, `3` for both, default is `3`."", ""type"": ""str, optional"", ""default"": """"}, ""format"": {""description"": ""Output image format. Values can be `image/png` or `image/jpeg`, default is `image/png`."", ""type"": ""str, optional"", ""default"": """"}}}]"
152,32718,Query the 'sales' table in a database for records where the product is 'iPhone' and the date is '2023-01-01'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""sales"", ""conditions"": [{""product"": ""iPhone""}, {""date"": ""2023-01-01""}]}}]","[{""name"": ""whole_foods_order"", ""description"": ""Places an order at Whole Foods."", ""parameters"": {""store_location"": {""description"": ""The location of the Whole Foods store."", ""type"": ""str""}, ""item_list"": {""description"": ""A list of items to order."", ""type"": ""list""}, ""order_size"": {""description"": ""The size of the order. Allowed values: \""small\"", \""medium\"", or \""large\""."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""calculate_calorie_intake"", ""description"": ""Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals."", ""parameters"": {""weight_kg"": {""description"": ""Body weight in kilograms."", ""type"": ""float""}, ""height_cm"": {""description"": ""Height in centimeters."", ""type"": ""float""}, ""age"": {""description"": ""Age in years."", ""type"": ""int""}, ""sex"": {""description"": ""Biological sex, either 'male' or 'female'."", ""type"": ""str""}, ""activity_level"": {""description"": ""Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active)."", ""type"": ""int""}, ""goal"": {""description"": ""Fitness goal, either 'lose', 'maintain', or 'gain'."", ""type"": ""str""}}}]"
153,33166,Simulate a database query on a 'inventory' table to find all items that are out of stock and have been reviewed more than 10 times.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""inventory"", ""conditions"": [{""stock_status"": ""out of stock""}, {""review_count"": "">10""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
154,33386,"Get all comedy movies released in 2005 from the Bollywood recommendations, and then search for TV shows titled 'Breaking Bad' on page 2 of the OTT details. Additionally, request a video with the query 'I am the one who knocks'.","[{""name"": ""fetch_movies"", ""arguments"": {""year"": ""2005"", ""genre"": ""comedy""}}, {""name"": ""search"", ""arguments"": {""title"": ""Breaking Bad"", ""page"": 2}}, {""name"": ""get_video"", ""arguments"": {""q"": ""I am the one who knocks""}}]","[{""name"": ""fetch_movies"", ""description"": ""Fetch a list of movies from 2000 to 2019 based on the selected genre and year using the specified RapidAPI key."", ""parameters"": {""year"": {""description"": ""The year for which to fetch movies. Should be between 2000 and 2019."", ""type"": ""str"", ""default"": ""2018""}, ""genre"": {""description"": ""The genre of the movies to fetch."", ""type"": ""str"", ""default"": ""Comedy""}}}, {""name"": ""actors_random"", ""description"": ""Fetches a random list of actors from the Movies Database RapidAPI."", ""parameters"": {""limit"": {""description"": ""The number of random actors to retrieve. Defaults to None, and the API will use its default value if not specified."", ""type"": ""int, optional"", ""default"": """"}}}, {""name"": ""search"", ""description"": ""Searches for a movie or TV show based on the given title."", ""parameters"": {""title"": {""description"": ""The title of the movie or TV show to search for."", ""type"": ""str"", ""default"": ""Endgame""}, ""page"": {""description"": ""The page number to retrieve from the search results. Default is 1. Maximum number of pages returned is 10."", ""type"": ""int, optional"", ""default"": ""1""}}}, {""name"": ""get_video"", ""description"": ""Fetches video data using a query string from the Playphrase API."", ""parameters"": {""q"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": """"}}}]"
155,33404,"What are the public holidays in Australia for the year 2026? Additionally, simulate a database query on the 'customers' table where the customer's age is between 25 and 35 and their city is 'Melbourne'.","[{""name"": ""get_holidays_by_year"", ""arguments"": {""year"": 2026, ""country_code"": ""AU""}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""customers"", ""conditions"": [{""age"": ""25-35""}, {""city"": ""Melbourne""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""geocode_city"", ""description"": ""Retrieves the latitude and longitude coordinates of a given city using the Maps.co Geocoding API."", ""parameters"": {""city"": {""description"": ""The name of the city."", ""type"": ""str""}}}, {""name"": ""get_holidays_by_year"", ""description"": ""Retrieves the list of public holidays for a given year and country using the Nager.Date API."", ""parameters"": {""year"": {""description"": ""The year for which to retrieve the holidays."", ""type"": ""int""}, ""country_code"": {""description"": ""The two-letter ISO 3166-1 alpha-2 country code."", ""type"": ""str""}}}]"
156,33499,Query the 'inventory' table in a database for items with less than 10 units in stock.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""inventory"", ""conditions"": [{""stock"": {""$lt"": 10}}]}}]","[{""name"": ""whole_foods_order"", ""description"": ""Places an order at Whole Foods."", ""parameters"": {""store_location"": {""description"": ""The location of the Whole Foods store."", ""type"": ""str""}, ""item_list"": {""description"": ""A list of items to order."", ""type"": ""list""}, ""order_size"": {""description"": ""The size of the order. Allowed values: \""small\"", \""medium\"", or \""large\""."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""calculate_calorie_intake"", ""description"": ""Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals."", ""parameters"": {""weight_kg"": {""description"": ""Body weight in kilograms."", ""type"": ""float""}, ""height_cm"": {""description"": ""Height in centimeters."", ""type"": ""float""}, ""age"": {""description"": ""Age in years."", ""type"": ""int""}, ""sex"": {""description"": ""Biological sex, either 'male' or 'female'."", ""type"": ""str""}, ""activity_level"": {""description"": ""Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active)."", ""type"": ""int""}, ""goal"": {""description"": ""Fitness goal, either 'lose', 'maintain', or 'gain'."", ""type"": ""str""}}}]"
157,33741,"Simulate a query to the 'users' table with conditions {'name': 'John', 'age': 30}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""name"": ""John"", ""age"": 30}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""predict_forest_area"", ""description"": ""Predicts the change in forest area over a specified number of years."", ""parameters"": {""location"": {""description"": ""The geographic location for the prediction."", ""type"": ""str""}, ""num_years"": {""description"": ""The number of years into the future to make the prediction."", ""type"": ""int""}, ""include_humans"": {""description"": ""Whether to include the impact of human activities in the prediction. Defaults to False."", ""type"": ""bool, optional""}}}, {""name"": ""place_safeway_order"", ""description"": ""Order specified items from a Safeway location."", ""parameters"": {""location"": {""description"": ""The location of the Safeway store, e.g., 'Palo Alto, CA'."", ""type"": ""str""}, ""items"": {""description"": ""List of items to order."", ""type"": ""list""}, ""quantity"": {""description"": ""Quantity of each item in the order list."", ""type"": ""list""}}}, {""name"": ""get_holidays_by_year"", ""description"": ""Retrieves the list of public holidays for a given year and country using the Nager.Date API."", ""parameters"": {""year"": {""description"": ""The year for which to retrieve the holidays."", ""type"": ""int""}, ""country_code"": {""description"": ""The two-letter ISO 3166-1 alpha-2 country code."", ""type"": ""str""}}}, {""name"": ""assess_diabetes_risk"", ""description"": ""Assesses the risk of developing type 2 diabetes based on body mass index (BMI) and physical activity level."", ""parameters"": {""weight_lbs"": {""description"": ""Body weight in pounds."", ""type"": ""int""}, ""height_inches"": {""description"": ""Height in inches."", ""type"": ""int""}, ""activity"": {""description"": ""Physical activity level. Allowed values: \""sedentary\"", \""lightly active\"", \""moderately active\"", or \""very active\""."", ""type"": ""str""}}}]"
158,33930,Fetch the details of a product with ID 67890 and search for a product on Tokopedia with the query 'laptop' and action 'search'.,"[{""name"": ""get_product"", ""arguments"": {""is_id"": 67890}}, {""name"": ""search_product"", ""arguments"": {""query"": ""laptop"", ""act"": ""search""}}]","[{""name"": ""get_product"", ""description"": ""Fetches product details from an API using the given product ID."", ""parameters"": {""is_id"": {""description"": ""The product ID for which to retrieve details."", ""type"": ""int"", ""default"": """"}}}, {""name"": ""emailvalidation"", ""description"": ""Validates whether the given email address is disposable or not by using the Toolbench RapidAPI service."", ""parameters"": {""email"": {""description"": ""The email address to be validated."", ""type"": ""str"", ""default"": ""info@peekdomain.com""}}}, {""name"": ""search_product"", ""description"": ""This function searches for a product using the Tokopedia API based on the given query and act parameters."", ""parameters"": {""query"": {""description"": ""The search query string for the product to be searched."", ""type"": ""str"", ""default"": ""Celana Jeans""}, ""act"": {""description"": ""The action parameter to specify the type of search."", ""type"": ""str"", ""default"": ""search""}}}]"
159,34036,"Fetch the first 10 products from the 'Electronics' category in the store and get the product details for the product with ID 12345. Also, search for creators on Patreon using the search query 'art' and retrieve products from the 'Books' category using the Toolbench RapidAPI.","[{""name"": ""get_products_in_category"", ""arguments"": {""skip"": 0, ""limit"": 10, ""category"": ""Electronics""}}, {""name"": ""get_product"", ""arguments"": {""is_id"": 12345}}, {""name"": ""search_for_creators"", ""arguments"": {""search_query"": ""art""}}, {""name"": ""getproductbycategory"", ""arguments"": {""category"": ""Books""}}]","[{""name"": ""get_products_in_category"", ""description"": ""Fetches a list of products from a specified category in a store with pagination."", ""parameters"": {""skip"": {""description"": ""The number of items to skip before starting to collect the result set."", ""type"": ""int"", ""default"": """"}, ""limit"": {""description"": ""The number of items to return in the result set."", ""type"": ""int"", ""default"": """"}, ""category"": {""description"": ""The category from which to fetch products."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""getproductbycategory"", ""description"": ""Retrieves products from a given category using the Toolbench RapidAPI."", ""parameters"": {""category"": {""description"": ""The category of the product to search for."", ""type"": ""str"", ""default"": ""Phones""}}}, {""name"": ""get_product"", ""description"": ""Fetches product details from an API using the given product ID."", ""parameters"": {""is_id"": {""description"": ""The product ID for which to retrieve details."", ""type"": ""int"", ""default"": """"}}}, {""name"": ""search_for_creators"", ""description"": ""Search for creators on Patreon using the given search query."", ""parameters"": {""search_query"": {""description"": ""The search term used to query creators on Patreon."", ""type"": ""str"", ""default"": ""adnr studios""}}}]"
160,34062,"Search for streets or postcodes in the UK with the query 'high street' and a limit of 3 results. Additionally, get the town information for the ZIP code 9000 in Switzerland, and find address suggestions for '450 Serra Mall'.","[{""name"": ""search"", ""arguments"": {""q"": ""high street"", ""limit"": 3}}, {""name"": ""getzip"", ""arguments"": {""zip"": 9000}}, {""name"": ""address_autosuggest"", ""arguments"": {""query"": ""450 Serra Mall""}}]","[{""name"": ""search"", ""description"": ""Searches for a street or post code based on a query string."", ""parameters"": {""q"": {""description"": ""The query string used to search for a street or post code."", ""type"": ""str"", ""default"": ""Downing Street London""}, ""limit"": {""description"": ""The maximum number of results to return. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}}}, {""name"": ""getzip"", ""description"": ""Fetch town information based on a provided ZIP code (Postleitzahl) using the RapidAPI."", ""parameters"": {""zip"": {""description"": ""The ZIP code for which to fetch town information."", ""type"": ""int"", ""default"": ""3052""}}}, {""name"": ""address_autosuggest"", ""description"": ""Fetches address suggestions based on a partial or complete address query using the Address Autosuggest API."", ""parameters"": {""query"": {""description"": ""The partial or complete text of the address to search for suggestions."", ""type"": ""str"", ""default"": ""Bridge""}}}]"
161,34097,"Get the 48-hour forecast for the city of Rio de Janeiro, Brazil using its latitude and longitude and search for matching cities and towns for the location query 'auto:ip'.","[{""name"": ""hourly_forecast_48_hours"", ""arguments"": {""latitude"": ""-22.9068"", ""longitude"": ""-43.1729""}}, {""name"": ""search_autocomplete_api"", ""arguments"": {""q"": ""auto:ip""}}]","[{""name"": ""search_autocomplete_api"", ""description"": ""Search or Autocomplete API returns matching cities and towns based on the query."", ""parameters"": {""q"": {""description"": ""Query parameter used to obtain matching locations. Supported formats include:"", ""type"": ""str"", ""default"": """"}}}, {""name"": ""get_hourly_forecast"", ""description"": ""Retrieves the hourly weather forecast for a specified city using the RapidAPI Cloud Cast service."", ""parameters"": {""city"": {""description"": ""The name of the city for which to retrieve the hourly weather forecast."", ""type"": ""str"", ""default"": ""New York""}}}, {""name"": ""get_5_day_3_hour_forecast_data"", ""description"": ""Fetches the 5-day weather forecast data with 3-hour intervals for a specified location."", ""parameters"": {""q"": {""description"": ""The location query in the format \""{city name},{country code}\"". The city name and country code should be divided by a comma, and the country code should follow ISO 3166 standards. Defaults to 'dallas,us'."", ""type"": ""str"", ""default"": ""dallas,us""}}}, {""name"": ""by_geographic_coordinates"", ""description"": ""Fetches weather data based on geographic coordinates."", ""parameters"": {""lon"": {""description"": ""Longitude of the geographic coordinates."", ""type"": ""int"", ""default"": ""139""}, ""lat"": {""description"": ""Latitude of the geographic coordinates."", ""type"": ""int"", ""default"": ""35""}, ""units"": {""description"": ""Units of measurement. Options are 'standard', 'metric', and 'imperial'. Defaults to 'standard' if not specified."", ""type"": ""str, optional"", ""default"": """"}, ""lang"": {""description"": ""Language for the output. Defaults to the API's default language if not specified."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""hourly_forecast_48_hours"", ""description"": ""Fetches a 48-hour weather forecast for the specified latitude and longitude coordinates."", ""parameters"": {""latitude"": {""description"": ""The latitude coordinate for the forecast location."", ""type"": ""str"", ""default"": ""-22.95""}, ""longitude"": {""description"": ""The longitude coordinate for the forecast location."", ""type"": ""str"", ""default"": ""-43.21""}}}]"
162,34170,Retrieve the first 5 articles from page 3 of climate news without specifying a search query.,"[{""name"": ""article_page"", ""arguments"": {""is_id"": 3, ""limit"": 5}}]","[{""name"": ""search"", ""description"": ""Searches across the entire news index from the last 14 days using the BizToc API."", ""parameters"": {""q"": {""description"": ""The search query string. All provided terms are considered required by the API."", ""type"": ""str"", ""default"": ""apple""}}}, {""name"": ""article_page"", ""description"": ""Fetches a page of articles based on the provided page ID, with an optional limit on the number of articles returned and a specified RapidAPI key."", ""parameters"": {""is_id"": {""description"": ""The ID of the page to fetch articles from."", ""type"": ""int"", ""default"": ""1""}, ""limit"": {""description"": ""The maximum number of articles to retrieve. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}}}]"
163,34199,What are the auto-complete suggestions for the stock market query 'IBM' and 'Intel'?,"[{""name"": ""market_auto_complete"", ""arguments"": {""query"": ""IBM""}}, {""name"": ""market_auto_complete"", ""arguments"": {""query"": ""Intel""}}]","[{""name"": ""market_auto_complete"", ""description"": ""Fetch auto-complete suggestions for stock market queries."", ""parameters"": {""query"": {""description"": ""The search query for which auto-complete suggestions are needed."", ""type"": ""str"", ""default"": ""nasdaq""}}}]"
164,34202,"Please search for a product on Tokopedia using the query 'camera' and the action 'search'. Also, perform another search using the query 'smartwatch' and the action 'search'. For both searches, could you use the custom API key 'ghi789'?","[{""name"": ""search_product"", ""arguments"": {""query"": ""camera"", ""act"": ""search""}}, {""name"": ""search_product"", ""arguments"": {""query"": ""smartwatch"", ""act"": ""search""}}]","[{""name"": ""search_product"", ""description"": ""This function searches for a product using the Tokopedia API based on the given query and act parameters."", ""parameters"": {""query"": {""description"": ""The search query string for the product to be searched."", ""type"": ""str"", ""default"": ""Celana Jeans""}, ""act"": {""description"": ""The action parameter to specify the type of search."", ""type"": ""str"", ""default"": ""search""}}}]"
165,34469,Find suggestions for the search query 'ReactJS' and also the ones for 'AngularJS'.,"[{""name"": ""search_suggestions"", ""arguments"": {""query"": ""ReactJS""}}, {""name"": ""search_suggestions"", ""arguments"": {""query"": ""AngularJS""}}]","[{""name"": ""search_suggestions"", ""description"": ""Fetches search suggestions from the Twitter API using specified query parameters."", ""parameters"": {""query"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": ""elonmusk""}, ""twttr_session"": {""description"": ""The Twitter session ID for authenticated requests. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""twttr_proxy"": {""description"": ""The Twitter proxy server address. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""cursor"": {""description"": ""The cursor for paginated results. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}]"
166,34656,Simulate a database query to find users with the name 'Alice' and age over 25 in the 'users' table.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""name"": ""Alice""}, {""age"": {""$gt"": 25}}]}}]","[{""name"": ""get_pokemon_move_info"", ""description"": ""Retrieves information about a Pok\u00e9mon's move using the Pok\u00e9API."", ""parameters"": {""pokemon_name"": {""description"": ""The name of the Pok\u00e9mon."", ""type"": ""str"", ""default"": ""run""}, ""move_name"": {""description"": ""The name of the move to check. Defaults to \""run\""."", ""type"": ""str, optional"", ""default"": ""run""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""geocode_city"", ""description"": ""Retrieves the latitude and longitude coordinates of a given city using the Maps.co Geocoding API."", ""parameters"": {""city"": {""description"": ""The name of the city."", ""type"": ""str""}}}, {""name"": ""project_investment_growth"", ""description"": ""Projects the growth of an investment over a specified number of years."", ""parameters"": {""principal"": {""description"": ""The initial investment amount."", ""type"": ""float"", ""default"": true}, ""annual_addition"": {""description"": ""The amount added to the investment annually."", ""type"": ""float"", ""default"": true}, ""years"": {""description"": ""The number of years to project the investment growth."", ""type"": ""int""}, ""return_rate"": {""description"": ""The annual return rate as a decimal (e.g., 0.07 for 7%)."", ""type"": ""float""}, ""inflation"": {""description"": ""A list of annual inflation rates as decimals."", ""type"": ""List[float]""}, ""inflation_adjusted"": {""description"": ""Whether to adjust the final value for inflation. Defaults to True."", ""type"": ""bool, optional""}}}]"
167,34657,"Can you search for books on Open Library with the title 'To Kill a Mockingbird'? Also, I'd like to fetch search suggestions for the query 'python programming' on YouTube.","[{""name"": ""search_title"", ""arguments"": {""title"": ""To Kill a Mockingbird""}}, {""name"": ""search_suggestions"", ""arguments"": {""q"": ""python programming""}}]","[{""name"": ""get_user_profile"", ""description"": ""Fetches the user profile from the 9GAG API using the provided username."", ""parameters"": {""username"": {""description"": ""The username of the user whose profile needs to be fetched."", ""type"": ""str"", ""default"": ""kleido007""}}}, {""name"": ""trending_gifs"", ""description"": ""Fetch currently trending GIFs from Giphy."", ""parameters"": {""limit"": {""description"": ""The maximum number of results to return. Defaults to 25 if not specified."", ""type"": ""str, optional"", ""default"": """"}, ""rating"": {""description"": ""Restricts results to the specified rating (y, g, pg, pg-13, or r)."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""get_chat_restrictions"", ""description"": ""Fetches chat restrictions for a given Twitch channel using the Toolbench RapidAPI."", ""parameters"": {""channel"": {""description"": ""The name of the Twitch channel to fetch chat restrictions for."", ""type"": ""str"", ""default"": ""xqc""}}}, {""name"": ""search_video_list_by_keywords"", ""description"": ""Search for videos on TikTok by specified keywords and additional filtering options."", ""parameters"": {""keywords"": {""description"": ""Keywords to search videos for."", ""type"": ""str"", ""default"": ""\u8e0a\u3063\u3066\u307f\u305f""}, ""sort_type"": {""description"": ""Criterion for sorting results. Defaults to '0'."", ""type"": ""str, optional"", ""default"": ""0""}, ""publish_time"": {""description"": ""Time filter for when videos were posted. Defaults to '0'."", ""type"": ""str, optional"", ""default"": ""0""}, ""cursor"": {""description"": ""Pagination cursor for navigating results. Defaults to '0'."", ""type"": ""str, optional"", ""default"": ""0""}, ""region"": {""description"": ""ISO region code to filter results by location. Defaults to 'US'."", ""type"": ""str, optional"", ""default"": ""US""}, ""count"": {""description"": ""Number of results to retrieve. Defaults to '10'."", ""type"": ""str, optional"", ""default"": ""10""}}}, {""name"": ""get_a_random_color"", ""description"": ""Fetches a random color or a specified number of random colors from the sRGB color space using the Toolbench RapidAPI."", ""parameters"": {""quantity"": {""description"": ""The number of colors to return. The maximum is 50. Defaults to 2. Values greater than 50 will default to 50, and values less than 1 will result in an empty array."", ""type"": ""int, optional"", ""default"": ""2""}}}, {""name"": ""search_title"", ""description"": ""Searches for books by a given title using the Open Library API."", ""parameters"": {""title"": {""description"": ""The title of the book to search for."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""search_suggestions"", ""description"": ""Fetches search suggestions for a given query using the Cheap YouTube API through RapidAPI."", ""parameters"": {""q"": {""description"": ""The search query for which to fetch suggestions."", ""type"": ""str"", ""default"": ""crypto""}}}, {""name"": ""sticker_search"", ""description"": ""Searches for animated stickers on Giphy using a search query and optional parameters."", ""parameters"": {""q"": {""description"": ""Search query term or phrase."", ""type"": ""str"", ""default"": ""cat""}, ""limit"": {""description"": ""Number of results to return, with a maximum of 100. Defaults to 25."", ""type"": ""str, optional"", ""default"": """"}, ""offset"": {""description"": ""Results offset, defaults to 0."", ""type"": ""str, optional"", ""default"": """"}, ""rating"": {""description"": ""Limit results to those rated (y, g, pg, pg-13, or r)."", ""type"": ""str, optional"", ""default"": """"}}}]"
168,34724,I want to know the file types I can convert a GIF image to and also echo the header 'Hi' and query 'There'.,"[{""name"": ""get_supported_file_type"", ""arguments"": {""input"": ""gif""}}, {""name"": ""echo"", ""arguments"": {""header1"": ""Hi"", ""query2"": ""There""}}]","[{""name"": ""get_supported_file_type"", ""description"": ""Retrieves the supported file types for a given input file type using the All-In-One File Converter API."", ""parameters"": {""input"": {""description"": ""The input file type for which to retrieve the supported file types."", ""type"": ""str"", ""default"": ""jpg""}}}, {""name"": ""qr_code_image_generator"", ""description"": ""Generates a QR code image for a given URL using the RapidAPI QR code generation service."", ""parameters"": {""url"": {""description"": ""The URL to be encoded in the QR code. Defaults to 'www.google.com'."", ""type"": ""str"", ""default"": ""www.google.com""}}}, {""name"": ""echo"", ""description"": ""Sends a GET request to the Echo API with specific headers and query parameters."", ""parameters"": {""header1"": {""description"": ""The first header to include in the request. Defaults to '1'."", ""type"": ""str, optional"", ""default"": ""1""}, ""query2"": {""description"": ""The second query parameter to include in the request. Defaults to '2'."", ""type"": ""str, optional"", ""default"": ""2""}}}]"
169,34914,"Fetch the channel panels for the Twitch channel 'theprimeagen'. After that, search for animated stickers on Giphy with the search query 'programming' and limit the results to 100.","[{""name"": ""get_channel_panels"", ""arguments"": {""channel"": ""theprimeagen""}}, {""name"": ""sticker_search"", ""arguments"": {""q"": ""programming"", ""limit"": ""100""}}]","[{""name"": ""get_channel_panels"", ""description"": ""Fetches the channel panels for a specified Twitch channel using the Twitch API."", ""parameters"": {""channel"": {""description"": ""The name of the Twitch channel to retrieve panels for."", ""type"": ""str"", ""default"": ""xQc""}}}, {""name"": ""sticker_search"", ""description"": ""Searches for animated stickers on Giphy using a search query and optional parameters."", ""parameters"": {""q"": {""description"": ""Search query term or phrase."", ""type"": ""str"", ""default"": ""cat""}, ""limit"": {""description"": ""Number of results to return, with a maximum of 100. Defaults to 25."", ""type"": ""str, optional"", ""default"": """"}, ""offset"": {""description"": ""Results offset, defaults to 0."", ""type"": ""str, optional"", ""default"": """"}, ""rating"": {""description"": ""Limit results to those rated (y, g, pg, pg-13, or r)."", ""type"": ""str, optional"", ""default"": """"}}}]"
170,35043,Fetch search suggestions for the query 'Python programming' using the Cheap YouTube API.,"[{""name"": ""search_suggestions"", ""arguments"": {""q"": ""Python programming""}}]","[{""name"": ""search_suggestions"", ""description"": ""Fetches search suggestions for a given query using the Cheap YouTube API through RapidAPI."", ""parameters"": {""q"": {""description"": ""The search query for which to fetch suggestions."", ""type"": ""str"", ""default"": ""crypto""}}}, {""name"": ""sticker_search"", ""description"": ""Searches for animated stickers on Giphy using a search query and optional parameters."", ""parameters"": {""q"": {""description"": ""Search query term or phrase."", ""type"": ""str"", ""default"": ""cat""}, ""limit"": {""description"": ""Number of results to return, with a maximum of 100. Defaults to 25."", ""type"": ""str, optional"", ""default"": """"}, ""offset"": {""description"": ""Results offset, defaults to 0."", ""type"": ""str, optional"", ""default"": """"}, ""rating"": {""description"": ""Limit results to those rated (y, g, pg, pg-13, or r)."", ""type"": ""str, optional"", ""default"": """"}}}]"
171,35079,Simulate querying a database on table 'orders' with conditions: total > 100 and status = 'completed'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""orders"", ""conditions"": [{""total"": {""$gt"": 100}}, {""status"": ""completed""}]}}]","[{""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}, {""name"": ""project_population"", ""description"": ""Projects the population size after a specified number of years."", ""parameters"": {""current_pop"": {""description"": ""The current population size."", ""type"": ""int"", ""default"": 1.2}, ""num_years"": {""description"": ""The number of years into the future to make the projection."", ""type"": ""int"", ""default"": 1.2}, ""annual_growth"": {""description"": ""The annual population growth rate as a percentage. Defaults to 1.2."", ""type"": ""float, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""project_investment_growth"", ""description"": ""Projects the growth of an investment over a specified number of years."", ""parameters"": {""principal"": {""description"": ""The initial investment amount."", ""type"": ""float"", ""default"": true}, ""annual_addition"": {""description"": ""The amount added to the investment annually."", ""type"": ""float"", ""default"": true}, ""years"": {""description"": ""The number of years to project the investment growth."", ""type"": ""int""}, ""return_rate"": {""description"": ""The annual return rate as a decimal (e.g., 0.07 for 7%)."", ""type"": ""float""}, ""inflation"": {""description"": ""A list of annual inflation rates as decimals."", ""type"": ""List[float]""}, ""inflation_adjusted"": {""description"": ""Whether to adjust the final value for inflation. Defaults to True."", ""type"": ""bool, optional""}}}, {""name"": ""predict_forest_area"", ""description"": ""Predicts the change in forest area over a specified number of years."", ""parameters"": {""location"": {""description"": ""The geographic location for the prediction."", ""type"": ""str""}, ""num_years"": {""description"": ""The number of years into the future to make the prediction."", ""type"": ""int""}, ""include_humans"": {""description"": ""Whether to include the impact of human activities in the prediction. Defaults to False."", ""type"": ""bool, optional""}}}, {""name"": ""get_dna_sequence"", ""description"": ""Retrieves the DNA sequence for a given sequence ID from the NCBI Nucleotide database."", ""parameters"": {""sequence_id"": {""description"": ""The unique identifier for the DNA sequence."", ""type"": ""str"", ""default"": ""fasta""}, ""file_format"": {""description"": ""The format of the returned sequence. Allowed values: \""fasta\"" (default) or \""gb\""."", ""type"": ""str, optional""}, ""upstream_bases"": {""description"": ""The number of bases upstream of the sequence to include. Defaults to 0."", ""type"": ""int, optional"", ""default"": ""fasta""}}}]"
172,35099,"Fetch the first 15 products from the 'Sports' category in the store and get the product details for the product with ID 35790. Additionally, search for creators on Patreon using the search query 'writing' and retrieve products from the 'Kitchen' category using the Toolbench RapidAPI.","[{""name"": ""get_products_in_category"", ""arguments"": {""skip"": 0, ""limit"": 15, ""category"": ""Sports""}}, {""name"": ""get_product"", ""arguments"": {""is_id"": 35790}}, {""name"": ""search_for_creators"", ""arguments"": {""search_query"": ""writing""}}, {""name"": ""getproductbycategory"", ""arguments"": {""category"": ""Kitchen""}}]","[{""name"": ""get_products_in_category"", ""description"": ""Fetches a list of products from a specified category in a store with pagination."", ""parameters"": {""skip"": {""description"": ""The number of items to skip before starting to collect the result set."", ""type"": ""int"", ""default"": """"}, ""limit"": {""description"": ""The number of items to return in the result set."", ""type"": ""int"", ""default"": """"}, ""category"": {""description"": ""The category from which to fetch products."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""getproductbycategory"", ""description"": ""Retrieves products from a given category using the Toolbench RapidAPI."", ""parameters"": {""category"": {""description"": ""The category of the product to search for."", ""type"": ""str"", ""default"": ""Phones""}}}, {""name"": ""get_product"", ""description"": ""Fetches product details from an API using the given product ID."", ""parameters"": {""is_id"": {""description"": ""The product ID for which to retrieve details."", ""type"": ""int"", ""default"": """"}}}, {""name"": ""search_for_creators"", ""description"": ""Search for creators on Patreon using the given search query."", ""parameters"": {""search_query"": {""description"": ""The search term used to query creators on Patreon."", ""type"": ""str"", ""default"": ""adnr studios""}}}]"
173,35129,"Simulate a query to the 'employees' table with conditions: {'salary': {'>': 50000}, 'department': 'HR'} and {'position': 'manager'} or {'position': 'director'}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""employees"", ""conditions"": [{""salary"": {"">"": 50000}, ""department"": ""HR""}, {""$or"": [{""position"": ""manager""}, {""position"": ""director""}]}]}}]","[{""name"": ""whole_foods_order"", ""description"": ""Places an order at Whole Foods."", ""parameters"": {""store_location"": {""description"": ""The location of the Whole Foods store."", ""type"": ""str""}, ""item_list"": {""description"": ""A list of items to order."", ""type"": ""list""}, ""order_size"": {""description"": ""The size of the order. Allowed values: \""small\"", \""medium\"", or \""large\""."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""calculate_calorie_intake"", ""description"": ""Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals."", ""parameters"": {""weight_kg"": {""description"": ""Body weight in kilograms."", ""type"": ""float""}, ""height_cm"": {""description"": ""Height in centimeters."", ""type"": ""float""}, ""age"": {""description"": ""Age in years."", ""type"": ""int""}, ""sex"": {""description"": ""Biological sex, either 'male' or 'female'."", ""type"": ""str""}, ""activity_level"": {""description"": ""Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active)."", ""type"": ""int""}, ""goal"": {""description"": ""Fitness goal, either 'lose', 'maintain', or 'gain'."", ""type"": ""str""}}}]"
174,35165,"Extract data from 'Pages Jaunes' for the keyword 'hotels' in the location 'Nice'. Also, find links related to 'book fairs' and search for images using the query 'books'.","[{""name"": ""pagesjaunes"", ""arguments"": {""pjpage"": 1, ""pjlocation"": ""Nice"", ""pjkeyword"": ""hotels""}}, {""name"": ""links_finder"", ""arguments"": {""query"": ""book fairs""}}, {""name"": ""search"", ""arguments"": {""q"": ""books""}}]","[{""name"": ""pagesjaunes"", ""description"": ""This function extracts data from the \""Pages Jaunes\"" (Yellow Pages) for a given location and keyword."", ""parameters"": {""pjpage"": {""description"": ""The page number to retrieve."", ""type"": ""int"", ""default"": ""1""}, ""pjlocation"": {""description"": ""The location to search within \""Pages Jaunes\""."", ""type"": ""str"", ""default"": ""Paris""}, ""pjkeyword"": {""description"": ""The keyword to search for in \""Pages Jaunes\""."", ""type"": ""str"", ""default"": ""Restaurant""}}}, {""name"": ""links_finder"", ""description"": ""Fetches relevant links based on a given query using the ExplorArc's Link Finder API."", ""parameters"": {""query"": {""description"": ""The search query to find relevant links. Defaults to 'roadmap'."", ""type"": ""str"", ""default"": ""roadmap""}}}, {""name"": ""search"", ""description"": ""Search for images using the Webit Image Search API."", ""parameters"": {""q"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": ""pizza""}, ""number"": {""description"": ""The number of search results to return. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}, ""search_filter"": {""description"": ""Additional search filters for more specific results. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""search_image"", ""description"": ""Performs an image search using the Google Search JSON API and returns a JSON response containing information about images that match the search query."", ""parameters"": {""q"": {""description"": ""The search query for finding images."", ""type"": ""str"", ""default"": ""Newyork City""}, ""num"": {""description"": ""Number of search results to return. Valid values are between 1 and 20, inclusive. Default is 10."", ""type"": ""int, optional"", ""default"": ""10""}, ""lr"": {""description"": ""Restricts the search to documents written in a particular language. Default is 'lang_en'."", ""type"": ""str, optional"", ""default"": ""lang_en""}, ""start"": {""description"": ""The index of the first result to return. Default is 0."", ""type"": ""int, optional"", ""default"": ""0""}, ""gl"": {""description"": ""A two-letter country code that boosts search results whose country of origin matches the parameter value. Default is 'US'."", ""type"": ""str, optional"", ""default"": ""US""}}}]"
175,35202,"Scrape as many links as possible from 'https://www.another-example.net' including query parameters. Also, convert the HSL color code (h=360, s=100, l=0) to its HEX code.","[{""name"": ""scrape_links"", ""arguments"": {""url"": ""https://www.another-example.net"", ""includequery"": true}}, {""name"": ""hsl_to_hex"", ""arguments"": {""s"": 100, ""h"": 360, ""l"": 0}}]","[{""name"": ""scrape_links"", ""description"": ""Scrapes a specified number of links from the provided URL using the Scrapey Link Scraper API."", ""parameters"": {""url"": {""description"": ""The target URL from which to scrape links."", ""type"": ""str"", ""default"": ""amazon.com""}, ""maxlinks"": {""description"": ""The maximum number of links to scrape. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}, ""includequery"": {""description"": ""Whether to include query parameters in the links. Defaults to None."", ""type"": ""bool, optional"", ""default"": ""true""}}}, {""name"": ""hsl_to_hex"", ""description"": ""Converts an HSL color code to its HEX color code using the Convexity RapidAPI service."", ""parameters"": {""s"": {""description"": ""The saturation component of the HSL color code."", ""type"": ""int"", ""default"": ""78""}, ""h"": {""description"": ""The hue component of the HSL color code."", ""type"": ""int"", ""default"": ""250""}, ""l"": {""description"": ""The lightness component of the HSL color code."", ""type"": ""int"", ""default"": ""45""}}}]"
176,35269,"What are the top categories for the website 'https://www.instagram.com'? Furthermore, find the entity data for UID 123456 from the OFAC service. Lastly, fetch location suggestions based on the query 'Austin' from the Bayut API.","[{""name"": ""categorize_website"", ""arguments"": {""url"": ""https://www.instagram.com""}}, {""name"": ""get_data_entity_uid"", ""arguments"": {""uid"": 123456}}, {""name"": ""auto_complete"", ""arguments"": {""query"": ""Austin""}}]","[{""name"": ""get_data_entity_uid"", ""description"": ""Fetches an entity record from the OFAC service using a unique identifier (UID)."", ""parameters"": {""uid"": {""description"": ""The unique identifier of the entity to retrieve."", ""type"": ""int"", ""default"": ""7178""}}}, {""name"": ""categorize_website"", ""description"": ""Fetches and returns the top categories for a given website using the Website Categorization API."", ""parameters"": {""url"": {""description"": ""The URL of the website to be categorized."", ""type"": ""str"", ""default"": ""vercel.com""}}}, {""name"": ""auto_complete"", ""description"": ""Fetches location suggestions based on a given search term or phrase from the Bayut API."", ""parameters"": {""query"": {""description"": ""The term or phrase to search for location suggestions."", ""type"": ""str"", ""default"": ""abu dhabi""}, ""hitsperpage"": {""description"": ""The number of results to return per page. Default is 25."", ""type"": ""int, optional"", ""default"": ""25""}, ""lang"": {""description"": ""The language of the results. Options are 'en' or 'ar'. Default is 'en'."", ""type"": ""str, optional"", ""default"": ""en""}, ""page"": {""description"": ""The number of results to return per page. Default is 25."", ""type"": ""int, optional"", ""default"": ""0""}}}]"
177,35296,"A researcher needs to search for geographic locations matching the query 'London' in English, with available polygons added to the response data and limiting the results to the United Kingdom. They also want to query for a Local Delivery Unit (LDU) boundary by its H3 index 61976289624904705.","[{""name"": ""search"", ""arguments"": {""q"": ""London"", ""language"": ""en"", ""polygon"": ""true"", ""countrycodes"": ""UK""}}, {""name"": ""query_for_ldu_boundary_by_h3index"", ""arguments"": {""h3ndex"": 61976289624904705}}]","[{""name"": ""get_vector_tile"", ""description"": ""Fetches vector tiles based on the OpenMapTiles schema using the provided x, y, and z coordinates."", ""parameters"": {""x"": {""description"": ""The X coordinate of the tile."", ""type"": ""int"", ""default"": ""0""}, ""y"": {""description"": ""The Y coordinate of the tile."", ""type"": ""int"", ""default"": ""0""}, ""z"": {""description"": ""The zoom level of the tile."", ""type"": ""int"", ""default"": ""0""}}}, {""name"": ""reversegeocoding"", ""description"": ""Perform reverse geocoding to find an address or place by latitude and longitude."", ""parameters"": {""lon"": {""description"": ""Longitude of the location."", ""type"": ""int"", ""default"": ""-87.6244212""}, ""lat"": {""description"": ""Latitude of the location."", ""type"": ""int"", ""default"": ""41.8755616""}, ""json_callback"": {""description"": ""JSON callback function name for cross-domain requests."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_geojson"": {""description"": ""Include a GeoJSON polygon for the results."", ""type"": ""str, optional"", ""default"": """"}, ""limit"": {""description"": ""Limit the number of returned results."", ""type"": ""str, optional"", ""default"": """"}, ""accept_language"": {""description"": ""Response language in two-letter codes (e.g., 'en', 'es'). Default is 'en'."", ""type"": ""str, optional"", ""default"": ""en""}, ""polygon_kml"": {""description"": ""Include KML polygon in the results."", ""type"": ""str, optional"", ""default"": """"}, ""zoom"": {""description"": ""Level of detail required for the address details."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_svg"": {""description"": ""Include SVG polygon in the results."", ""type"": ""str, optional"", ""default"": """"}, ""addressdetails"": {""description"": ""Include full address breakdown in the results."", ""type"": ""str, optional"", ""default"": """"}, ""namedetails"": {""description"": ""Include a list of alternative names in the results."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_threshold"": {""description"": ""Simplify the returned polygons to a threshold level."", ""type"": ""int, optional"", ""default"": ""0.0""}, ""format"": {""description"": ""Format of the response (e.g., 'json', 'xml')."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_text"": {""description"": ""Include a WKT polygon in the results."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""search"", ""description"": ""Performs a global geocoding search using the provided query and optional parameters, returning geographic data from the API."", ""parameters"": {""q"": {""description"": ""Query string to search for geographic locations."", ""type"": ""str"", ""default"": ""Kirchengasse Wien""}, ""language"": {""description"": ""Language for the given instructions. Must be a valid ISO 639-1 language code. Default is None."", ""type"": ""str, optional"", ""default"": """"}, ""viewbox"": {""description"": ""Preferred area to search in, formatted as `{minLng},{minLat},{maxLng},{maxLat}`. Default is None."", ""type"": ""str, optional"", ""default"": """"}, ""polygon"": {""description"": ""Whether available polygons are added to the response data. Default is None."", ""type"": ""str, optional"", ""default"": """"}, ""limit"": {""description"": ""Limits the number of returned results. Default is None."", ""type"": ""int, optional"", ""default"": """"}, ""countrycodes"": {""description"": ""Limits results to specified countries. Multiple countries should be separated by commas, using valid ISO 3166-1 alpha-2 country codes. Default is None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""query_for_ldu_boundary_by_h3index"", ""description"": ""Queries for a Local Delivery Unit (LDU) boundary by its H3 index."", ""parameters"": {""h3ndex"": {""description"": ""The H3 index used to query the LDU boundary."", ""type"": ""int"", ""default"": ""635775751926485631""}}}]"
178,35301,Find the ID of the movie 'Inception' and get a video with the query 'never tell me the odds'.,"[{""name"": ""get_id"", ""arguments"": {""q"": ""Inception""}}, {""name"": ""get_video"", ""arguments"": {""q"": ""never tell me the odds""}}]","[{""name"": ""get_id"", ""description"": ""Fetches the ID of a movie based on the given search query from the RapidAPI similar movies service."", ""parameters"": {""q"": {""description"": ""The search string for the movie title."", ""type"": ""str"", ""default"": ""titanic""}}}, {""name"": ""get_video"", ""description"": ""Fetches video data using a query string from the Playphrase API."", ""parameters"": {""q"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": """"}}}]"
179,35303,"Get the aggregated loan offers for the CryptoPunks NFT collection and the trending NFT collections on OpenSea with a limit of 10 and offset of 25. Also, query the CNPJ number '23.456.789/0001-90' for unified information.","[{""name"": ""retrieve_aggregated_loan_offers"", ""arguments"": {""collection"": ""CryptoPunks""}}, {""name"": ""trending_with_pagination"", ""arguments"": {""limit"": 10, ""offset"": 25}}, {""name"": ""consulta_estabelecimento"", ""arguments"": {""cnpj"": ""23.456.789/0001-90""}}]","[{""name"": ""retrieve_aggregated_loan_offers"", ""description"": ""Retrieves the aggregated loan offers for a specified collection using the Blur API."", ""parameters"": {""collection"": {""description"": ""The name or identifier of the collection for which to retrieve aggregated loan offers."", ""type"": ""str"", ""default"": ""0x5af0d9827e0c53e4799bb226655a1de152a425a""}}}, {""name"": ""consulta_estabelecimento"", ""description"": ""Queries the CNPJ for unified information from Receita Federal, Simples Nacional, and Cadastro de Contribuintes."", ""parameters"": {""cnpj"": {""description"": ""The CNPJ number to be queried."", ""type"": ""str"", ""default"": ""84447804000123""}, ""maxage"": {""description"": ""Maximum age of the cached data in days. Defaults to 30."", ""type"": ""int, optional"", ""default"": ""30""}, ""simpleshistory"": {""description"": ""Whether to include historical data from Simples Nacional. Defaults to None."", ""type"": ""bool, optional"", ""default"": ""false""}, ""registrations"": {""description"": ""UFs separated by commas to include information from Cadastro de Contribuintes. Use 'BR' to consider all. Defaults to 'BR'."", ""type"": ""str, optional"", ""default"": ""BR""}, ""simples"": {""description"": ""Whether to include current data from Simples Nacional. Defaults to None."", ""type"": ""bool, optional"", ""default"": ""true""}}}, {""name"": ""trending_with_pagination"", ""description"": ""Fetches trending NFT collections from OpenSea with pagination support."", ""parameters"": {""limit"": {""description"": ""The number of collections to fetch. Default is 50."", ""type"": ""int, optional"", ""default"": ""50""}, ""offset"": {""description"": ""The number of collections to skip before starting to fetch. Default is 0."", ""type"": ""int, optional"", ""default"": ""0""}}}, {""name"": ""search_for_region"", ""description"": ""Search for location suggestions based on a given keyword using the RapidAPI realtor16 endpoint."", ""parameters"": {""location"": {""description"": ""The keyword or location name to search for suggestions."", ""type"": ""str"", ""default"": ""santa monica""}}}]"
180,35341,"Retrieve comments for an idea post identified by 'stuvwx' in Japanese. Furthermore, find auto-complete suggestions for the stock market query 'Facebook, Inc'.","[{""name"": ""ideas_get_comments"", ""arguments"": {""uuid"": ""stuvwx"", ""lang"": ""ja""}}, {""name"": ""market_auto_complete"", ""arguments"": {""query"": ""Facebook, Inc""}}]","[{""name"": ""ideas_get_comments"", ""description"": ""Fetches comments related to an idea post from the TradingView API."", ""parameters"": {""uuid"": {""description"": ""The unique identifier of the idea post obtained from the `.../ideas/list` endpoint."", ""type"": ""str"", ""default"": ""CRK6Iv51""}, ""lang"": {""description"": ""The language code for the comments. Defaults to 'en'."", ""type"": ""str, optional"", ""default"": ""en""}}}, {""name"": ""market_auto_complete"", ""description"": ""Fetch auto-complete suggestions for stock market queries."", ""parameters"": {""query"": {""description"": ""The search query for which auto-complete suggestions are needed."", ""type"": ""str"", ""default"": ""nasdaq""}}}]"
181,35366,"Fetch DNS records for the domains facebook.com and twitter.com, with record types CNAME and TXT, respectively. Get the trending YouTube videos for movies category in Japan and query the CNPJ number 12.345.678/0001-90 for unified information from Receita Federal, Simples Nacional, and Cadastro de Contribuintes.","[{""name"": ""dns_lookup"", ""arguments"": {""domain"": ""facebook.com"", ""rtype"": ""CNAME""}}, {""name"": ""dns_lookup"", ""arguments"": {""domain"": ""twitter.com"", ""rtype"": ""TXT""}}, {""name"": ""trending"", ""arguments"": {""type"": ""movies"", ""country"": ""JP""}}, {""name"": ""consulta_estabelecimento"", ""arguments"": {""cnpj"": ""12.345.678/0001-90""}}]","[{""name"": ""dns_lookup"", ""description"": ""Fetches DNS data for a given domain using the specified record type."", ""parameters"": {""domain"": {""description"": ""The domain to search for DNS records."", ""type"": ""str"", ""default"": ""google.com""}, ""rtype"": {""description"": ""The type of DNS record to fetch. Available records: A, PTR, MX, CNAME, TXT, NS."", ""type"": ""str"", ""default"": ""NS""}}}, {""name"": ""postcodes"", ""description"": ""This function fetches information about a given Japanese postcode using the PostcodeJP API."", ""parameters"": {""postcode"": {""description"": ""The postcode for which information is to be fetched."", ""type"": ""str"", ""default"": ""1000001""}}}, {""name"": ""trending"", ""description"": ""Fetches trending YouTube videos for a specific category and country using the Toolbench RapidAPI."", ""parameters"": {""type"": {""description"": ""The category of trending videos. Can be 'default', 'music', 'gaming', or 'movies'. Defaults to 'gaming'."", ""type"": ""str, optional"", ""default"": ""gaming""}, ""country"": {""description"": ""The country code for which to retrieve trending videos, e.g., 'US', 'DE', 'JP'. Defaults to 'US'."", ""type"": ""str, optional"", ""default"": ""US""}}}, {""name"": ""consulta_estabelecimento"", ""description"": ""Queries the CNPJ for unified information from Receita Federal, Simples Nacional, and Cadastro de Contribuintes."", ""parameters"": {""cnpj"": {""description"": ""The CNPJ number to be queried."", ""type"": ""str"", ""default"": ""84447804000123""}, ""maxage"": {""description"": ""Maximum age of the cached data in days. Defaults to 30."", ""type"": ""int, optional"", ""default"": ""30""}, ""simpleshistory"": {""description"": ""Whether to include historical data from Simples Nacional. Defaults to None."", ""type"": ""bool, optional"", ""default"": ""false""}, ""registrations"": {""description"": ""UFs separated by commas to include information from Cadastro de Contribuintes. Use 'BR' to consider all. Defaults to 'BR'."", ""type"": ""str, optional"", ""default"": ""BR""}, ""simples"": {""description"": ""Whether to include current data from Simples Nacional. Defaults to None."", ""type"": ""bool, optional"", ""default"": ""true""}}}]"
182,35450,Simulate querying the 'users' table with conditions: user_id=1 and age>30.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""user_id"": 1}, {""age"": {""$gt"": 30}}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
183,35469,Get the transaction details for 'txn678' and the items associated with the query 'movies'.,"[{""name"": ""transaction_id"", ""arguments"": {""is_id"": ""txn678""}}, {""name"": ""items"", ""arguments"": {""q"": ""movies""}}]","[{""name"": ""syntax_status_syntax_ticket_get"", ""description"": ""Fetch the result of a syntax check using a provided ticket from the IFC BIM Services API via RapidAPI."", ""parameters"": {""ticket"": {""description"": ""The unique identifier for the syntax check result to be retrieved."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""transaction_id"", ""description"": ""Retrieve the information of a transaction using its ID from the Uniswap V2 API."", ""parameters"": {""is_id"": {""description"": ""The ID of the transaction to retrieve information for."", ""type"": ""str"", ""default"": ""0xd259f882f051c3ef49a6f79e0a634be47ff643513c418ca753c93dcca8d4d675""}}}, {""name"": ""items"", ""description"": ""Fetches an array of items based on a query string from the specified RapidAPI endpoint."", ""parameters"": {""q"": {""description"": ""The query string to filter items. Defaults to 'a'."", ""type"": ""str"", ""default"": ""a""}}}]"
184,35490,Get auto-complete suggestions for the query 'shirts' using the auto_complete_deprecating function.,"[{""name"": ""auto_complete_deprecating"", ""arguments"": {""query"": ""shirts""}}]","[{""name"": ""amazonproductreviews"", ""description"": ""Retrieves product reviews from Amazon using the provided API key, domain, and product ASIN."", ""parameters"": {""pagenum"": {""description"": ""The page number of reviews to retrieve. Each page contains 10 reviews."", ""type"": ""int"", ""default"": ""1""}, ""domain"": {""description"": ""The Amazon domain to query reviews from (e.g., 'amazon.com', 'amazon.in', 'amazon.co.uk')."", ""type"": ""str"", ""default"": ""amazon.com""}, ""asin"": {""description"": ""The Amazon Standard Identification Number (ASIN) of the product to retrieve reviews for."", ""type"": ""str"", ""default"": ""B01H6GUCCQ""}}}, {""name"": ""auto_complete_deprecating"", ""description"": ""Fetch auto-complete suggestions for a given query from the specified API."", ""parameters"": {""query"": {""description"": ""The term or phrase for which to get suggestions."", ""type"": ""str"", ""default"": ""bikini tops""}}}, {""name"": ""fetch_company_details"", ""description"": ""Fetch company details by company name using the Toolbench RapidAPI."", ""parameters"": {""query"": {""description"": ""The company name to search for."", ""type"": ""str"", ""default"": ""saharsh""}}}]"
185,35499,Search for videos with the query 'cute cats' on the site 'youtube.com' with a timeout of 10000 milliseconds and a filter of 'HD'.,"[{""name"": ""video_search"", ""arguments"": {""query"": ""cute cats"", ""site"": ""youtube.com"", ""timeout"": 10000, ""filter"": ""HD""}}]","[{""name"": ""test_app_deepfry_get"", ""description"": ""Sends a GET request to the deepfry endpoint of the RapidAPI Image Processing service with the specified URL and API key."", ""parameters"": {""url"": {""description"": ""The URL of the image that you want to deepfry. Defaults to 'https://dagbot-is.the-be.st/logo.png'."", ""type"": ""str"", ""default"": ""https://dagbot-is.the-be.st/logo.png""}}}, {""name"": ""gen_image"", ""description"": ""Generates an image based on specified parameters by making a request to the Thai Lottery Result Image API."", ""parameters"": {""date"": {""description"": ""The date for which to generate the image. Defaults to '01062564'."", ""type"": ""str"", ""default"": ""01062564""}, ""bgimg"": {""description"": ""The background image to use. Optional."", ""type"": ""str"", ""default"": """"}, ""rmber"": {""description"": ""A flag indicating whether certain elements (like numbers) should be removed. Optional."", ""type"": ""bool"", ""default"": ""1""}}}, {""name"": ""video_search"", ""description"": ""Search for videos based on the specified criteria and return the list of matching videos."", ""parameters"": {""query"": {""description"": ""The search term to be used for finding videos."", ""type"": ""str"", ""default"": ""amateur""}, ""site"": {""description"": ""The specific site to search for videos. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""timeout"": {""description"": ""Timeout duration in milliseconds for the request. Defaults to 5000."", ""type"": ""int, optional"", ""default"": ""5000""}, ""page"": {""description"": ""The page number for pagination. Defaults to 1."", ""type"": ""int, optional"", ""default"": ""1""}, ""filter"": {""description"": ""Filter criteria for the search results. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""quality"": {""description"": ""Minimum quality of the videos to be searched. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}]"
186,35526,"Find the top 5 streets or postcodes in the UK that match the query 'oxford street'. Also, fetch town information for the ZIP code 8001 in Switzerland, and get address suggestions for '1600 Pennsylvania Avenue'.","[{""name"": ""search"", ""arguments"": {""q"": ""oxford street"", ""limit"": 5}}, {""name"": ""getzip"", ""arguments"": {""zip"": 8001}}, {""name"": ""address_autosuggest"", ""arguments"": {""query"": ""1600 Pennsylvania Avenue""}}]","[{""name"": ""search"", ""description"": ""Searches for a street or post code based on a query string."", ""parameters"": {""q"": {""description"": ""The query string used to search for a street or post code."", ""type"": ""str"", ""default"": ""Downing Street London""}, ""limit"": {""description"": ""The maximum number of results to return. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}}}, {""name"": ""getzip"", ""description"": ""Fetch town information based on a provided ZIP code (Postleitzahl) using the RapidAPI."", ""parameters"": {""zip"": {""description"": ""The ZIP code for which to fetch town information."", ""type"": ""int"", ""default"": ""3052""}}}, {""name"": ""address_autosuggest"", ""description"": ""Fetches address suggestions based on a partial or complete address query using the Address Autosuggest API."", ""parameters"": {""query"": {""description"": ""The partial or complete text of the address to search for suggestions."", ""type"": ""str"", ""default"": ""Bridge""}}}]"
187,35598,Simulate querying the 'employees' table where the 'age' is greater than 30 and the 'department' is 'HR'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""employees"", ""conditions"": [{""field"": ""age"", ""operator"": "">"", ""value"": 30}, {""field"": ""department"", ""operator"": ""="", ""value"": ""HR""}]}}]","[{""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}]"
188,35694,Search for related locations and suggestions based on the query string 'Los Angeles'.,"[{""name"": ""locations_v3_search"", ""arguments"": {""q"": ""Los Angeles""}}]","[{""name"": ""amenities"", ""description"": ""Retrieves amenities IDs and descriptions from the Airbnb Listings API, returning up to 50 results starting from the specified offset."", ""parameters"": {""offset"": {""description"": ""The index to start retrieving the amenities from."", ""type"": ""int"", ""default"": ""0""}}}, {""name"": ""locations_v3_search"", ""description"": ""Search for related locations and suggestions based on the provided query string using the RapidAPI 'locations/v3/search' endpoint."", ""parameters"": {""q"": {""description"": ""The query string representing names of countries, cities, districts, places, etc."", ""type"": ""str"", ""default"": ""new york""}, ""langid"": {""description"": ""The language identifier. Default is 1033."", ""type"": ""int, optional"", ""default"": ""1033""}, ""siteid"": {""description"": ""The site identifier. Default is 300000001."", ""type"": ""int, optional"", ""default"": ""300000001""}, ""locale"": {""description"": ""The locale code. Default is 'en_US'."", ""type"": ""str, optional"", ""default"": ""en_US""}}}]"
189,35730,"Query the information about IP address 8.8.8.8 and retrieve filtered observations from the last month with 'phishing' as filter1 and 'url' as filter2. Also, check the status of the callback URL https://my-callback-url.com. Finally, initiate a scan against target URL https://example.com and get the scan ID.","[{""name"": ""query"", ""arguments"": {""ipaddress"": ""8.8.8.8""}}, {""name"": ""v1"", ""arguments"": {""time"": ""month"", ""filter1"": ""phishing"", ""filter2"": ""url""}}, {""name"": ""get_callback_url_status"", ""arguments"": {""callback_url"": ""https://my-callback-url.com""}}, {""name"": ""get_scan_id"", ""arguments"": {""target"": ""https://example.com""}}]","[{""name"": ""query"", ""description"": ""Queries information about an IP address using the NetDetective API."", ""parameters"": {""ipaddress"": {""description"": ""The IP address to use for the query. Defaults to None, which uses the IP address of the connecting client."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""get_callback_url_status"", ""description"": ""Check the status of a callback URL to determine if it can receive scan results via POST requests."", ""parameters"": {""callback_url"": {""description"": ""The URL to be checked for its ability to receive scan results."", ""type"": ""str"", ""default"": ""https://my-callback-url.com""}}}, {""name"": ""v1"", ""description"": ""Retrieves filtered observations from the Version 1 endpoint based on specified time and filters."", ""parameters"": {""time"": {""description"": ""Select one of the following timeframes:"", ""type"": ""str"", ""default"": ""today""}, ""filter1"": {""description"": ""Can be a specific user, type, or tag (e.g., url, domain, ip, sha256, md5 for type, and phishing, ransomware, CobaltStrike for tag). Default is 'phishing'."", ""type"": ""str, optional"", ""default"": ""phishing""}, ""filter2"": {""description"": ""Can be a specific user, type, or tag (e.g., url, domain, ip, sha256, md5 for type, and phishing, ransomware, CobaltStrike for tag). Default is 'url'."", ""type"": ""str, optional"", ""default"": ""url""}}}, {""name"": ""get_scan_id"", ""description"": ""Initiates a scan against a target URL and retrieves a scan ID."", ""parameters"": {""target"": {""description"": ""The URL of the target to be scanned."", ""type"": ""str"", ""default"": ""tesla.com""}, ""callback_url"": {""description"": ""The URL to receive the scan results automatically via a POST request upon scan completion. Defaults to 'https://my-callback-url.com'."", ""type"": ""str, optional"", ""default"": ""https://my-callback-url.com""}}}]"
190,35738,List all conversation turns from the third page of the conversation with the slug 'billing_query' in descending order.,"[{""name"": ""list_all_conversation_turns"", ""arguments"": {""page"": 3, ""conversation"": ""billing_query"", ""dir"": ""desc""}}]","[{""name"": ""list_all_conversation_turns"", ""description"": ""Fetches and lists all conversation turns based on specified search parameters."", ""parameters"": {""limit"": {""description"": ""The number of records to return. Default is 20."", ""type"": ""int, optional"", ""default"": 20}, ""conversation"": {""description"": ""The slug of the conversation. Conversations are linked to conversation turns."", ""type"": ""str, optional"", ""default"": """"}, ""conversation_id"": {""description"": ""The ID of the conversation. Conversations are linked to conversation turns."", ""type"": ""int, optional"", ""default"": """"}, ""dir"": {""description"": ""The direction of the ordering. Default is 'asc'."", ""type"": ""str, optional"", ""default"": ""asc""}, ""input"": {""description"": ""The input to the bot by the client for partial search."", ""type"": ""str, optional"", ""default"": """"}, ""page"": {""description"": ""The page number of results to start from. Default is 1."", ""type"": ""int, optional"", ""default"": 1}, ""output"": {""description"": ""The output from the bot in response to the client input for partial search."", ""type"": ""str, optional"", ""default"": """"}, ""is_id"": {""description"": ""The ID of the conversation turn."", ""type"": ""int, optional"", ""default"": """"}, ""order"": {""description"": ""The search field to order by. Default is 'id'."", ""type"": ""str, optional"", ""default"": ""id""}}}]"
191,35793,Simulate querying the 'users' table in a database with conditions of age greater than 25 and location as 'New York'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": {""$gt"": 25}}, {""location"": ""New York""}]}}]","[{""name"": ""whole_foods_order"", ""description"": ""Places an order at Whole Foods."", ""parameters"": {""store_location"": {""description"": ""The location of the Whole Foods store."", ""type"": ""str""}, ""item_list"": {""description"": ""A list of items to order."", ""type"": ""list""}, ""order_size"": {""description"": ""The size of the order. Allowed values: \""small\"", \""medium\"", or \""large\""."", ""type"": ""str""}}}, {""name"": ""get_ip_zipcode"", ""description"": ""Retrieves the ZIP code of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}, {""name"": ""predict_forest_area"", ""description"": ""Predicts the change in forest area over a specified number of years."", ""parameters"": {""location"": {""description"": ""The geographic location for the prediction."", ""type"": ""str""}, ""num_years"": {""description"": ""The number of years into the future to make the prediction."", ""type"": ""int""}, ""include_humans"": {""description"": ""Whether to include the impact of human activities in the prediction. Defaults to False."", ""type"": ""bool, optional""}}}, {""name"": ""project_population"", ""description"": ""Projects the population size after a specified number of years."", ""parameters"": {""current_pop"": {""description"": ""The current population size."", ""type"": ""int"", ""default"": 1.2}, ""num_years"": {""description"": ""The number of years into the future to make the projection."", ""type"": ""int"", ""default"": 1.2}, ""annual_growth"": {""description"": ""The annual population growth rate as a percentage. Defaults to 1.2."", ""type"": ""float, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}]"
192,35892,"Get search suggestions for the query 'machine learning tutorials' using the Cheap YouTube API, while ignoring the RapidAPI toolbench key.","[{""name"": ""search_suggestions"", ""arguments"": {""q"": ""machine learning tutorials""}}]","[{""name"": ""search_suggestions"", ""description"": ""Fetches search suggestions for a given query using the Cheap YouTube API through RapidAPI."", ""parameters"": {""q"": {""description"": ""The search query for which to fetch suggestions."", ""type"": ""str"", ""default"": ""crypto""}}}, {""name"": ""sticker_search"", ""description"": ""Searches for animated stickers on Giphy using a search query and optional parameters."", ""parameters"": {""q"": {""description"": ""Search query term or phrase."", ""type"": ""str"", ""default"": ""cat""}, ""limit"": {""description"": ""Number of results to return, with a maximum of 100. Defaults to 25."", ""type"": ""str, optional"", ""default"": """"}, ""offset"": {""description"": ""Results offset, defaults to 0."", ""type"": ""str, optional"", ""default"": """"}, ""rating"": {""description"": ""Limit results to those rated (y, g, pg, pg-13, or r)."", ""type"": ""str, optional"", ""default"": """"}}}]"
193,35895,"How would the query look like for the 'birds' table with conditions: {'color': 'red', 'lifespan': {'$lte': 10}}? And what is the predicted evolution rate for 'penguins' over the next 500 years using the Lamarck model?","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""birds"", ""conditions"": [{""color"": ""red"", ""lifespan"": {""$lte"": 10}}]}}, {""name"": ""predict_evolution_rate"", ""arguments"": {""species"": ""penguins"", ""years"": 500, ""model"": ""Lamarck""}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""predict_evolution_rate"", ""description"": ""Predict the evolutionary rate for a specific species for a given timeframe."", ""parameters"": {""species"": {""description"": ""The species that the evolution rate will be predicted for."", ""type"": ""str"", ""default"": ""Darwin""}, ""years"": {""description"": ""Number of years for the prediction."", ""type"": ""int"", ""default"": ""Darwin""}, ""model"": {""description"": ""The model used to make the prediction, options: 'Darwin', 'Lamarck', default is 'Darwin'."", ""type"": ""str""}}}]"
194,35928,"Perform a search query on Yahoo for the term 'Python libraries' in English, localized for Canada, and return the results for page 1 with 10 results per page.","[{""name"": ""search"", ""arguments"": {""pageno"": 1, ""country"": ""CA"", ""lang"": ""en"", ""search"": ""Python libraries"", ""perpage"": 10}}]","[{""name"": ""search_wikipedia"", ""description"": ""Searches Wikipedia and returns the top K summarized information along with similar items. Additionally, images and coordinates with map links are provided when available."", ""parameters"": {""q"": {""description"": ""Query string to search for on Wikipedia."", ""type"": ""str"", ""default"": ""Messi""}, ""topk"": {""description"": ""Number of top summarized items to return. Defaults to 3. Must be greater than 0."", ""type"": ""int, optional"", ""default"": ""3""}}}, {""name"": ""search"", ""description"": ""Performs a search query on the specified search engine using given parameters and returns the response as JSON or text."", ""parameters"": {""pageno"": {""description"": ""The page number of the search results."", ""type"": ""int"", ""default"": ""1""}, ""country"": {""description"": ""The country code for the search localization."", ""type"": ""str"", ""default"": ""US""}, ""lang"": {""description"": ""The language code for the search localization."", ""type"": ""str"", ""default"": ""en""}, ""search"": {""description"": ""The search string to query."", ""type"": ""str"", ""default"": ""Hello""}, ""perpage"": {""description"": ""The number of results per page. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}}}, {""name"": ""get_d_tails_image"", ""description"": ""Fetch detailed information about a specific image using the Toolbench RapidAPI."", ""parameters"": {""image"": {""description"": ""The identifier or name of the image to retrieve details for."", ""type"": ""str"", ""default"": ""domaine-nc-api""}}}]"
195,35935,"Perform a search query on a secondary search engine for 'data science tutorials' and fetch details of the YouTube channel with the ID 'UC2VDszFU-Br_VjSf8UW0uQQ' and desired parts 'snippet,contentDetails,statistics'.","[{""name"": ""search_b"", ""arguments"": {""query"": ""data science tutorials""}}, {""name"": ""channel_details"", ""arguments"": {""is_id"": ""UC2VDszFU-Br_VjSf8UW0uQQ"", ""part"": ""snippet,contentDetails,statistics""}}]","[{""name"": ""search_b"", ""description"": ""Performs a search query using the SEO API on a secondary search engine."", ""parameters"": {""query"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": ""q=coffee+shop""}}}, {""name"": ""channel_details"", ""description"": ""Fetches details of a YouTube channel given its ID and desired parts using the RapidAPI service."", ""parameters"": {""is_id"": {""description"": ""The ID of the YouTube channel to fetch details for."", ""type"": ""str"", ""default"": ""UCBVjMGOIkavEAhyqpxJ73Dw""}, ""part"": {""description"": ""The part parameter specifies a comma-separated list of one or more channel resource properties that the API response will include."", ""type"": ""str"", ""default"": ""snippet,statistics""}}}, {""name"": ""search_user"", ""description"": ""Searches for a Twitter user based on the provided query string using the Twitter Pack API."", ""parameters"": {""q"": {""description"": ""The query string to search for the Twitter user."", ""type"": ""str"", ""default"": ""elon""}}}, {""name"": ""trending"", ""description"": ""Fetches the trending NFT collections from OpenSea."", ""parameters"": {""time"": {""description"": ""The time frame for which to fetch trending NFTs. Defaults to 'ONE_HOUR'."", ""type"": ""str"", ""default"": ""ONE_HOUR""}, ""chain"": {""description"": ""The blockchain chain to filter the NFTs by. If None, results are not filtered by chain. Defaults to None."", ""type"": ""str"", ""default"": """"}, ""sortby"": {""description"": ""The criteria by which to sort the NFTs. Defaults to 'ONE_HOUR_VOLUME'."", ""type"": ""str"", ""default"": ""ONE_HOUR_VOLUME""}, ""count"": {""description"": ""The number of trending NFTs to fetch. Defaults to 100."", ""type"": ""int"", ""default"": ""100""}}}]"
196,36546,"Calculate the total cost of an order containing 1 t-shirt at $10.00 each, 2 pairs of socks at $5.00 each, and 1 pair of jeans at $30.00 each. Simulate querying a database table called 'clothing' with conditions {'category': 'tops'} and {'price': {'$lt': 15.00}}.","[{""name"": ""calculate_order_total"", ""arguments"": {""items"": [""t-shirt"", ""socks"", ""jeans""], ""quantities"": [1, 2, 1], ""prices"": [10.0, 5.0, 30.0]}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""clothing"", ""conditions"": [{""category"": ""tops""}, {""price"": {""$lt"": 15.0}}]}}]","[{""name"": ""calculate_order_total"", ""description"": ""Calculates the total cost of an order based on the items, quantities, and prices."", ""parameters"": {""items"": {""description"": ""A list of item names."", ""type"": ""List[str]""}, ""quantities"": {""description"": ""A list of corresponding quantities for each item."", ""type"": ""List[int]""}, ""prices"": {""description"": ""A list of corresponding prices for each item."", ""type"": ""List[float]""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
197,36692,Simulate a query on the 'Products' table where the conditions are that the product's price must be less than 50 and the product's category must be 'Electronics'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""Products"", ""conditions"": [{""price"": {""$lt"": 50}}, {""category"": ""Electronics""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
198,37002,"Check if '192.168.1.201' is a valid IP address, then query the 'users' table with the condition {'ip_address': '192.168.1.201'}. Finally, find the city name for the ZIP code '90210'.","[{""name"": ""is_valid_ip_address"", ""arguments"": {""ip"": ""192.168.1.201""}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""ip_address"": ""192.168.1.201""}]}}, {""name"": ""get_city_from_zipcode"", ""arguments"": {""zipcode"": ""90210""}}]","[{""name"": ""is_valid_ip_address"", ""description"": ""Checks if a string is a valid IP address (IPv4)."", ""parameters"": {""ip"": {""description"": ""The string to check."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
199,37022,"Search for movies, actors, and theaters based on the given search query 'The Godfather' and geographical parameters: longitude 34.0522, latitude -118.2437, and a search radius of 50 miles.","[{""name"": ""search"", ""arguments"": {""query"": ""The Godfather"", ""longitude"": 34.0522, ""latitude"": -118.2437, ""radius"": 50}}]","[{""name"": ""search"", ""description"": ""Search for movies, actors, and theaters based on the given search query and optional geographical parameters."", ""parameters"": {""query"": {""description"": ""The search term or phrase to look for."", ""type"": ""str"", ""default"": ""spiderman""}, ""longitude"": {""description"": ""The geographical longitude to narrow down the search."", ""type"": ""int, optional"", ""default"": """"}, ""latitude"": {""description"": ""The geographical latitude to narrow down the search."", ""type"": ""int, optional"", ""default"": """"}, ""radius"": {""description"": ""The search radius in miles. Defaults to 50."", ""type"": ""int, optional"", ""default"": ""50""}, ""zipcode"": {""description"": ""The postal code to narrow down the search. Defaults to '90002'."", ""type"": ""str, optional"", ""default"": ""90002""}}}, {""name"": ""kompas_search"", ""description"": ""Performs a search on the Kompas news API using the provided parameters."", ""parameters"": {""limit"": {""description"": ""The number of search results to retrieve."", ""type"": ""int"", ""default"": ""10""}, ""page"": {""description"": ""The page number to retrieve in the paginated results."", ""type"": ""int"", ""default"": ""1""}, ""command"": {""description"": ""The search command or keyword."", ""type"": ""str"", ""default"": ""banjir""}}}, {""name"": ""get_individual_news_from_source_news"", ""description"": ""Fetches news about climate change from a specified news source."", ""parameters"": {""newspaperid"": {""description"": ""The ID of the newspaper from which to fetch news."", ""type"": ""str"", ""default"": ""guardian""}}}]"
200,37111,"Retrieve the details of the product with ID 44444, search for a product with the query 'camera' and action 'search' on Tokopedia, and verify the disposability of the email 'user@disposable.com'.","[{""name"": ""get_product"", ""arguments"": {""is_id"": 44444}}, {""name"": ""search_product"", ""arguments"": {""query"": ""camera"", ""act"": ""search""}}, {""name"": ""emailvalidation"", ""arguments"": {""email"": ""user@disposable.com""}}]","[{""name"": ""get_product"", ""description"": ""Fetches product details from an API using the given product ID."", ""parameters"": {""is_id"": {""description"": ""The product ID for which to retrieve details."", ""type"": ""int"", ""default"": """"}}}, {""name"": ""emailvalidation"", ""description"": ""Validates whether the given email address is disposable or not by using the Toolbench RapidAPI service."", ""parameters"": {""email"": {""description"": ""The email address to be validated."", ""type"": ""str"", ""default"": ""info@peekdomain.com""}}}, {""name"": ""search_product"", ""description"": ""This function searches for a product using the Tokopedia API based on the given query and act parameters."", ""parameters"": {""query"": {""description"": ""The search query string for the product to be searched."", ""type"": ""str"", ""default"": ""Celana Jeans""}, ""act"": {""description"": ""The action parameter to specify the type of search."", ""type"": ""str"", ""default"": ""search""}}}]"
201,37554,"Update the data on the endpoint with the following information: info1='Ten', info2='Eleven', info3='Twelve'. Then, perform a search query for companies related to 'renewable energy' and 'sustainability', and return the results from page '4'.","[{""name"": ""update"", ""arguments"": {""info3"": ""Twelve"", ""info1"": ""Ten"", ""info2"": ""Eleven""}}, {""name"": ""search"", ""arguments"": {""terms"": ""renewable energy,sustainability"", ""page"": ""4""}}]","[{""name"": ""update"", ""description"": ""Updates data on a specified endpoint using the provided information and RapidAPI key."", ""parameters"": {""info3"": {""description"": ""The third piece of information to be sent as a query parameter."", ""type"": ""str"", ""default"": ""333""}, ""info1"": {""description"": ""The first piece of information to be sent as a query parameter."", ""type"": ""str"", ""default"": ""111""}, ""info2"": {""description"": ""The second piece of information to be sent as a query parameter."", ""type"": ""str"", ""default"": ""222""}}}, {""name"": ""search"", ""description"": ""This function performs a search query using the Market Intelligence by Automata API, returning information about related companies based on the provided search terms."", ""parameters"": {""terms"": {""description"": ""Search terms separated by commas, which are used to filter the companies. Example: 'cloud computing,enterprise,security'."", ""type"": ""str"", ""default"": """"}, ""page"": {""description"": ""Page number for paginated search results. Default is '0'. Example: '0', '1', '2', etc."", ""type"": ""str, optional"", ""default"": ""0""}}}]"
202,37705,Query for LDU boundary by H3 index 123456789.,"[{""name"": ""query_for_ldu_boundary_by_h3index"", ""arguments"": {""h3ndex"": 123456789}}]","[{""name"": ""fetch_by_type_and_region"", ""description"": ""Fetch records from the API based on the given type, limit, and region."", ""parameters"": {""type"": {""description"": ""The type of records to fetch. Refer to the README for accepted types."", ""type"": ""str"", ""default"": ""Hill""}, ""limit"": {""description"": ""The maximum number of records to fetch."", ""type"": ""int"", ""default"": ""5""}, ""region"": {""description"": ""The region from which to fetch records."", ""type"": ""str"", ""default"": ""Eastern""}}}, {""name"": ""map"", ""description"": ""Fetches a map image in WMTS format based on the given parameters."", ""parameters"": {""tilerow"": {""description"": ""The WMTS tile row number (latitude direction)."", ""type"": ""int"", ""default"": ""25806""}, ""tilematrix"": {""description"": ""The tile matrix, specified in the format `[EPSG code]:[Scale value]`."", ""type"": ""str"", ""default"": ""EPSG:3857:16""}, ""tilecol"": {""description"": ""The WMTS tile column number (longitude direction)."", ""type"": ""int"", ""default"": ""58211""}, ""rotationangle"": {""description"": ""Angle to rotate the map image. Valid range is 0 to 359, default is 0."", ""type"": ""int, optional"", ""default"": """"}, ""mapstyle"": {""description"": ""Design of the map. Format is `[design]_[annotation size]`, default is `std_pc`."", ""type"": ""str, optional"", ""default"": """"}, ""landmarkicon"": {""description"": ""Display of landmark icons. `on` for display, `off` for hide, default is `off`."", ""type"": ""str, optional"", ""default"": """"}, ""resolution"": {""description"": ""Resolution of the map image. Values can be `1`, `2`, or `4`, default is `1`."", ""type"": ""str, optional"", ""default"": """"}, ""contour"": {""description"": ""Display of contour lines. `on` for display, `off` for hide, default is `on`."", ""type"": ""str, optional"", ""default"": """"}, ""bldgname"": {""description"": ""Display of building names. `on` for display, `off` for hide, default is `off`."", ""type"": ""str, optional"", ""default"": """"}, ""logo"": {""description"": ""Display of brand logos. `on` for display, `off` for hide, default is `off`."", ""type"": ""str, optional"", ""default"": """"}, ""target"": {""description"": ""Display contents of the map. Values can be `1` for background only, `2` for annotations only, `3` for both, default is `3`."", ""type"": ""str, optional"", ""default"": """"}, ""format"": {""description"": ""Output image format. Values can be `image/png` or `image/jpeg`, default is `image/png`."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""query_for_ldu_boundary_by_h3index"", ""description"": ""Queries for a Local Delivery Unit (LDU) boundary by its H3 index."", ""parameters"": {""h3ndex"": {""description"": ""The H3 index used to query the LDU boundary."", ""type"": ""int"", ""default"": ""635775751926485631""}}}]"
203,37720,"Find all the stores near the location with longitude -73.9914 and latitude 40.7356 within a 10-mile radius. Also, retrieve the categories list for country 'US' and language 'en'. Lastly, fetch the delivery status data using the optional query string 'getdata123'.","[{""name"": ""stores_list"", ""arguments"": {""longitude"": -73.9914, ""latitude"": 40.7356, ""radius"": 10}}, {""name"": ""categories_list"", ""arguments"": {""country"": ""US"", ""lang"": ""en""}}, {""name"": ""get"", ""arguments"": {""getdata"": ""getdata123""}}]","[{""name"": ""stores_list"", ""description"": ""Returns a list of stores near the provided geographic location."", ""parameters"": {""longitude"": {""description"": ""The longitude of the geographic location."", ""type"": ""int"", ""default"": ""-118.2487""}, ""latitude"": {""description"": ""The latitude of the geographic location."", ""type"": ""int"", ""default"": ""33.9733""}, ""radius"": {""description"": ""The radius in miles to search for stores around the geographic location. Defaults to 25."", ""type"": ""int, optional"", ""default"": ""25""}}}, {""name"": ""categories_list"", ""description"": ""Fetches a list of categories from the H&M API for a given country and language."", ""parameters"": {""country"": {""description"": ""The country code to filter categories, obtained from the /regions/list endpoint."", ""type"": ""str"", ""default"": ""us""}, ""lang"": {""description"": ""The language code to filter categories, obtained from the /regions/list endpoint."", ""type"": ""str"", ""default"": ""en""}}}, {""name"": ""get"", ""description"": ""Fetches and returns delivery status data from the e-commerce delivery status API."", ""parameters"": {""getdata"": {""description"": ""An optional query string to include in the API request. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""products_search"", ""description"": ""Search for products by keywords with various filtering and sorting options."", ""parameters"": {""keywords"": {""description"": ""The search terms or phrases to find relevant products."", ""type"": ""str"", ""default"": ""Computer Bags For Women""}, ""limit"": {""description"": ""The maximum number of items to return per response for pagination. Default is 20."", ""type"": ""int, optional"", ""default"": ""20""}, ""page"": {""description"": ""The page index for pagination. Default is 1."", ""type"": ""int, optional"", ""default"": ""1""}, ""max_price"": {""description"": ""The maximum price for filtering products."", ""type"": ""int, optional"", ""default"": """"}, ""min_price"": {""description"": ""The minimum price for filtering products."", ""type"": ""int, optional"", ""default"": """"}, ""filter"": {""description"": ""A string representing attribute filters, separated by commas. Example: '87_1357-87_710,87_1352'."", ""type"": ""str, optional"", ""default"": """"}, ""sort"": {""description"": ""The sorting option for the results. Options include:"", ""type"": ""int, optional"", ""default"": ""7""}, ""language"": {""description"": ""A 2-letter language code. Default is 'en'."", ""type"": ""str, optional"", ""default"": ""en""}, ""cat_id"": {""description"": ""The category ID for filtering products based on category."", ""type"": ""str, optional"", ""default"": """"}, ""country"": {""description"": ""A 2-letter country code. Default is 'US'."", ""type"": ""str, optional"", ""default"": ""US""}, ""currency"": {""description"": ""A 3-letter currency code. Default is 'USD'."", ""type"": ""str, optional"", ""default"": ""USD""}}}, {""name"": ""tax_rate"", ""description"": ""Retrieve the tax rate for a given zip code using the Toolbench RapidAPI service."", ""parameters"": {""zipcode"": {""description"": ""The zip code for which to retrieve the tax rate."", ""type"": ""str"", ""default"": ""90210""}}}]"
204,37748,"I want to simulate querying the 'employees' table with conditions: {'department': 'HR', 'salary': {'$gt': 50000}}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""employees"", ""conditions"": [{""department"": ""HR""}, {""salary"": {""$gt"": 50000}}]}}]","[{""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
205,37796,"Retrieve the aggregated loan offers for the 'bored-ape' collection and the related questions for the query 'how to start a business'. Also, get the comments on an Instagram post with media ID 345678.","[{""name"": ""retrieve_aggregated_loan_offers"", ""arguments"": {""collection"": ""bored-ape""}}, {""name"": ""get_related_questions"", ""arguments"": {""query"": ""how to start a business""}}, {""name"": ""post_comments"", ""arguments"": {""mediaid"": 345678}}]","[{""name"": ""post_comments"", ""description"": ""Retrieves comments of a specified Instagram post using the given media ID."", ""parameters"": {""mediaid"": {""description"": ""The ID of the Instagram media for which to retrieve comments."", ""type"": ""int"", ""default"": ""2872132510161250751""}, ""min_id"": {""description"": ""The minimum ID of comments to retrieve, useful for pagination. Defaults to '{}'."", ""type"": ""str, optional"", ""default"": ""{}""}, ""max_id"": {""description"": ""The maximum ID of comments to retrieve, useful for pagination. Defaults to '{}'."", ""type"": ""str, optional"", ""default"": ""{}""}}}, {""name"": ""retrieve_aggregated_loan_offers"", ""description"": ""Retrieves the aggregated loan offers for a specified collection using the Blur API."", ""parameters"": {""collection"": {""description"": ""The name or identifier of the collection for which to retrieve aggregated loan offers."", ""type"": ""str"", ""default"": ""0x5af0d9827e0c53e4799bb226655a1de152a425a""}}}, {""name"": ""get_related_questions"", ""description"": ""Fetches related questions from Google SERP \""People Also Ask\"" boxes based on a provided query."", ""parameters"": {""query"": {""description"": ""The search query for which to find related questions."", ""type"": ""str"", ""default"": ""prenatal vitamins""}, ""location"": {""description"": ""Specify the proxy location for the search. Defaults to 'us'. Supported countries include 'US', 'CA', 'IE', 'GB', 'FR', 'DE', 'SE', 'IN', 'JP', 'KR', 'SG', 'AU', 'BR'."", ""type"": ""str, optional"", ""default"": ""us""}, ""max_results"": {""description"": ""The maximum number of related questions to fetch. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}}}]"
206,37819,Fetch auto-complete suggestions for the search query 'table' using the Wayfair API.,"[{""name"": ""auto_complete"", ""arguments"": {""query"": ""table""}}]","[{""name"": ""products_detail"", ""description"": ""Fetches detailed information of a product from the API."", ""parameters"": {""country"": {""description"": ""The country code obtained from the /regions/list endpoint."", ""type"": ""str"", ""default"": ""us""}, ""lang"": {""description"": ""The language code obtained from the /regions/list endpoint."", ""type"": ""str"", ""default"": ""en""}, ""productcode"": {""description"": ""The value of the articles/code JSON object returned in the /products/list endpoint."", ""type"": ""str"", ""default"": ""0839915011""}}}, {""name"": ""aliexpress_item_detail_2"", ""description"": ""Fetch detailed information for a specific AliExpress item."", ""parameters"": {""itemid"": {""description"": ""The AliExpress product ID."", ""type"": ""int"", ""default"": ""3256804591426248""}, ""currency"": {""description"": ""The currency in which to display the product price. Valid values are listed in the '**Currency List**' at the '**Base**' group endpoints."", ""type"": ""str, optional"", ""default"": """"}, ""region"": {""description"": ""The region to accurately get shipping costs and other promotions specific to a geographic location. Valid values are listed in the '**Country List**' at the '**Base**' group endpoints."", ""type"": ""str, optional"", ""default"": """"}, ""locale"": {""description"": ""The locale to display titles and other content in the selected language. Valid values are listed in the '**Locale List**' at the '**Base**' group endpoints."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""get_product_detail"", ""description"": ""Fetch product details by item ID from the Yiwugo product data API."", ""parameters"": {""item_id"": {""description"": ""The unique identifier of the product."", ""type"": ""int"", ""default"": ""930783722""}, ""lan"": {""description"": ""The language code for the data source, where 'en' is for English and 'cn' is for Chinese. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""auto_complete"", ""description"": ""Fetch auto-complete suggestions for a given query using the Wayfair API."", ""parameters"": {""query"": {""description"": ""The term or phrase for which auto-complete suggestions are needed."", ""type"": ""str"", ""default"": ""red pillow""}}}]"
207,37827,"What are the trending topics related to 'blockchain'? Also, find suggestions for the search query 'cryptocurrency'.","[{""name"": ""search_suggestions"", ""arguments"": {""query"": ""blockchain""}}, {""name"": ""search_suggestions"", ""arguments"": {""query"": ""cryptocurrency""}}]","[{""name"": ""search_suggestions"", ""description"": ""Fetches search suggestions from the Twitter API using specified query parameters."", ""parameters"": {""query"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": ""elonmusk""}, ""twttr_session"": {""description"": ""The Twitter session ID for authenticated requests. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""twttr_proxy"": {""description"": ""The Twitter proxy server address. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""cursor"": {""description"": ""The cursor for paginated results. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}]"
208,37923,Query the 'employees' table for records where 'age' is greater than 30 and 'department' is 'HR'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""employees"", ""conditions"": [{""field"": ""age"", ""operator"": "">"", ""value"": 30}, {""field"": ""department"", ""operator"": ""="", ""value"": ""HR""}]}}]","[{""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_hotel_available"", ""description"": ""Checks the availability of a hotel for a given date range."", ""parameters"": {""hotel"": {""description"": ""The name of the hotel."", ""type"": ""str""}, ""city"": {""description"": ""The city where the hotel is located."", ""type"": ""str""}, ""checkin"": {""description"": ""The check-in date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}, ""checkout"": {""description"": ""The check-out date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}}}]"
209,37958,Simulate a query on the 'employees' table using conditions where 'department' is 'IT' and 'salary' is greater than 50000.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""employees"", ""conditions"": [{""department"": ""IT""}, {""salary"": {"">"": 50000}}]}}]","[{""name"": ""get_holidays_by_year"", ""description"": ""Retrieves the list of public holidays for a given year and country using the Nager.Date API."", ""parameters"": {""year"": {""description"": ""The year for which to retrieve the holidays."", ""type"": ""int""}, ""country_code"": {""description"": ""The two-letter ISO 3166-1 alpha-2 country code."", ""type"": ""str""}}}, {""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""analyze_social_group_dynamics"", ""description"": ""Analyzes the social dynamics within a group based on the personality traits and group size."", ""parameters"": {""total"": {""description"": ""The total group size."", ""type"": ""int""}, ""extroverts"": {""description"": ""The number of extroverted members in the group."", ""type"": ""int""}, ""introverts"": {""description"": ""The number of introverted members in the group."", ""type"": ""int""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}, {""name"": ""get_ip_zipcode"", ""description"": ""Retrieves the ZIP code of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}, {""name"": ""place_safeway_order"", ""description"": ""Order specified items from a Safeway location."", ""parameters"": {""location"": {""description"": ""The location of the Safeway store, e.g., 'Palo Alto, CA'."", ""type"": ""str""}, ""items"": {""description"": ""List of items to order."", ""type"": ""list""}, ""quantity"": {""description"": ""Quantity of each item in the order list."", ""type"": ""list""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
210,38020,"Query horse races with the horse ID 112233 and the racecourse name as Ascot, ordered by date in descending order.","[{""name"": ""query_races"", ""arguments"": {""order_by_date"": ""desc"", ""id_horse"": 112233, ""course"": ""Ascot""}}]","[{""name"": ""leaguelogoimage"", ""description"": ""Fetch the logo image for a specific Rugby league in PNG format using the given tournament ID and RapidAPI key."", ""parameters"": {""tournamentid"": {""description"": ""The unique tournament ID for which to retrieve the league logo image."", ""type"": ""int"", ""default"": 294}}}, {""name"": ""select_race_based_on_id"", ""description"": ""Fetches the details of a specific race using its ID from the F1 race schedule API."", ""parameters"": {""is_id"": {""description"": ""The ID of the race to fetch details for."", ""type"": ""str"", ""default"": ""6141c76615d27e0de553b9d7""}}}, {""name"": ""query_races"", ""description"": ""Queries horse races based on various filter criteria."", ""parameters"": {""order_by_date"": {""description"": ""Results ordered by date of the race, either \""asc\"" for ascending or \""desc\"" for descending."", ""type"": ""str, optional"", ""default"": """"}, ""date_to"": {""description"": ""Upper bound date for the races to be queried."", ""type"": ""str, optional"", ""default"": """"}, ""class_to"": {""description"": ""Maximum race class."", ""type"": ""int, optional"", ""default"": """"}, ""distance_to"": {""description"": ""Upper bound distance for the races to be queried."", ""type"": ""str, optional"", ""default"": """"}, ""distance_from"": {""description"": ""Lower bound distance for the races to be queried."", ""type"": ""str, optional"", ""default"": """"}, ""id_horse"": {""description"": ""Horse ID. If provided, the query searches for races where this horse has run."", ""type"": ""int, optional"", ""default"": """"}, ""course"": {""description"": ""Racecourse name (e.g., Cheltenham, Ascot, Newmarket)."", ""type"": ""str, optional"", ""default"": """"}, ""class_from"": {""description"": ""Minimum race class."", ""type"": ""int, optional"", ""default"": """"}, ""page"": {""description"": ""Page number for pagination."", ""type"": ""int, optional"", ""default"": """"}, ""date_from"": {""description"": ""Lower bound date for the races to be queried."", ""type"": ""str, optional"", ""default"": """"}, ""name"": {""description"": ""Minimum race class."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""leaguehometeamevents"", ""description"": ""Retrieves the last 5 home events for a specific league and season using the Baseball API."", ""parameters"": {""seasonid"": {""description"": ""The ID of the season for which to retrieve the home team events."", ""type"": ""int"", ""default"": 49349}, ""tournamentid"": {""description"": ""The unique ID of the tournament for which to retrieve the home team events."", ""type"": ""int"", ""default"": 19442}}}, {""name"": ""daily_match_list_scheduled"", ""description"": ""Fetches the list of scheduled daily matches for a given date."", ""parameters"": {""date"": {""description"": ""The date of the matches in `dd/MM/yyyy` format. The retrieval period is limited to \u00b17 days from the current date."", ""type"": ""str"", ""default"": ""29/01/2021""}}}]"
211,38100,Perform a search query for companies related to 'space exploration' and 'aerospace'. What are the search results for the second and third pages?,"[{""name"": ""search"", ""arguments"": {""terms"": ""space exploration,aerospace"", ""page"": ""1""}}, {""name"": ""search"", ""arguments"": {""terms"": ""space exploration,aerospace"", ""page"": ""2""}}]","[{""name"": ""loginuser"", ""description"": ""Logs in a user to the specified toolbench API by making a GET request to the login endpoint with the provided username and password."", ""parameters"": {""username"": {""description"": ""The username for login."", ""type"": ""str"", ""default"": """"}, ""password"": {""description"": ""The password for login in clear text."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""label_template_brands"", ""description"": ""Returns the list of blank label sheet brands supported by Ecardify on the given date."", ""parameters"": {""format"": {""description"": ""The paper size format, which can be either \""Letter\"" (8.5 inch by 11 inch) or \""A4\"" (210 mm by 297 mm)."", ""type"": ""str"", ""default"": ""a4""}}}, {""name"": ""search"", ""description"": ""This function performs a search query using the Market Intelligence by Automata API, returning information about related companies based on the provided search terms."", ""parameters"": {""terms"": {""description"": ""Search terms separated by commas, which are used to filter the companies. Example: 'cloud computing,enterprise,security'."", ""type"": ""str"", ""default"": """"}, ""page"": {""description"": ""Page number for paginated search results. Default is '0'. Example: '0', '1', '2', etc."", ""type"": ""str, optional"", ""default"": ""0""}}}]"
212,38200,Simulate a query on the 'employees' table with the conditions that the employee's name is 'John' and their age is greater than 30.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""employees"", ""conditions"": [{""name"": ""John"", ""age"": {""$gt"": 30}}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
213,38203,"Get comments for an idea post with the unique identifier 'mnopqr' in Italian. Additionally, fetch auto-complete suggestions for the stock market query 'Alphabet Inc'.","[{""name"": ""ideas_get_comments"", ""arguments"": {""uuid"": ""mnopqr"", ""lang"": ""it""}}, {""name"": ""market_auto_complete"", ""arguments"": {""query"": ""Alphabet Inc""}}]","[{""name"": ""ideas_get_comments"", ""description"": ""Fetches comments related to an idea post from the TradingView API."", ""parameters"": {""uuid"": {""description"": ""The unique identifier of the idea post obtained from the `.../ideas/list` endpoint."", ""type"": ""str"", ""default"": ""CRK6Iv51""}, ""lang"": {""description"": ""The language code for the comments. Defaults to 'en'."", ""type"": ""str, optional"", ""default"": ""en""}}}, {""name"": ""market_auto_complete"", ""description"": ""Fetch auto-complete suggestions for stock market queries."", ""parameters"": {""query"": {""description"": ""The search query for which auto-complete suggestions are needed."", ""type"": ""str"", ""default"": ""nasdaq""}}}]"
214,38253,Find games on the Epic Games Store with the term 'sports' in the Italian locale and country. Generate a medium double name based on the query 'champion'. Get quotes from the anime 'Dragon Ball Z'.,"[{""name"": ""search"", ""arguments"": {""page"": 1, ""locale"": ""it-IT"", ""country"": ""IT"", ""term"": ""sports""}}, {""name"": ""double_name_medium"", ""arguments"": {""query"": ""champion""}}, {""name"": ""get_quotes_by_anime_title"", ""arguments"": {""title"": ""Dragon Ball Z"", ""page"": ""1""}}]","[{""name"": ""search"", ""description"": ""Search for games using the Epic Games Store RapidAPI."", ""parameters"": {""page"": {""description"": ""The page number of the search results to retrieve."", ""type"": ""int"", ""default"": ""1""}, ""locale"": {""description"": ""The locale for the search results (e.g., 'en-US')."", ""type"": ""str"", ""default"": ""en""}, ""country"": {""description"": ""The country code for the search results (e.g., 'US')."", ""type"": ""str"", ""default"": ""US""}, ""term"": {""description"": ""The search term to query."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""double_name_medium"", ""description"": ""Generates a medium double name based on the provided query string."", ""parameters"": {""query"": {""description"": ""The query string for generating the double name. Maximum length is 50 characters."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""get_quotes_by_anime_title"", ""description"": ""Fetches quotes from a specified anime title using the Anime Quotes API."", ""parameters"": {""title"": {""description"": ""The title of the anime for which to fetch quotes. Defaults to 'Fairy Tail'."", ""type"": ""str"", ""default"": ""Fairy Tail""}, ""page"": {""description"": ""The page number for pagination. Defaults to '1'."", ""type"": ""str"", ""default"": ""1""}}}]"
215,38316,"Simulate querying the 'customers' table with conditions {name: 'John', age: 30, country: 'USA'}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""customers"", ""conditions"": [{""name"": ""John""}, {""age"": 30}, {""country"": ""USA""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""predict_forest_area"", ""description"": ""Predicts the change in forest area over a specified number of years."", ""parameters"": {""location"": {""description"": ""The geographic location for the prediction."", ""type"": ""str""}, ""num_years"": {""description"": ""The number of years into the future to make the prediction."", ""type"": ""int""}, ""include_humans"": {""description"": ""Whether to include the impact of human activities in the prediction. Defaults to False."", ""type"": ""bool, optional""}}}, {""name"": ""whole_foods_order"", ""description"": ""Places an order at Whole Foods."", ""parameters"": {""store_location"": {""description"": ""The location of the Whole Foods store."", ""type"": ""str""}, ""item_list"": {""description"": ""A list of items to order."", ""type"": ""list""}, ""order_size"": {""description"": ""The size of the order. Allowed values: \""small\"", \""medium\"", or \""large\""."", ""type"": ""str""}}}, {""name"": ""project_population"", ""description"": ""Projects the population size after a specified number of years."", ""parameters"": {""current_pop"": {""description"": ""The current population size."", ""type"": ""int"", ""default"": 1.2}, ""num_years"": {""description"": ""The number of years into the future to make the projection."", ""type"": ""int"", ""default"": 1.2}, ""annual_growth"": {""description"": ""The annual population growth rate as a percentage. Defaults to 1.2."", ""type"": ""float, optional""}}}]"
216,38379,Query for LDU boundary by H3 index 111222333.,"[{""name"": ""query_for_ldu_boundary_by_h3index"", ""arguments"": {""h3ndex"": 111222333}}]","[{""name"": ""fetch_by_type_and_region"", ""description"": ""Fetch records from the API based on the given type, limit, and region."", ""parameters"": {""type"": {""description"": ""The type of records to fetch. Refer to the README for accepted types."", ""type"": ""str"", ""default"": ""Hill""}, ""limit"": {""description"": ""The maximum number of records to fetch."", ""type"": ""int"", ""default"": ""5""}, ""region"": {""description"": ""The region from which to fetch records."", ""type"": ""str"", ""default"": ""Eastern""}}}, {""name"": ""map"", ""description"": ""Fetches a map image in WMTS format based on the given parameters."", ""parameters"": {""tilerow"": {""description"": ""The WMTS tile row number (latitude direction)."", ""type"": ""int"", ""default"": ""25806""}, ""tilematrix"": {""description"": ""The tile matrix, specified in the format `[EPSG code]:[Scale value]`."", ""type"": ""str"", ""default"": ""EPSG:3857:16""}, ""tilecol"": {""description"": ""The WMTS tile column number (longitude direction)."", ""type"": ""int"", ""default"": ""58211""}, ""rotationangle"": {""description"": ""Angle to rotate the map image. Valid range is 0 to 359, default is 0."", ""type"": ""int, optional"", ""default"": """"}, ""mapstyle"": {""description"": ""Design of the map. Format is `[design]_[annotation size]`, default is `std_pc`."", ""type"": ""str, optional"", ""default"": """"}, ""landmarkicon"": {""description"": ""Display of landmark icons. `on` for display, `off` for hide, default is `off`."", ""type"": ""str, optional"", ""default"": """"}, ""resolution"": {""description"": ""Resolution of the map image. Values can be `1`, `2`, or `4`, default is `1`."", ""type"": ""str, optional"", ""default"": """"}, ""contour"": {""description"": ""Display of contour lines. `on` for display, `off` for hide, default is `on`."", ""type"": ""str, optional"", ""default"": """"}, ""bldgname"": {""description"": ""Display of building names. `on` for display, `off` for hide, default is `off`."", ""type"": ""str, optional"", ""default"": """"}, ""logo"": {""description"": ""Display of brand logos. `on` for display, `off` for hide, default is `off`."", ""type"": ""str, optional"", ""default"": """"}, ""target"": {""description"": ""Display contents of the map. Values can be `1` for background only, `2` for annotations only, `3` for both, default is `3`."", ""type"": ""str, optional"", ""default"": """"}, ""format"": {""description"": ""Output image format. Values can be `image/png` or `image/jpeg`, default is `image/png`."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""query_for_ldu_boundary_by_h3index"", ""description"": ""Queries for a Local Delivery Unit (LDU) boundary by its H3 index."", ""parameters"": {""h3ndex"": {""description"": ""The H3 index used to query the LDU boundary."", ""type"": ""int"", ""default"": ""635775751926485631""}}}]"
217,38483,"What are the top categories for the website 'https://www.reddit.com'? Also, find the entity data for UID 789012 from the OFAC service. Lastly, fetch location suggestions based on the query 'Portland' from the Bayut API.","[{""name"": ""categorize_website"", ""arguments"": {""url"": ""https://www.reddit.com""}}, {""name"": ""get_data_entity_uid"", ""arguments"": {""uid"": 789012}}, {""name"": ""auto_complete"", ""arguments"": {""query"": ""Portland""}}]","[{""name"": ""get_data_entity_uid"", ""description"": ""Fetches an entity record from the OFAC service using a unique identifier (UID)."", ""parameters"": {""uid"": {""description"": ""The unique identifier of the entity to retrieve."", ""type"": ""int"", ""default"": ""7178""}}}, {""name"": ""categorize_website"", ""description"": ""Fetches and returns the top categories for a given website using the Website Categorization API."", ""parameters"": {""url"": {""description"": ""The URL of the website to be categorized."", ""type"": ""str"", ""default"": ""vercel.com""}}}, {""name"": ""auto_complete"", ""description"": ""Fetches location suggestions based on a given search term or phrase from the Bayut API."", ""parameters"": {""query"": {""description"": ""The term or phrase to search for location suggestions."", ""type"": ""str"", ""default"": ""abu dhabi""}, ""hitsperpage"": {""description"": ""The number of results to return per page. Default is 25."", ""type"": ""int, optional"", ""default"": ""25""}, ""lang"": {""description"": ""The language of the results. Options are 'en' or 'ar'. Default is 'en'."", ""type"": ""str, optional"", ""default"": ""en""}, ""page"": {""description"": ""The number of results to return per page. Default is 25."", ""type"": ""int, optional"", ""default"": ""0""}}}]"
218,38612,"Calculate the total cost of an order containing 3 apples at $0.50 each, 2 oranges at $0.75 each, and 4 bananas at $0.25 each. Also, simulate querying a database table called 'fruits' with conditions {'price': {'$lte': 0.60}}.","[{""name"": ""calculate_order_total"", ""arguments"": {""items"": [""apple"", ""orange"", ""banana""], ""quantities"": [3, 2, 4], ""prices"": [0.5, 0.75, 0.25]}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""fruits"", ""conditions"": [{""price"": {""$lte"": 0.6}}]}}]","[{""name"": ""calculate_order_total"", ""description"": ""Calculates the total cost of an order based on the items, quantities, and prices."", ""parameters"": {""items"": {""description"": ""A list of item names."", ""type"": ""List[str]""}, ""quantities"": {""description"": ""A list of corresponding quantities for each item."", ""type"": ""List[int]""}, ""prices"": {""description"": ""A list of corresponding prices for each item."", ""type"": ""List[float]""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
219,38646,"What are the details of the airports that match the query 'New York'? Also, can you find the airports that match the query 'London'?","[{""name"": ""airport_search"", ""arguments"": {""query"": ""New York""}}, {""name"": ""airport_search"", ""arguments"": {""query"": ""London""}}]","[{""name"": ""airport_search"", ""description"": ""Search for airports using the RapidAPI Flight Fare Search API."", ""parameters"": {""query"": {""description"": ""The search term to use for finding airports."", ""type"": ""str"", ""default"": ""LHR""}}}]"
220,38714,"Get the 48-hour forecast for the city of Barcelona, Spain using its latitude and longitude, and search for matching cities and towns for the location query 'iata:LAX'.","[{""name"": ""hourly_forecast_48_hours"", ""arguments"": {""latitude"": ""41.3902"", ""longitude"": ""2.1540""}}, {""name"": ""search_autocomplete_api"", ""arguments"": {""q"": ""iata:LAX""}}]","[{""name"": ""search_autocomplete_api"", ""description"": ""Search or Autocomplete API returns matching cities and towns based on the query."", ""parameters"": {""q"": {""description"": ""Query parameter used to obtain matching locations. Supported formats include:"", ""type"": ""str"", ""default"": """"}}}, {""name"": ""get_hourly_forecast"", ""description"": ""Retrieves the hourly weather forecast for a specified city using the RapidAPI Cloud Cast service."", ""parameters"": {""city"": {""description"": ""The name of the city for which to retrieve the hourly weather forecast."", ""type"": ""str"", ""default"": ""New York""}}}, {""name"": ""get_5_day_3_hour_forecast_data"", ""description"": ""Fetches the 5-day weather forecast data with 3-hour intervals for a specified location."", ""parameters"": {""q"": {""description"": ""The location query in the format \""{city name},{country code}\"". The city name and country code should be divided by a comma, and the country code should follow ISO 3166 standards. Defaults to 'dallas,us'."", ""type"": ""str"", ""default"": ""dallas,us""}}}, {""name"": ""by_geographic_coordinates"", ""description"": ""Fetches weather data based on geographic coordinates."", ""parameters"": {""lon"": {""description"": ""Longitude of the geographic coordinates."", ""type"": ""int"", ""default"": ""139""}, ""lat"": {""description"": ""Latitude of the geographic coordinates."", ""type"": ""int"", ""default"": ""35""}, ""units"": {""description"": ""Units of measurement. Options are 'standard', 'metric', and 'imperial'. Defaults to 'standard' if not specified."", ""type"": ""str, optional"", ""default"": """"}, ""lang"": {""description"": ""Language for the output. Defaults to the API's default language if not specified."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""hourly_forecast_48_hours"", ""description"": ""Fetches a 48-hour weather forecast for the specified latitude and longitude coordinates."", ""parameters"": {""latitude"": {""description"": ""The latitude coordinate for the forecast location."", ""type"": ""str"", ""default"": ""-22.95""}, ""longitude"": {""description"": ""The longitude coordinate for the forecast location."", ""type"": ""str"", ""default"": ""-43.21""}}}]"
221,38757,Perform a search query on a secondary search engine for 'AI tools'.,"[{""name"": ""search_b"", ""arguments"": {""query"": ""AI tools""}}]","[{""name"": ""search_b"", ""description"": ""Performs a search query using the SEO API on a secondary search engine."", ""parameters"": {""query"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": ""q=coffee+shop""}}}, {""name"": ""channel_details"", ""description"": ""Fetches details of a YouTube channel given its ID and desired parts using the RapidAPI service."", ""parameters"": {""is_id"": {""description"": ""The ID of the YouTube channel to fetch details for."", ""type"": ""str"", ""default"": ""UCBVjMGOIkavEAhyqpxJ73Dw""}, ""part"": {""description"": ""The part parameter specifies a comma-separated list of one or more channel resource properties that the API response will include."", ""type"": ""str"", ""default"": ""snippet,statistics""}}}, {""name"": ""search_user"", ""description"": ""Searches for a Twitter user based on the provided query string using the Twitter Pack API."", ""parameters"": {""q"": {""description"": ""The query string to search for the Twitter user."", ""type"": ""str"", ""default"": ""elon""}}}, {""name"": ""trending"", ""description"": ""Fetches the trending NFT collections from OpenSea."", ""parameters"": {""time"": {""description"": ""The time frame for which to fetch trending NFTs. Defaults to 'ONE_HOUR'."", ""type"": ""str"", ""default"": ""ONE_HOUR""}, ""chain"": {""description"": ""The blockchain chain to filter the NFTs by. If None, results are not filtered by chain. Defaults to None."", ""type"": ""str"", ""default"": """"}, ""sortby"": {""description"": ""The criteria by which to sort the NFTs. Defaults to 'ONE_HOUR_VOLUME'."", ""type"": ""str"", ""default"": ""ONE_HOUR_VOLUME""}, ""count"": {""description"": ""The number of trending NFTs to fetch. Defaults to 100."", ""type"": ""int"", ""default"": ""100""}}}]"
222,38761,"Perform a search query for 'Climate change' with safe search filter set to '2', restrict the search to the 'science' category, and limit the results to the last 3 months.","[{""name"": ""search"", ""arguments"": {""q"": ""Climate change"", ""safesearch"": ""2"", ""categories"": ""science"", ""time_range"": ""last_3_months""}}]","[{""name"": ""get_d_tails_image"", ""description"": ""Fetch detailed information about a specific image using the Toolbench RapidAPI."", ""parameters"": {""image"": {""description"": ""The identifier or name of the image to retrieve details for."", ""type"": ""str"", ""default"": ""domaine-nc-api""}}}, {""name"": ""states_search"", ""description"": ""Searches for specific states by name and returns a list of states matching the search query. The search can be limited by country and sorted by specified criteria."", ""parameters"": {""q"": {""description"": ""The search query string representing the name of the state to search for."", ""type"": ""str"", ""default"": ""ut""}, ""limit"": {""description"": ""The maximum number of state results to return. Defaults to '50'."", ""type"": ""str, optional"", ""default"": ""50""}, ""sortorder"": {""description"": ""The order in which to sort results (e.g., 'asc' or 'desc'). Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""sortby"": {""description"": ""The field by which to sort results. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""country_id"": {""description"": ""The ID of the country to filter results by. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""country_code"": {""description"": ""The code of the country to filter results by. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""country_name"": {""description"": ""The name of the country to filter results by. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""search"", ""description"": ""Perform a search query using specified parameters and returns the search results in JSON format."", ""parameters"": {""q"": {""description"": ""The search query."", ""type"": ""str"", ""default"": ""SearchHook API""}, ""safesearch"": {""description"": ""Level of safe search filter to apply. Defaults to '0'."", ""type"": ""str, optional"", ""default"": ""0""}, ""categories"": {""description"": ""Categories to restrict the search to. Defaults to 'general'."", ""type"": ""str, optional"", ""default"": ""general""}, ""time_range"": {""description"": ""Time range to restrict the search results. Defaults to 'None'."", ""type"": ""str, optional"", ""default"": ""None""}, ""language"": {""description"": ""Language to restrict search results. Defaults to 'de-DE'."", ""type"": ""str, optional"", ""default"": ""de-DE""}, ""queryid"": {""description"": ""Unique query identifier. Defaults to '0x02cAce04c8469580A2ADc20F57E143a3693c22bF'."", ""type"": ""str, optional"", ""default"": ""0x02cAce04c8469580A2ADc20F57E143a3693c22bF""}, ""url"": {""description"": ""Webhook URL for POST requests. Defaults to 'https://engine.corrently.cloud/webhook-test/44a17c5c-5087-483f-8398-dedbc8d713d4'."", ""type"": ""str, optional"", ""default"": ""https://engine.corrently.cloud/webhook-test/44a17c5c-5087-483f-8398-dedbc8d713d4""}}}]"
223,38788,I'm looking for the recipe of a drink with ID '24680'. Can you also find foods containing 'beef' and 'tomato' in the same query? And can we get the menu details for a venue with ID '13579' in Spanish?,"[{""name"": ""drink_by_id"", ""arguments"": {""is_id"": ""24680""}}, {""name"": ""search_foods_using_keywords"", ""arguments"": {""query"": ""beef tomato""}}, {""name"": ""menudetails"", ""arguments"": {""lang"": ""es"", ""is_id"": ""13579""}}]","[{""name"": ""drink_by_id"", ""description"": ""Fetches a specific drink recipe by its ID using the Ghana Food Recipe API."", ""parameters"": {""is_id"": {""description"": ""The unique identifier for the drink recipe."", ""type"": ""str"", ""default"": ""63c67c9db06a3ed9f92b2367""}}}, {""name"": ""search_foods_using_keywords"", ""description"": ""Search for foods using the given keywords and optional filters such as brand owner, page size, and page number."", ""parameters"": {""query"": {""description"": ""The search term to query for foods."", ""type"": ""str"", ""default"": ""cheese""}, ""brandowner"": {""description"": ""The brand owner of the foods. Default is 'Kar Nut Products Company'."", ""type"": ""str, optional"", ""default"": ""Kar Nut Products Company""}, ""pagesize"": {""description"": ""The number of results per page. Default is '1'."", ""type"": ""str, optional"", ""default"": ""1""}, ""pagenumber"": {""description"": ""The page number to retrieve. Default is '1'."", ""type"": ""str, optional"", ""default"": ""1""}}}, {""name"": ""menudetails"", ""description"": ""Fetches menu details for a given venue from the RapidAPI endpoint."", ""parameters"": {""lang"": {""description"": ""The language code for the menu details."", ""type"": ""str"", ""default"": ""zh-hans""}, ""is_id"": {""description"": ""The unique identifier for the venue."", ""type"": ""str"", ""default"": ""5a76c927bb5d660001e09731""}}}]"
224,38817,Search for a product on Tokopedia with the query 'smartphone' and action 'search' and validate the disposability of the email 'tempuser@tempemail.com'.,"[{""name"": ""search_product"", ""arguments"": {""query"": ""smartphone"", ""act"": ""search""}}, {""name"": ""emailvalidation"", ""arguments"": {""email"": ""tempuser@tempemail.com""}}]","[{""name"": ""get_product"", ""description"": ""Fetches product details from an API using the given product ID."", ""parameters"": {""is_id"": {""description"": ""The product ID for which to retrieve details."", ""type"": ""int"", ""default"": """"}}}, {""name"": ""emailvalidation"", ""description"": ""Validates whether the given email address is disposable or not by using the Toolbench RapidAPI service."", ""parameters"": {""email"": {""description"": ""The email address to be validated."", ""type"": ""str"", ""default"": ""info@peekdomain.com""}}}, {""name"": ""search_product"", ""description"": ""This function searches for a product using the Tokopedia API based on the given query and act parameters."", ""parameters"": {""query"": {""description"": ""The search query string for the product to be searched."", ""type"": ""str"", ""default"": ""Celana Jeans""}, ""act"": {""description"": ""The action parameter to specify the type of search."", ""type"": ""str"", ""default"": ""search""}}}]"
225,38845,Fetch the third page of reviews for the product with ASIN 'B01DFKC2SO' on Amazon.in using amazonproductreviews function and get the auto-complete suggestions for the query 'shoes' using the auto_complete_deprecating function.,"[{""name"": ""amazonproductreviews"", ""arguments"": {""pagenum"": 3, ""domain"": ""amazon.in"", ""asin"": ""B01DFKC2SO""}}, {""name"": ""auto_complete_deprecating"", ""arguments"": {""query"": ""shoes""}}]","[{""name"": ""amazonproductreviews"", ""description"": ""Retrieves product reviews from Amazon using the provided API key, domain, and product ASIN."", ""parameters"": {""pagenum"": {""description"": ""The page number of reviews to retrieve. Each page contains 10 reviews."", ""type"": ""int"", ""default"": ""1""}, ""domain"": {""description"": ""The Amazon domain to query reviews from (e.g., 'amazon.com', 'amazon.in', 'amazon.co.uk')."", ""type"": ""str"", ""default"": ""amazon.com""}, ""asin"": {""description"": ""The Amazon Standard Identification Number (ASIN) of the product to retrieve reviews for."", ""type"": ""str"", ""default"": ""B01H6GUCCQ""}}}, {""name"": ""auto_complete_deprecating"", ""description"": ""Fetch auto-complete suggestions for a given query from the specified API."", ""parameters"": {""query"": {""description"": ""The term or phrase for which to get suggestions."", ""type"": ""str"", ""default"": ""bikini tops""}}}, {""name"": ""fetch_company_details"", ""description"": ""Fetch company details by company name using the Toolbench RapidAPI."", ""parameters"": {""query"": {""description"": ""The company name to search for."", ""type"": ""str"", ""default"": ""saharsh""}}}]"
226,38871,"Simulate querying the 'employees' table with conditions {'salary': {'$gt': 50000}, 'department': 'IT'}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""employees"", ""conditions"": [{""salary"": {""$gt"": 50000}, ""department"": ""IT""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""project_population"", ""description"": ""Projects the population size after a specified number of years."", ""parameters"": {""current_pop"": {""description"": ""The current population size."", ""type"": ""int"", ""default"": 1.2}, ""num_years"": {""description"": ""The number of years into the future to make the projection."", ""type"": ""int"", ""default"": 1.2}, ""annual_growth"": {""description"": ""The annual population growth rate as a percentage. Defaults to 1.2."", ""type"": ""float, optional""}}}, {""name"": ""calculate_order_total"", ""description"": ""Calculates the total cost of an order based on the items, quantities, and prices."", ""parameters"": {""items"": {""description"": ""A list of item names."", ""type"": ""List[str]""}, ""quantities"": {""description"": ""A list of corresponding quantities for each item."", ""type"": ""List[int]""}, ""prices"": {""description"": ""A list of corresponding prices for each item."", ""type"": ""List[float]""}}}, {""name"": ""project_investment_growth"", ""description"": ""Projects the growth of an investment over a specified number of years."", ""parameters"": {""principal"": {""description"": ""The initial investment amount."", ""type"": ""float"", ""default"": true}, ""annual_addition"": {""description"": ""The amount added to the investment annually."", ""type"": ""float"", ""default"": true}, ""years"": {""description"": ""The number of years to project the investment growth."", ""type"": ""int""}, ""return_rate"": {""description"": ""The annual return rate as a decimal (e.g., 0.07 for 7%)."", ""type"": ""float""}, ""inflation"": {""description"": ""A list of annual inflation rates as decimals."", ""type"": ""List[float]""}, ""inflation_adjusted"": {""description"": ""Whether to adjust the final value for inflation. Defaults to True."", ""type"": ""bool, optional""}}}]"
227,38941,"Search for geographic locations matching the query 'New York City' in English, with available polygons added to the response data and limiting the results to the United States.","[{""name"": ""search"", ""arguments"": {""q"": ""New York City"", ""language"": ""en"", ""polygon"": ""true"", ""countrycodes"": ""US""}}]","[{""name"": ""get_vector_tile"", ""description"": ""Fetches vector tiles based on the OpenMapTiles schema using the provided x, y, and z coordinates."", ""parameters"": {""x"": {""description"": ""The X coordinate of the tile."", ""type"": ""int"", ""default"": ""0""}, ""y"": {""description"": ""The Y coordinate of the tile."", ""type"": ""int"", ""default"": ""0""}, ""z"": {""description"": ""The zoom level of the tile."", ""type"": ""int"", ""default"": ""0""}}}, {""name"": ""reversegeocoding"", ""description"": ""Perform reverse geocoding to find an address or place by latitude and longitude."", ""parameters"": {""lon"": {""description"": ""Longitude of the location."", ""type"": ""int"", ""default"": ""-87.6244212""}, ""lat"": {""description"": ""Latitude of the location."", ""type"": ""int"", ""default"": ""41.8755616""}, ""json_callback"": {""description"": ""JSON callback function name for cross-domain requests."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_geojson"": {""description"": ""Include a GeoJSON polygon for the results."", ""type"": ""str, optional"", ""default"": """"}, ""limit"": {""description"": ""Limit the number of returned results."", ""type"": ""str, optional"", ""default"": """"}, ""accept_language"": {""description"": ""Response language in two-letter codes (e.g., 'en', 'es'). Default is 'en'."", ""type"": ""str, optional"", ""default"": ""en""}, ""polygon_kml"": {""description"": ""Include KML polygon in the results."", ""type"": ""str, optional"", ""default"": """"}, ""zoom"": {""description"": ""Level of detail required for the address details."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_svg"": {""description"": ""Include SVG polygon in the results."", ""type"": ""str, optional"", ""default"": """"}, ""addressdetails"": {""description"": ""Include full address breakdown in the results."", ""type"": ""str, optional"", ""default"": """"}, ""namedetails"": {""description"": ""Include a list of alternative names in the results."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_threshold"": {""description"": ""Simplify the returned polygons to a threshold level."", ""type"": ""int, optional"", ""default"": ""0.0""}, ""format"": {""description"": ""Format of the response (e.g., 'json', 'xml')."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_text"": {""description"": ""Include a WKT polygon in the results."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""search"", ""description"": ""Performs a global geocoding search using the provided query and optional parameters, returning geographic data from the API."", ""parameters"": {""q"": {""description"": ""Query string to search for geographic locations."", ""type"": ""str"", ""default"": ""Kirchengasse Wien""}, ""language"": {""description"": ""Language for the given instructions. Must be a valid ISO 639-1 language code. Default is None."", ""type"": ""str, optional"", ""default"": """"}, ""viewbox"": {""description"": ""Preferred area to search in, formatted as `{minLng},{minLat},{maxLng},{maxLat}`. Default is None."", ""type"": ""str, optional"", ""default"": """"}, ""polygon"": {""description"": ""Whether available polygons are added to the response data. Default is None."", ""type"": ""str, optional"", ""default"": """"}, ""limit"": {""description"": ""Limits the number of returned results. Default is None."", ""type"": ""int, optional"", ""default"": """"}, ""countrycodes"": {""description"": ""Limits results to specified countries. Multiple countries should be separated by commas, using valid ISO 3166-1 alpha-2 country codes. Default is None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""query_for_ldu_boundary_by_h3index"", ""description"": ""Queries for a Local Delivery Unit (LDU) boundary by its H3 index."", ""parameters"": {""h3ndex"": {""description"": ""The H3 index used to query the LDU boundary."", ""type"": ""int"", ""default"": ""635775751926485631""}}}]"
228,38986,"Find relevant links for the query 'python programming' using the ExplorArc's Link Finder API. Also, search for 'python programming' on Google, with results limited to the past day.","[{""name"": ""links_finder"", ""arguments"": {""query"": ""python programming""}}, {""name"": ""search"", ""arguments"": {""q"": ""python programming"", ""tbs"": ""qdr:d""}}]","[{""name"": ""links_finder"", ""description"": ""Fetches relevant links based on a given query using the ExplorArc's Link Finder API."", ""parameters"": {""query"": {""description"": ""The search query to find relevant links. Defaults to 'roadmap'."", ""type"": ""str"", ""default"": ""roadmap""}}}, {""name"": ""search"", ""description"": ""Perform a Google search and retrieve the search results using the specified parameters."", ""parameters"": {""q"": {""description"": ""The search query term."", ""type"": ""str"", ""default"": ""liverpool""}, ""gl"": {""description"": ""The geographic location of the search results (e.g., 'US'). Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""cr"": {""description"": ""The country of the search results (e.g., 'countryUS'). Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""tbs"": {""description"": ""The time-based search parameters (e.g., 'qdr:d' for past 24 hours). Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""num"": {""description"": ""The number of search results to return. Defaults to 20."", ""type"": ""int, optional"", ""default"": ""20""}, ""start"": {""description"": ""The index of the first result to return. Defaults to None."", ""type"": ""int, optional"", ""default"": """"}, ""hl"": {""description"": ""The language of the search results (e.g., 'en'). Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""states_details"", ""description"": ""Retrieves detailed information about a specific state using its ID."", ""parameters"": {""is_id"": {""description"": ""The ID of the state for which to retrieve details."", ""type"": ""str"", ""default"": ""4022""}}}, {""name"": ""vehicle_market_value_by_vin"", ""description"": ""Fetches the market value of a vehicle based on its VIN (Vehicle Identification Number) using the Toolbench RapidAPI service."", ""parameters"": {""vin"": {""description"": ""The vehicle identification number to query."", ""type"": ""str"", ""default"": ""5UXKR0C58JL074657""}, ""mileage"": {""description"": ""The current mileage of the vehicle. If not specified, the average mileage is used. Default is None."", ""type"": ""str, optional"", ""default"": """"}, ""period"": {""description"": ""Number of days to look back for sales data, with a maximum value of 365 days. Default is None."", ""type"": ""str, optional"", ""default"": """"}}}]"
229,39032,Simulate a query to the 'users' table with the conditions of age greater than 30 and gender equal to 'female'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": {""$gt"": 30}}, {""gender"": ""female""}]}}]","[{""name"": ""analyze_social_group_dynamics"", ""description"": ""Analyzes the social dynamics within a group based on the personality traits and group size."", ""parameters"": {""total"": {""description"": ""The total group size."", ""type"": ""int""}, ""extroverts"": {""description"": ""The number of extroverted members in the group."", ""type"": ""int""}, ""introverts"": {""description"": ""The number of introverted members in the group."", ""type"": ""int""}}}, {""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_pokemon_move_info"", ""description"": ""Retrieves information about a Pok\u00e9mon's move using the Pok\u00e9API."", ""parameters"": {""pokemon_name"": {""description"": ""The name of the Pok\u00e9mon."", ""type"": ""str"", ""default"": ""run""}, ""move_name"": {""description"": ""The name of the move to check. Defaults to \""run\""."", ""type"": ""str, optional"", ""default"": ""run""}}}]"
230,39117,"What will the population of a city with a current population of 2 million be in 15 years with an annual growth rate of 2.5%? After that, I would like to simulate a query to the 'employees' table with conditions that include salary greater than 50000 and department equals 'IT'. Lastly, could you predict the evolutionary rate for the species 'Panthera tigris' for the next 20,000 years using the Darwin model?","[{""name"": ""project_population"", ""arguments"": {""current_pop"": 2000000, ""num_years"": 15, ""annual_growth"": 2.5}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""employees"", ""conditions"": [{""salary"": {""$gt"": 50000}}, {""department"": ""IT""}]}}, {""name"": ""predict_evolution_rate"", ""arguments"": {""species"": ""Panthera tigris"", ""years"": 20000, ""model"": ""Darwin""}}]","[{""name"": ""project_population"", ""description"": ""Projects the population size after a specified number of years."", ""parameters"": {""current_pop"": {""description"": ""The current population size."", ""type"": ""int"", ""default"": 1.2}, ""num_years"": {""description"": ""The number of years into the future to make the projection."", ""type"": ""int"", ""default"": 1.2}, ""annual_growth"": {""description"": ""The annual population growth rate as a percentage. Defaults to 1.2."", ""type"": ""float, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""predict_evolution_rate"", ""description"": ""Predict the evolutionary rate for a specific species for a given timeframe."", ""parameters"": {""species"": {""description"": ""The species that the evolution rate will be predicted for."", ""type"": ""str"", ""default"": ""Darwin""}, ""years"": {""description"": ""Number of years for the prediction."", ""type"": ""int"", ""default"": ""Darwin""}, ""model"": {""description"": ""The model used to make the prediction, options: 'Darwin', 'Lamarck', default is 'Darwin'."", ""type"": ""str""}}}, {""name"": ""predict_forest_area"", ""description"": ""Predicts the change in forest area over a specified number of years."", ""parameters"": {""location"": {""description"": ""The geographic location for the prediction."", ""type"": ""str""}, ""num_years"": {""description"": ""The number of years into the future to make the prediction."", ""type"": ""int""}, ""include_humans"": {""description"": ""Whether to include the impact of human activities in the prediction. Defaults to False."", ""type"": ""bool, optional""}}}, {""name"": ""place_safeway_order"", ""description"": ""Order specified items from a Safeway location."", ""parameters"": {""location"": {""description"": ""The location of the Safeway store, e.g., 'Palo Alto, CA'."", ""type"": ""str""}, ""items"": {""description"": ""List of items to order."", ""type"": ""list""}, ""quantity"": {""description"": ""Quantity of each item in the order list."", ""type"": ""list""}}}]"
231,39157,Could you please search for a product on Tokopedia using the query 'laptop' and the action 'search'?,"[{""name"": ""search_product"", ""arguments"": {""query"": ""laptop"", ""act"": ""search""}}]","[{""name"": ""search_product"", ""description"": ""This function searches for a product using the Tokopedia API based on the given query and act parameters."", ""parameters"": {""query"": {""description"": ""The search query string for the product to be searched."", ""type"": ""str"", ""default"": ""Celana Jeans""}, ""act"": {""description"": ""The action parameter to specify the type of search."", ""type"": ""str"", ""default"": ""search""}}}]"
232,39244,"Provide auto-complete suggestions for the stock market query 'fin'. Also, get the cash flow statement for Alphabet Inc.","[{""name"": ""market_auto_complete"", ""arguments"": {""query"": ""fin""}}, {""name"": ""cash_flow_statement"", ""arguments"": {""ticker"": ""GOOGL""}}]","[{""name"": ""market_auto_complete"", ""description"": ""Fetch auto-complete suggestions for stock market queries."", ""parameters"": {""query"": {""description"": ""The search query for which auto-complete suggestions are needed."", ""type"": ""str"", ""default"": ""nasdaq""}}}, {""name"": ""cash_flow_statement"", ""description"": ""Fetches the company cash flow statement by year, with data in thousands of dollars."", ""parameters"": {""ticker"": {""description"": ""The stock ticker symbol of the company."", ""type"": ""str"", ""default"": ""AAPL""}}}]"
233,39289,Retrieve the Osm-Bright style JSON and query for LDU boundary with H3 index 123456789.,"[{""name"": ""get_style_json"", ""arguments"": {""style"": ""osm-bright""}}, {""name"": ""query_for_ldu_boundary_by_h3index"", ""arguments"": {""h3ndex"": 123456789}}]","[{""name"": ""get_style_json"", ""description"": ""Retrieves the style JSON for the specified map style."", ""parameters"": {""style"": {""description"": ""The style identifier to retrieve the corresponding style JSON."", ""type"": ""str"", ""default"": ""osm-bright""}}}, {""name"": ""query_for_ldu_boundary_by_h3index"", ""description"": ""Queries for a Local Delivery Unit (LDU) boundary by its H3 index."", ""parameters"": {""h3ndex"": {""description"": ""The H3 index used to query the LDU boundary."", ""type"": ""int"", ""default"": ""635775751926485631""}}}]"
234,39380,Perform a search query for companies related to 'cloud computing' and 'security'. What are the search results for the first page?,"[{""name"": ""search"", ""arguments"": {""terms"": ""cloud computing,security""}}]","[{""name"": ""loginuser"", ""description"": ""Logs in a user to the specified toolbench API by making a GET request to the login endpoint with the provided username and password."", ""parameters"": {""username"": {""description"": ""The username for login."", ""type"": ""str"", ""default"": """"}, ""password"": {""description"": ""The password for login in clear text."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""label_template_brands"", ""description"": ""Returns the list of blank label sheet brands supported by Ecardify on the given date."", ""parameters"": {""format"": {""description"": ""The paper size format, which can be either \""Letter\"" (8.5 inch by 11 inch) or \""A4\"" (210 mm by 297 mm)."", ""type"": ""str"", ""default"": ""a4""}}}, {""name"": ""search"", ""description"": ""This function performs a search query using the Market Intelligence by Automata API, returning information about related companies based on the provided search terms."", ""parameters"": {""terms"": {""description"": ""Search terms separated by commas, which are used to filter the companies. Example: 'cloud computing,enterprise,security'."", ""type"": ""str"", ""default"": """"}, ""page"": {""description"": ""Page number for paginated search results. Default is '0'. Example: '0', '1', '2', etc."", ""type"": ""str, optional"", ""default"": ""0""}}}]"
235,39470,"Analyze the social dynamics of a group with 30 members, 18 extroverts, and 12 introverts, and simulate a query on the 'students' table with conditions, such as 'GPA > 3.5' and 'age < 25'.","[{""name"": ""analyze_social_group_dynamics"", ""arguments"": {""total"": 30, ""extroverts"": 18, ""introverts"": 12}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""students"", ""conditions"": [{""GPA"": {""$gt"": 3.5}}, {""age"": {""$lt"": 25}}]}}]","[{""name"": ""analyze_social_group_dynamics"", ""description"": ""Analyzes the social dynamics within a group based on the personality traits and group size."", ""parameters"": {""total"": {""description"": ""The total group size."", ""type"": ""int""}, ""extroverts"": {""description"": ""The number of extroverted members in the group."", ""type"": ""int""}, ""introverts"": {""description"": ""The number of introverted members in the group."", ""type"": ""int""}}}, {""name"": ""structural_analysis"", ""description"": ""Performs structural analysis on a building based on its ID, floor numbers, and analysis mode."", ""parameters"": {""building_id"": {""description"": ""The unique identifier of the building."", ""type"": ""str"", ""default"": ""static""}, ""floor_numbers"": {""description"": ""The list of floor numbers to be analyzed."", ""type"": ""List[int]"", ""default"": ""static""}, ""analysis_mode"": {""description"": ""The mode of analysis, either \""static\"" or \""dynamic\"". Defaults to \""static\""."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_valid_ip_address"", ""description"": ""Checks if a string is a valid IP address (IPv4)."", ""parameters"": {""ip"": {""description"": ""The string to check."", ""type"": ""str""}}}]"
236,39560,"Simulate a query on the 'employees' table with conditions {'department': 'HR', 'position': 'Manager'} and {'department': 'IT', 'position': 'Developer'}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""employees"", ""conditions"": [{""department"": ""HR"", ""position"": ""Manager""}, {""department"": ""IT"", ""position"": ""Developer""}]}}]","[{""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_hotel_available"", ""description"": ""Checks the availability of a hotel for a given date range."", ""parameters"": {""hotel"": {""description"": ""The name of the hotel."", ""type"": ""str""}, ""city"": {""description"": ""The city where the hotel is located."", ""type"": ""str""}, ""checkin"": {""description"": ""The check-in date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}, ""checkout"": {""description"": ""The check-out date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}}}]"
237,39635,What is the result of querying the users table with the condition that the user_id is 123?,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""user_id"": 123}]}}]","[{""name"": ""structural_analysis"", ""description"": ""Performs structural analysis on a building based on its ID, floor numbers, and analysis mode."", ""parameters"": {""building_id"": {""description"": ""The unique identifier of the building."", ""type"": ""str"", ""default"": ""static""}, ""floor_numbers"": {""description"": ""The list of floor numbers to be analyzed."", ""type"": ""List[int]"", ""default"": ""static""}, ""analysis_mode"": {""description"": ""The mode of analysis, either \""static\"" or \""dynamic\"". Defaults to \""static\""."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""predict_evolution_rate"", ""description"": ""Predict the evolutionary rate for a specific species for a given timeframe."", ""parameters"": {""species"": {""description"": ""The species that the evolution rate will be predicted for."", ""type"": ""str"", ""default"": ""Darwin""}, ""years"": {""description"": ""Number of years for the prediction."", ""type"": ""int"", ""default"": ""Darwin""}, ""model"": {""description"": ""The model used to make the prediction, options: 'Darwin', 'Lamarck', default is 'Darwin'."", ""type"": ""str""}}}, {""name"": ""get_holidays_by_year"", ""description"": ""Retrieves the list of public holidays for a given year and country using the Nager.Date API."", ""parameters"": {""year"": {""description"": ""The year for which to retrieve the holidays."", ""type"": ""int""}, ""country_code"": {""description"": ""The two-letter ISO 3166-1 alpha-2 country code."", ""type"": ""str""}}}]"
238,39764,"Could you search for a product on Tokopedia using the query 'tablet' and the action 'search'. Also, perform another search using the query 'headphones' and the action 'search'. For both searches, could you use the custom API key 'def456'?","[{""name"": ""search_product"", ""arguments"": {""query"": ""tablet"", ""act"": ""search""}}, {""name"": ""search_product"", ""arguments"": {""query"": ""headphones"", ""act"": ""search""}}]","[{""name"": ""search_product"", ""description"": ""This function searches for a product using the Tokopedia API based on the given query and act parameters."", ""parameters"": {""query"": {""description"": ""The search query string for the product to be searched."", ""type"": ""str"", ""default"": ""Celana Jeans""}, ""act"": {""description"": ""The action parameter to specify the type of search."", ""type"": ""str"", ""default"": ""search""}}}]"
239,39806,"What are the top categories for the website 'https://www.example.com'? Also, find the entity data for UID 123456 from the OFAC service. Lastly, fetch location suggestions based on the query 'New York City' from the Bayut API.","[{""name"": ""categorize_website"", ""arguments"": {""url"": ""https://www.example.com""}}, {""name"": ""get_data_entity_uid"", ""arguments"": {""uid"": 123456}}, {""name"": ""auto_complete"", ""arguments"": {""query"": ""New York City""}}]","[{""name"": ""get_data_entity_uid"", ""description"": ""Fetches an entity record from the OFAC service using a unique identifier (UID)."", ""parameters"": {""uid"": {""description"": ""The unique identifier of the entity to retrieve."", ""type"": ""int"", ""default"": ""7178""}}}, {""name"": ""categorize_website"", ""description"": ""Fetches and returns the top categories for a given website using the Website Categorization API."", ""parameters"": {""url"": {""description"": ""The URL of the website to be categorized."", ""type"": ""str"", ""default"": ""vercel.com""}}}, {""name"": ""auto_complete"", ""description"": ""Fetches location suggestions based on a given search term or phrase from the Bayut API."", ""parameters"": {""query"": {""description"": ""The term or phrase to search for location suggestions."", ""type"": ""str"", ""default"": ""abu dhabi""}, ""hitsperpage"": {""description"": ""The number of results to return per page. Default is 25."", ""type"": ""int, optional"", ""default"": ""25""}, ""lang"": {""description"": ""The language of the results. Options are 'en' or 'ar'. Default is 'en'."", ""type"": ""str, optional"", ""default"": ""en""}, ""page"": {""description"": ""The number of results to return per page. Default is 25."", ""type"": ""int, optional"", ""default"": ""0""}}}]"
240,39807,"Fetch the next 10 products from the 'jewelry' category in the store, skipping the first 20 products. Also, search for creators on Patreon using the query 'photographer' and retrieve the results.","[{""name"": ""get_products_in_category"", ""arguments"": {""skip"": 20, ""limit"": 10, ""category"": ""jewelry""}}, {""name"": ""search_for_creators"", ""arguments"": {""search_query"": ""photographer""}}]","[{""name"": ""listoforders"", ""description"": ""Executes an HTTP GET request to the Ecombr marketplace API for seller orders with the provided parameters and returns the response."", ""parameters"": {""token"": {""description"": ""Authentication token for the Ecombr API."", ""type"": ""str"", ""default"": """"}, ""cache_control"": {""description"": ""Value for the Cache-Control header."", ""type"": ""str"", ""default"": ""no-cache""}, ""e_mail"": {""description"": ""Email address associated with the seller account."", ""type"": ""str"", ""default"": """"}, ""content_type"": {""description"": ""Value for the Content-Type header."", ""type"": ""str"", ""default"": ""application/json""}, ""secret"": {""description"": ""Secret key for additional authentication."", ""type"": ""str"", ""default"": """"}, ""status"": {""description"": ""Status of the orders to filter."", ""type"": ""str"", ""default"": """"}, ""action"": {""description"": ""The action to be performed on the orders."", ""type"": ""str"", ""default"": ""orders_list""}}}, {""name"": ""get_products_in_category"", ""description"": ""Fetches a list of products from a specified category in a store with pagination."", ""parameters"": {""skip"": {""description"": ""The number of items to skip before starting to collect the result set."", ""type"": ""int"", ""default"": """"}, ""limit"": {""description"": ""The number of items to return in the result set."", ""type"": ""int"", ""default"": """"}, ""category"": {""description"": ""The category from which to fetch products."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""search_for_creators"", ""description"": ""Search for creators on Patreon using the given search query."", ""parameters"": {""search_query"": {""description"": ""The search term used to query creators on Patreon."", ""type"": ""str"", ""default"": ""adnr studios""}}}]"
241,39857,"Find product offers that offer shipping within 5 days, have a minimum price of $50, and are in new condition. The search query should be 'tablet'.","[{""name"": ""search"", ""arguments"": {""q"": ""tablet"", ""max_shipping_days"": 5, ""min_price"": 50, ""product_condition"": ""NEW""}}]","[{""name"": ""aliexpress_item_description"", ""description"": ""Fetches the detailed description of an AliExpress item using its item ID."", ""parameters"": {""itemid"": {""description"": ""The ID of the AliExpress item."", ""type"": ""int"", ""default"": ""3256804591426248""}, ""locale"": {""description"": ""The locale for displaying titles and content in the selected language. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""search_by_keyword"", ""description"": ""Searches for products using a specified keyword on the 1688 platform through the Taobao-Tmall Product Detail API."", ""parameters"": {""keyword"": {""description"": ""The search keyword to look for products."", ""type"": ""str"", ""default"": ""\u6d77\u4e45\u6c34\u74f6""}, ""page"": {""description"": ""The page number for paginated results."", ""type"": ""int"", ""default"": ""1""}}}, {""name"": ""tmall_search_by_keyword"", ""description"": ""Searches for products on Tmall by keyword."", ""parameters"": {""page"": {""description"": ""The page number of the search results to retrieve."", ""type"": ""int"", ""default"": ""1""}, ""keyword"": {""description"": ""The keyword to search for products."", ""type"": ""str"", ""default"": ""\u6d77\u4e45\u6c34\u74f6""}}}, {""name"": ""search"", ""description"": ""Search for product offers using various filtering parameters such as rating, condition, shipping speed, price, and more. Supports both free-form queries and GTIN/EAN identifiers with infinite pagination."", ""parameters"": {""q"": {""description"": ""Free-form search query or a GTIN/EAN (e.g., '0194252014233')."", ""type"": ""str"", ""default"": ""Nike shoes""}, ""min_rating"": {""description"": ""Return products with rating greater than the specified value. Possible values: '1', '2', '3', '4'."", ""type"": ""str, optional"", ""default"": """"}, ""product_condition"": {""description"": ""Only return products with a specific condition. Possible values: 'NEW', 'USED', 'REFURBISHED'."", ""type"": ""str, optional"", ""default"": """"}, ""max_shipping_days"": {""description"": ""Only return product offers that offer shipping/delivery within a specified number of days."", ""type"": ""int, optional"", ""default"": """"}, ""store_id"": {""description"": ""Only return product offers from specific stores (comma-separated list of store IDs). Store IDs can be obtained from the Google Shopping URL after using the Seller filter."", ""type"": ""str, optional"", ""default"": """"}, ""on_sale"": {""description"": ""Only return product offers that are currently on sale. Default is None."", ""type"": ""bool, optional"", ""default"": """"}, ""free_returns"": {""description"": ""Only return product offers that offer free returns. Default is None."", ""type"": ""bool, optional"", ""default"": """"}, ""free_shipping"": {""description"": ""Only return product offers that offer free shipping/delivery. Default is None."", ""type"": ""bool, optional"", ""default"": """"}, ""max_price"": {""description"": ""Only return product offers with price lower than a certain value."", ""type"": ""int, optional"", ""default"": """"}, ""language"": {""description"": ""The language of the results. Default is 'en'. Valid values: see https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes."", ""type"": ""str, optional"", ""default"": ""en""}, ""sort_by"": {""description"": ""Sort product offers by best match, top rated, lowest or highest price. Possible values: 'BEST_MATCH', 'TOP_RATED', 'LOWEST_PRICE', 'HIGHEST_PRICE'."", ""type"": ""str, optional"", ""default"": """"}, ""country"": {""description"": ""Country code of the region/country to return offers for. Default is 'us'. Valid values: see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2."", ""type"": ""str, optional"", ""default"": ""us""}, ""min_price"": {""description"": ""Only return product offers with price greater than a certain value."", ""type"": ""int, optional"", ""default"": """"}, ""page"": {""description"": ""Results page to return. Default is 1."", ""type"": ""int, optional"", ""default"": """"}}}]"
242,39877,"Retrieve the product details for the product with ID 46810 and fetch the first 8 products from the 'Accessories' category in the store. Also, search for creators on Patreon using the search query 'comics' and retrieve products from the 'Home Decor' category using the Toolbench RapidAPI.","[{""name"": ""get_product"", ""arguments"": {""is_id"": 46810}}, {""name"": ""get_products_in_category"", ""arguments"": {""skip"": 0, ""limit"": 8, ""category"": ""Accessories""}}, {""name"": ""search_for_creators"", ""arguments"": {""search_query"": ""comics""}}, {""name"": ""getproductbycategory"", ""arguments"": {""category"": ""Home Decor""}}]","[{""name"": ""get_products_in_category"", ""description"": ""Fetches a list of products from a specified category in a store with pagination."", ""parameters"": {""skip"": {""description"": ""The number of items to skip before starting to collect the result set."", ""type"": ""int"", ""default"": """"}, ""limit"": {""description"": ""The number of items to return in the result set."", ""type"": ""int"", ""default"": """"}, ""category"": {""description"": ""The category from which to fetch products."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""getproductbycategory"", ""description"": ""Retrieves products from a given category using the Toolbench RapidAPI."", ""parameters"": {""category"": {""description"": ""The category of the product to search for."", ""type"": ""str"", ""default"": ""Phones""}}}, {""name"": ""get_product"", ""description"": ""Fetches product details from an API using the given product ID."", ""parameters"": {""is_id"": {""description"": ""The product ID for which to retrieve details."", ""type"": ""int"", ""default"": """"}}}, {""name"": ""search_for_creators"", ""description"": ""Search for creators on Patreon using the given search query."", ""parameters"": {""search_query"": {""description"": ""The search term used to query creators on Patreon."", ""type"": ""str"", ""default"": ""adnr studios""}}}]"
243,39886,Fetch suggestions for the query 'Python programming tutorials' and perform a search on DuckDuckGo with the same query.,"[{""name"": ""suggestqueries"", ""arguments"": {""query"": ""Python programming tutorials""}}, {""name"": ""search"", ""arguments"": {""q"": ""Python programming tutorials""}}]","[{""name"": ""suggestqueries"", ""description"": ""Fetches suggestions based on the given query using the specified RapidAPI key."", ""parameters"": {""query"": {""description"": ""The search query for which suggestions are to be fetched."", ""type"": ""str"", ""default"": ""How to""}}}, {""name"": ""search"", ""description"": ""Performs a search using DuckDuckGo API and returns the search results."", ""parameters"": {""q"": {""description"": ""Search query string. Default is 'Nike'."", ""type"": ""str"", ""default"": ""Nike""}}}, {""name"": ""cities_search"", ""description"": ""Search for cities based on various criteria and return a list of matching cities."", ""parameters"": {""q"": {""description"": ""The query string to search for cities by name."", ""type"": ""str"", ""default"": ""kan""}, ""page"": {""description"": ""The page number of the search results."", ""type"": ""int, optional"", ""default"": """"}, ""country_code"": {""description"": ""The country code to filter the search results."", ""type"": ""str, optional"", ""default"": """"}, ""sortorder"": {""description"": ""The order in which to sort the search results."", ""type"": ""str, optional"", ""default"": """"}, ""sortby"": {""description"": ""The attribute to sort the search results by."", ""type"": ""str, optional"", ""default"": """"}, ""country_name"": {""description"": ""The name of the country to filter the search results."", ""type"": ""str, optional"", ""default"": """"}, ""country_id"": {""description"": ""The ID of the country to filter the search results."", ""type"": ""int, optional"", ""default"": """"}, ""limit"": {""description"": ""The maximum number of search results to return."", ""type"": ""int, optional"", ""default"": """"}, ""state_code"": {""description"": ""The state code to filter the search results."", ""type"": ""str, optional"", ""default"": """"}, ""state_id"": {""description"": ""The ID of the state to filter the search results."", ""type"": ""int, optional"", ""default"": """"}, ""state_name"": {""description"": ""The name of the state to filter the search results."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""getchannelplaylists"", ""description"": ""Retrieve a comprehensive list of playlists associated with a specific YouTube channel."", ""parameters"": {""is_id"": {""description"": ""The YouTube channel ID for which to retrieve playlists."", ""type"": ""str"", ""default"": """"}}}]"
244,39898,Fetch auto-complete suggestions for the search query 'couch' using the Wayfair API.,"[{""name"": ""auto_complete"", ""arguments"": {""query"": ""couch""}}]","[{""name"": ""products_detail"", ""description"": ""Fetches detailed information of a product from the API."", ""parameters"": {""country"": {""description"": ""The country code obtained from the /regions/list endpoint."", ""type"": ""str"", ""default"": ""us""}, ""lang"": {""description"": ""The language code obtained from the /regions/list endpoint."", ""type"": ""str"", ""default"": ""en""}, ""productcode"": {""description"": ""The value of the articles/code JSON object returned in the /products/list endpoint."", ""type"": ""str"", ""default"": ""0839915011""}}}, {""name"": ""aliexpress_item_detail_2"", ""description"": ""Fetch detailed information for a specific AliExpress item."", ""parameters"": {""itemid"": {""description"": ""The AliExpress product ID."", ""type"": ""int"", ""default"": ""3256804591426248""}, ""currency"": {""description"": ""The currency in which to display the product price. Valid values are listed in the '**Currency List**' at the '**Base**' group endpoints."", ""type"": ""str, optional"", ""default"": """"}, ""region"": {""description"": ""The region to accurately get shipping costs and other promotions specific to a geographic location. Valid values are listed in the '**Country List**' at the '**Base**' group endpoints."", ""type"": ""str, optional"", ""default"": """"}, ""locale"": {""description"": ""The locale to display titles and other content in the selected language. Valid values are listed in the '**Locale List**' at the '**Base**' group endpoints."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""get_product_detail"", ""description"": ""Fetch product details by item ID from the Yiwugo product data API."", ""parameters"": {""item_id"": {""description"": ""The unique identifier of the product."", ""type"": ""int"", ""default"": ""930783722""}, ""lan"": {""description"": ""The language code for the data source, where 'en' is for English and 'cn' is for Chinese. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""auto_complete"", ""description"": ""Fetch auto-complete suggestions for a given query using the Wayfair API."", ""parameters"": {""query"": {""description"": ""The term or phrase for which auto-complete suggestions are needed."", ""type"": ""str"", ""default"": ""red pillow""}}}]"
245,40251,You're a market researcher and need to find the top 4 products for the query 'vegan protein powder'. Use the 'products' function to get the product rankings.,"[{""name"": ""products"", ""arguments"": {""query"": ""vegan protein powder""}}]","[{""name"": ""products"", ""description"": ""Searches for product rankings based on a given query using the SEO API."", ""parameters"": {""query"": {""description"": ""The search term to query for product rankings."", ""type"": ""str"", ""default"": ""q=iphone+14""}}}, {""name"": ""images"", ""description"": ""Fetches the URLs for a specified number of random WikiHow images."", ""parameters"": {""count"": {""description"": ""The number of image URLs to retrieve (maximum 100)."", ""type"": ""int"", ""default"": ""3""}}}]"
246,40289,What suggestions can I get for the query 'running shoes'?,"[{""name"": ""auto_complete_deprecating"", ""arguments"": {""query"": ""running shoes""}}]","[{""name"": ""auto_complete_deprecating"", ""description"": ""Fetch auto-complete suggestions for a given query from the specified API."", ""parameters"": {""query"": {""description"": ""The term or phrase for which to get suggestions."", ""type"": ""str"", ""default"": ""bikini tops""}}}, {""name"": ""categories_list"", ""description"": ""Fetches a list of categories and their recursive child categories from the Wayfair API."", ""parameters"": {""caid"": {""description"": ""The category ID for which to list categories. The default root category is 214970."", ""type"": ""int"", ""default"": ""214970""}}}, {""name"": ""tmall_search_by_keyword"", ""description"": ""Searches for products on Tmall by keyword."", ""parameters"": {""page"": {""description"": ""The page number of the search results to retrieve."", ""type"": ""int"", ""default"": ""1""}, ""keyword"": {""description"": ""The keyword to search for products."", ""type"": ""str"", ""default"": ""\u6d77\u4e45\u6c34\u74f6""}}}, {""name"": ""get_images_by_productid_siteid_zappos_1_6pm_2"", ""description"": ""Fetch images for a given product ID and site ID from the Zappos API."", ""parameters"": {""siteid"": {""description"": ""The site ID (1 for Zappos, 2 for 6pm)."", ""type"": ""int"", ""default"": ""1""}, ""productid"": {""description"": ""The product ID for which images are to be fetched."", ""type"": ""int"", ""default"": ""8609549""}}}]"
247,40469,"Fetch the top grossing iOS apps from the United Kingdom, category 6018, with 50 apps shown. Also, search for businesses near the coordinates 34.0522° N, 118.2437° W with the search query 'Coffee shops' and a limit of 10 results. Additionally, search for countries by continent, specifying 'Asia' and a limit of 10 countries.","[{""name"": ""top_grossing_ios_apps"", ""arguments"": {""country"": ""gb"", ""category"": ""6018"", ""num"": 50}}, {""name"": ""search_nearby"", ""arguments"": {""query"": ""Coffee shops"", ""lng"": 1182437, ""lat"": 340522, ""limit"": ""10"", ""region"": ""us""}}, {""name"": ""search_countries_by_continent"", ""arguments"": {""continent"": ""Asia"", ""limit"": 10}}]","[{""name"": ""getpastevents"", ""description"": ""Fetches past Azure events from the specified page using the given RapidAPI key."", ""parameters"": {""page"": {""description"": ""The page number to fetch the past events from."", ""type"": ""int"", ""default"": ""1""}}}, {""name"": ""top_grossing_ios_apps"", ""description"": ""Fetch a list of the top grossing iOS apps from a specified country and category."", ""parameters"": {""country"": {""description"": ""The country code for the App Store (default is 'us')."", ""type"": ""str, optional"", ""default"": ""us""}, ""category"": {""description"": ""The category ID for the apps (default is '6016')."", ""type"": ""str, optional"", ""default"": ""6016""}, ""lang"": {""description"": ""The language code for the app descriptions (default is 'en')."", ""type"": ""str, optional"", ""default"": ""en""}, ""num"": {""description"": ""The number of results to return (default is 100)."", ""type"": ""int, optional"", ""default"": ""100""}}}, {""name"": ""search_nearby"", ""description"": ""Search for businesses near specific geographic coordinates using various query parameters."", ""parameters"": {""query"": {""description"": ""The search query or keyword (e.g., 'Bars and pubs', 'Plumbers')."", ""type"": ""str"", ""default"": ""plumbers""}, ""lng"": {""description"": ""Longitude of the geographic coordinates to search nearby."", ""type"": ""int"", ""default"": ""-121.925337""}, ""lat"": {""description"": ""Latitude of the geographic coordinates to search nearby."", ""type"": ""int"", ""default"": ""37.359428""}, ""x_user_agent"": {""description"": ""Device type for the search. Default is 'desktop'."", ""type"": ""str, optional"", ""default"": """"}, ""language"": {""description"": ""Language of the results. Default is 'en'. For a list of supported language codes, see https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes."", ""type"": ""str, optional"", ""default"": ""en""}, ""subtypes"": {""description"": ""Specific subtypes of businesses to search for, specified as a comma-separated list (e.g., 'Plumber,Carpenter,Electrician')."", ""type"": ""str, optional"", ""default"": """"}, ""fields"": {""description"": ""A comma-separated list of business fields to include in the response. By default, all fields are returned (e.g., 'business_id,type,phone_number,full_address')."", ""type"": ""str, optional"", ""default"": """"}, ""limit"": {""description"": ""Maximum number of businesses to return (1-500). Default is '20'."", ""type"": ""str, optional"", ""default"": ""20""}, ""region"": {""description"": ""Region or country code to query Google Maps from. Default is 'us'. For a list of supported region/country codes, see https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes."", ""type"": ""str, optional"", ""default"": ""us""}}}, {""name"": ""search_countries_by_continent"", ""description"": ""Search for countries by their continent using the specified query parameters."", ""parameters"": {""continent"": {""description"": ""The continent of the countries to search for. This search is case insensitive and requires an exact match."", ""type"": ""str"", ""default"": ""North America""}, ""offset"": {""description"": ""The zero-indexed page number from which the search should continue. Defaults to 0."", ""type"": ""int, optional"", ""default"": 0}, ""fields"": {""description"": ""A comma-separated list of fields to filter the response. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""limit"": {""description"": ""The maximum number of records to return per page. Defaults to 10."", ""type"": ""int, optional"", ""default"": 10}}}]"
248,40493,"Extract data from 'Pages Jaunes' for the keyword 'restaurants' in the location 'Marseille'. Also, find links related to 'art exhibitions' and search for images using the query 'paintings'.","[{""name"": ""pagesjaunes"", ""arguments"": {""pjpage"": 1, ""pjlocation"": ""Marseille"", ""pjkeyword"": ""restaurants""}}, {""name"": ""links_finder"", ""arguments"": {""query"": ""art exhibitions""}}, {""name"": ""search"", ""arguments"": {""q"": ""paintings""}}]","[{""name"": ""pagesjaunes"", ""description"": ""This function extracts data from the \""Pages Jaunes\"" (Yellow Pages) for a given location and keyword."", ""parameters"": {""pjpage"": {""description"": ""The page number to retrieve."", ""type"": ""int"", ""default"": ""1""}, ""pjlocation"": {""description"": ""The location to search within \""Pages Jaunes\""."", ""type"": ""str"", ""default"": ""Paris""}, ""pjkeyword"": {""description"": ""The keyword to search for in \""Pages Jaunes\""."", ""type"": ""str"", ""default"": ""Restaurant""}}}, {""name"": ""links_finder"", ""description"": ""Fetches relevant links based on a given query using the ExplorArc's Link Finder API."", ""parameters"": {""query"": {""description"": ""The search query to find relevant links. Defaults to 'roadmap'."", ""type"": ""str"", ""default"": ""roadmap""}}}, {""name"": ""search"", ""description"": ""Search for images using the Webit Image Search API."", ""parameters"": {""q"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": ""pizza""}, ""number"": {""description"": ""The number of search results to return. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}, ""search_filter"": {""description"": ""Additional search filters for more specific results. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""search_image"", ""description"": ""Performs an image search using the Google Search JSON API and returns a JSON response containing information about images that match the search query."", ""parameters"": {""q"": {""description"": ""The search query for finding images."", ""type"": ""str"", ""default"": ""Newyork City""}, ""num"": {""description"": ""Number of search results to return. Valid values are between 1 and 20, inclusive. Default is 10."", ""type"": ""int, optional"", ""default"": ""10""}, ""lr"": {""description"": ""Restricts the search to documents written in a particular language. Default is 'lang_en'."", ""type"": ""str, optional"", ""default"": ""lang_en""}, ""start"": {""description"": ""The index of the first result to return. Default is 0."", ""type"": ""int, optional"", ""default"": ""0""}, ""gl"": {""description"": ""A two-letter country code that boosts search results whose country of origin matches the parameter value. Default is 'US'."", ""type"": ""str, optional"", ""default"": ""US""}}}]"
249,40521,"Place an order at the Whole Foods store in Seattle with a large order size for items: ['salmon', 'asparagus', 'quinoa']. Simulate a query to the database with conditions: [{'item': 'salmon'}, {'item': 'asparagus'}, {'item': 'quinoa'}].","[{""name"": ""whole_foods_order"", ""arguments"": {""store_location"": ""Seattle"", ""item_list"": [""salmon"", ""asparagus"", ""quinoa""], ""order_size"": ""large""}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""orders"", ""conditions"": [{""item"": ""salmon""}, {""item"": ""asparagus""}, {""item"": ""quinoa""}]}}]","[{""name"": ""whole_foods_order"", ""description"": ""Places an order at Whole Foods."", ""parameters"": {""store_location"": {""description"": ""The location of the Whole Foods store."", ""type"": ""str""}, ""item_list"": {""description"": ""A list of items to order."", ""type"": ""list""}, ""order_size"": {""description"": ""The size of the order. Allowed values: \""small\"", \""medium\"", or \""large\""."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""calculate_calorie_intake"", ""description"": ""Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals."", ""parameters"": {""weight_kg"": {""description"": ""Body weight in kilograms."", ""type"": ""float""}, ""height_cm"": {""description"": ""Height in centimeters."", ""type"": ""float""}, ""age"": {""description"": ""Age in years."", ""type"": ""int""}, ""sex"": {""description"": ""Biological sex, either 'male' or 'female'."", ""type"": ""str""}, ""activity_level"": {""description"": ""Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active)."", ""type"": ""int""}, ""goal"": {""description"": ""Fitness goal, either 'lose', 'maintain', or 'gain'."", ""type"": ""str""}}}]"
250,40724,"Simulate querying the 'products' table with conditions {'price': {'$lt': 100}, 'category': 'electronics'}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""products"", ""conditions"": [{""price"": {""$lt"": 100}, ""category"": ""electronics""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""project_population"", ""description"": ""Projects the population size after a specified number of years."", ""parameters"": {""current_pop"": {""description"": ""The current population size."", ""type"": ""int"", ""default"": 1.2}, ""num_years"": {""description"": ""The number of years into the future to make the projection."", ""type"": ""int"", ""default"": 1.2}, ""annual_growth"": {""description"": ""The annual population growth rate as a percentage. Defaults to 1.2."", ""type"": ""float, optional""}}}, {""name"": ""calculate_order_total"", ""description"": ""Calculates the total cost of an order based on the items, quantities, and prices."", ""parameters"": {""items"": {""description"": ""A list of item names."", ""type"": ""List[str]""}, ""quantities"": {""description"": ""A list of corresponding quantities for each item."", ""type"": ""List[int]""}, ""prices"": {""description"": ""A list of corresponding prices for each item."", ""type"": ""List[float]""}}}, {""name"": ""project_investment_growth"", ""description"": ""Projects the growth of an investment over a specified number of years."", ""parameters"": {""principal"": {""description"": ""The initial investment amount."", ""type"": ""float"", ""default"": true}, ""annual_addition"": {""description"": ""The amount added to the investment annually."", ""type"": ""float"", ""default"": true}, ""years"": {""description"": ""The number of years to project the investment growth."", ""type"": ""int""}, ""return_rate"": {""description"": ""The annual return rate as a decimal (e.g., 0.07 for 7%)."", ""type"": ""float""}, ""inflation"": {""description"": ""A list of annual inflation rates as decimals."", ""type"": ""List[float]""}, ""inflation_adjusted"": {""description"": ""Whether to adjust the final value for inflation. Defaults to True."", ""type"": ""bool, optional""}}}]"
251,40843,Simulate querying a database on table 'users' with conditions: age > 30 and country = 'USA'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": {""$gt"": 30}}, {""country"": ""USA""}]}}]","[{""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}, {""name"": ""project_population"", ""description"": ""Projects the population size after a specified number of years."", ""parameters"": {""current_pop"": {""description"": ""The current population size."", ""type"": ""int"", ""default"": 1.2}, ""num_years"": {""description"": ""The number of years into the future to make the projection."", ""type"": ""int"", ""default"": 1.2}, ""annual_growth"": {""description"": ""The annual population growth rate as a percentage. Defaults to 1.2."", ""type"": ""float, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""project_investment_growth"", ""description"": ""Projects the growth of an investment over a specified number of years."", ""parameters"": {""principal"": {""description"": ""The initial investment amount."", ""type"": ""float"", ""default"": true}, ""annual_addition"": {""description"": ""The amount added to the investment annually."", ""type"": ""float"", ""default"": true}, ""years"": {""description"": ""The number of years to project the investment growth."", ""type"": ""int""}, ""return_rate"": {""description"": ""The annual return rate as a decimal (e.g., 0.07 for 7%)."", ""type"": ""float""}, ""inflation"": {""description"": ""A list of annual inflation rates as decimals."", ""type"": ""List[float]""}, ""inflation_adjusted"": {""description"": ""Whether to adjust the final value for inflation. Defaults to True."", ""type"": ""bool, optional""}}}, {""name"": ""predict_forest_area"", ""description"": ""Predicts the change in forest area over a specified number of years."", ""parameters"": {""location"": {""description"": ""The geographic location for the prediction."", ""type"": ""str""}, ""num_years"": {""description"": ""The number of years into the future to make the prediction."", ""type"": ""int""}, ""include_humans"": {""description"": ""Whether to include the impact of human activities in the prediction. Defaults to False."", ""type"": ""bool, optional""}}}, {""name"": ""get_dna_sequence"", ""description"": ""Retrieves the DNA sequence for a given sequence ID from the NCBI Nucleotide database."", ""parameters"": {""sequence_id"": {""description"": ""The unique identifier for the DNA sequence."", ""type"": ""str"", ""default"": ""fasta""}, ""file_format"": {""description"": ""The format of the returned sequence. Allowed values: \""fasta\"" (default) or \""gb\""."", ""type"": ""str, optional""}, ""upstream_bases"": {""description"": ""The number of bases upstream of the sequence to include. Defaults to 0."", ""type"": ""int, optional"", ""default"": ""fasta""}}}]"
252,40868,"Place an order at the Whole Foods store in Boston with a small order size for items: ['steak', 'potatoes', 'salad']. Simulate a query to the database with conditions: [{'item': 'steak'}, {'item': 'potatoes'}, {'item': 'salad'}].","[{""name"": ""whole_foods_order"", ""arguments"": {""store_location"": ""Boston"", ""item_list"": [""steak"", ""potatoes"", ""salad""], ""order_size"": ""small""}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""orders"", ""conditions"": [{""item"": ""steak""}, {""item"": ""potatoes""}, {""item"": ""salad""}]}}]","[{""name"": ""whole_foods_order"", ""description"": ""Places an order at Whole Foods."", ""parameters"": {""store_location"": {""description"": ""The location of the Whole Foods store."", ""type"": ""str""}, ""item_list"": {""description"": ""A list of items to order."", ""type"": ""list""}, ""order_size"": {""description"": ""The size of the order. Allowed values: \""small\"", \""medium\"", or \""large\""."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""calculate_calorie_intake"", ""description"": ""Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals."", ""parameters"": {""weight_kg"": {""description"": ""Body weight in kilograms."", ""type"": ""float""}, ""height_cm"": {""description"": ""Height in centimeters."", ""type"": ""float""}, ""age"": {""description"": ""Age in years."", ""type"": ""int""}, ""sex"": {""description"": ""Biological sex, either 'male' or 'female'."", ""type"": ""str""}, ""activity_level"": {""description"": ""Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active)."", ""type"": ""int""}, ""goal"": {""description"": ""Fitness goal, either 'lose', 'maintain', or 'gain'."", ""type"": ""str""}}}]"
253,40873,"Can you provide the US Presidential Election results for all states in the year 2008? In addition, what are the news articles for the search query 'climate change' from the last 14 days?","[{""name"": ""asoy"", ""arguments"": {""year"": 2008}}, {""name"": ""search"", ""arguments"": {""q"": ""climate change""}}]","[{""name"": ""actors_get_interesting_jobs"", ""description"": ""Retrieves interesting jobs for a specified actor or actress using the RapidAPI service."", ""parameters"": {""nconst"": {""description"": ""The unique identifier for the actor/actress, which should start with \""nm\"" (e.g., \""nm0001667\""). This can typically be found using the /actors/list-born-today or /actors/list-most-popular-celebs endpoints."", ""type"": ""str"", ""default"": ""nm0001667""}}}, {""name"": ""getprojectsbytopic"", ""description"": ""Fetches artificial intelligence projects based on the specified topic and page number."", ""parameters"": {""topic"": {""description"": ""The topic to filter AI projects."", ""type"": ""str"", ""default"": ""machine-learning""}, ""page"": {""description"": ""The page number of the results to fetch."", ""type"": ""int"", ""default"": ""1""}}}, {""name"": ""asoy"", ""description"": ""Fetches JSON results for All States, One Year (ASOY) for the specified US Presidential Election year."", ""parameters"": {""year"": {""description"": ""The election year to retrieve results for (e.g., 2008)."", ""type"": ""int"", ""default"": ""2000""}}}, {""name"": ""search"", ""description"": ""Searches across the entire news index from the last 14 days using the BizToc API."", ""parameters"": {""q"": {""description"": ""The search query string. All provided terms are considered required by the API."", ""type"": ""str"", ""default"": ""apple""}}}]"
254,40904,"Place an order at the Whole Foods store in San Francisco with a medium order size for items: ['chicken', 'broccoli', 'rice']. Simulate a query to the database with conditions: [{'item': 'chicken'}, {'item': 'broccoli'}, {'item': 'rice'}].","[{""name"": ""whole_foods_order"", ""arguments"": {""store_location"": ""San Francisco"", ""item_list"": [""chicken"", ""broccoli"", ""rice""], ""order_size"": ""medium""}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""orders"", ""conditions"": [{""item"": ""chicken""}, {""item"": ""broccoli""}, {""item"": ""rice""}]}}]","[{""name"": ""whole_foods_order"", ""description"": ""Places an order at Whole Foods."", ""parameters"": {""store_location"": {""description"": ""The location of the Whole Foods store."", ""type"": ""str""}, ""item_list"": {""description"": ""A list of items to order."", ""type"": ""list""}, ""order_size"": {""description"": ""The size of the order. Allowed values: \""small\"", \""medium\"", or \""large\""."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""calculate_calorie_intake"", ""description"": ""Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals."", ""parameters"": {""weight_kg"": {""description"": ""Body weight in kilograms."", ""type"": ""float""}, ""height_cm"": {""description"": ""Height in centimeters."", ""type"": ""float""}, ""age"": {""description"": ""Age in years."", ""type"": ""int""}, ""sex"": {""description"": ""Biological sex, either 'male' or 'female'."", ""type"": ""str""}, ""activity_level"": {""description"": ""Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active)."", ""type"": ""int""}, ""goal"": {""description"": ""Fitness goal, either 'lose', 'maintain', or 'gain'."", ""type"": ""str""}}}]"
255,40914,"Find the ZIP codes for the IP addresses of the servers of Google, Yahoo, and Microsoft. Use their primary IP addresses for this query.","[{""name"": ""get_ip_zipcode"", ""arguments"": {""ip"": ""8.8.8.8""}}, {""name"": ""get_ip_zipcode"", ""arguments"": {""ip"": ""206.190.36.45""}}, {""name"": ""get_ip_zipcode"", ""arguments"": {""ip"": ""20.190.104.116""}}]","[{""name"": ""get_ip_zipcode"", ""description"": ""Retrieves the ZIP code of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}]"
256,40928,"Fetch the Twitter mentions for the query 'Google' for the past 7 days. Also, retrieve an exhaustive list of top-level domains (TLDs). Finally, generate an EAN13 barcode for the code '123456789012'.","[{""name"": ""getmentions"", ""arguments"": {""query"": ""Google"", ""period"": 7}}, {""name"": ""get_list_of_top_level_domains"", ""arguments"": {}}, {""name"": ""ean13"", ""arguments"": {""code"": ""123456789012""}}]","[{""name"": ""getmentions"", ""description"": ""Fetches Twitter mentions for a given query using the specified parameters."", ""parameters"": {""query"": {""description"": ""The search query to find mentions for (e.g., brand name, competitor)."", ""type"": ""str"", ""default"": """"}, ""period"": {""description"": ""The time period for mentions, in days. Defaults to None."", ""type"": ""int, optional"", ""default"": """"}, ""page"": {""description"": ""The page number of results to retrieve. Defaults to 1."", ""type"": ""int, optional"", ""default"": ""1""}}}, {""name"": ""get_list_of_top_level_domains"", ""description"": ""Retrieve an exhaustive list of generic and country code top-level domains (TLDs)."", ""parameters"": {""tlds"": {""description"": ""A comma-separated string of specific TLDs to query. If not provided, all TLDs are retrieved."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""ean13"", ""description"": ""Generates an EAN13 barcode as a PNG or returns an error based on a given 12-13 length code. For a 12-digit code, the check digit is automatically calculated; for a 13-digit code, the check digit is verified."", ""parameters"": {""code"": {""description"": ""A 12 or 13 character string representing the barcode."", ""type"": ""str"", ""default"": ""9788804660243""}}}]"
257,41019,"Simulate querying the 'users' table with conditions {'age': 25, 'city': 'New York'}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": 25, ""city"": ""New York""}]}}]","[{""name"": ""calculate_order_total"", ""description"": ""Calculates the total cost of an order based on the items, quantities, and prices."", ""parameters"": {""items"": {""description"": ""A list of item names."", ""type"": ""List[str]""}, ""quantities"": {""description"": ""A list of corresponding quantities for each item."", ""type"": ""List[int]""}, ""prices"": {""description"": ""A list of corresponding prices for each item."", ""type"": ""List[float]""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}, {""name"": ""get_pokemon_move_info"", ""description"": ""Retrieves information about a Pok\u00e9mon's move using the Pok\u00e9API."", ""parameters"": {""pokemon_name"": {""description"": ""The name of the Pok\u00e9mon."", ""type"": ""str"", ""default"": ""run""}, ""move_name"": {""description"": ""The name of the move to check. Defaults to \""run\""."", ""type"": ""str, optional"", ""default"": ""run""}}}, {""name"": ""whole_foods_order"", ""description"": ""Places an order at Whole Foods."", ""parameters"": {""store_location"": {""description"": ""The location of the Whole Foods store."", ""type"": ""str""}, ""item_list"": {""description"": ""A list of items to order."", ""type"": ""list""}, ""order_size"": {""description"": ""The size of the order. Allowed values: \""small\"", \""medium\"", or \""large\""."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
258,41128,"What are the relevant links for the query 'machine learning' using the ExplorArc's Link Finder API? Additionally, perform a Google search for 'machine learning' with the geographic location set to 'US' and the language set to 'English'.","[{""name"": ""links_finder"", ""arguments"": {""query"": ""machine learning""}}, {""name"": ""search"", ""arguments"": {""q"": ""machine learning"", ""gl"": ""US"", ""hl"": ""en""}}]","[{""name"": ""links_finder"", ""description"": ""Fetches relevant links based on a given query using the ExplorArc's Link Finder API."", ""parameters"": {""query"": {""description"": ""The search query to find relevant links. Defaults to 'roadmap'."", ""type"": ""str"", ""default"": ""roadmap""}}}, {""name"": ""search"", ""description"": ""Perform a Google search and retrieve the search results using the specified parameters."", ""parameters"": {""q"": {""description"": ""The search query term."", ""type"": ""str"", ""default"": ""liverpool""}, ""gl"": {""description"": ""The geographic location of the search results (e.g., 'US'). Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""cr"": {""description"": ""The country of the search results (e.g., 'countryUS'). Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""tbs"": {""description"": ""The time-based search parameters (e.g., 'qdr:d' for past 24 hours). Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""num"": {""description"": ""The number of search results to return. Defaults to 20."", ""type"": ""int, optional"", ""default"": ""20""}, ""start"": {""description"": ""The index of the first result to return. Defaults to None."", ""type"": ""int, optional"", ""default"": """"}, ""hl"": {""description"": ""The language of the search results (e.g., 'en'). Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""states_details"", ""description"": ""Retrieves detailed information about a specific state using its ID."", ""parameters"": {""is_id"": {""description"": ""The ID of the state for which to retrieve details."", ""type"": ""str"", ""default"": ""4022""}}}, {""name"": ""vehicle_market_value_by_vin"", ""description"": ""Fetches the market value of a vehicle based on its VIN (Vehicle Identification Number) using the Toolbench RapidAPI service."", ""parameters"": {""vin"": {""description"": ""The vehicle identification number to query."", ""type"": ""str"", ""default"": ""5UXKR0C58JL074657""}, ""mileage"": {""description"": ""The current mileage of the vehicle. If not specified, the average mileage is used. Default is None."", ""type"": ""str, optional"", ""default"": """"}, ""period"": {""description"": ""Number of days to look back for sales data, with a maximum value of 365 days. Default is None."", ""type"": ""str, optional"", ""default"": """"}}}]"
259,41224,"Get comments for an idea post with the unique identifier 'efghij' in Russian. Additionally, fetch auto-complete suggestions for the stock market query 'Twitter, Inc'.","[{""name"": ""ideas_get_comments"", ""arguments"": {""uuid"": ""efghij"", ""lang"": ""ru""}}, {""name"": ""market_auto_complete"", ""arguments"": {""query"": ""Twitter, Inc""}}]","[{""name"": ""ideas_get_comments"", ""description"": ""Fetches comments related to an idea post from the TradingView API."", ""parameters"": {""uuid"": {""description"": ""The unique identifier of the idea post obtained from the `.../ideas/list` endpoint."", ""type"": ""str"", ""default"": ""CRK6Iv51""}, ""lang"": {""description"": ""The language code for the comments. Defaults to 'en'."", ""type"": ""str, optional"", ""default"": ""en""}}}, {""name"": ""market_auto_complete"", ""description"": ""Fetch auto-complete suggestions for stock market queries."", ""parameters"": {""query"": {""description"": ""The search query for which auto-complete suggestions are needed."", ""type"": ""str"", ""default"": ""nasdaq""}}}]"
260,41375,"Fetch HSN/TSN data for a car with the query 'Honda Civic' for the year 2019. Also, find weed strain information for strains that are 'difficult' to grow.","[{""name"": ""get_hsn_tsn"", ""arguments"": {""query"": ""Honda Civic"", ""year"": 2019}}, {""name"": ""difficulty"", ""arguments"": {""difficulty"": ""difficult""}}]","[{""name"": ""search"", ""description"": ""This function searches for pageant contest details by a given keyword using the PageantDB API."", ""parameters"": {""search"": {""description"": ""The search keyword for querying pageant contests."", ""type"": ""str"", ""default"": ""1987""}}}, {""name"": ""difficulty"", ""description"": ""Fetches weed strain information based on the difficulty of growing (easy, medium, or difficult)."", ""parameters"": {""difficulty"": {""description"": ""The difficulty level of growing the strain. Acceptable values are 'easy', 'medium', or 'difficult'."", ""type"": ""str"", ""default"": ""medium""}}}, {""name"": ""get_hsn_tsn"", ""description"": ""Fetch HSN/TSN data for a specified car query from the HSN-TSN API."", ""parameters"": {""query"": {""description"": ""The search query for the car."", ""type"": ""str"", ""default"": ""Audi A6""}, ""year"": {""description"": ""The year of the car. Defaults to 2018."", ""type"": ""int, optional"", ""default"": ""2018""}}}, {""name"": ""list_movies"", ""description"": ""List and search through all the available movies with various sorting, filtering, and ordering options."", ""parameters"": {""genre"": {""description"": ""Used to filter by a given genre (default is 'all'). See http://www.imdb.com/genre/ for a full list."", ""type"": ""str"", ""default"": ""all""}, ""order_by"": {""description"": ""Orders the results by either 'asc' (Ascending) or 'desc' (Descending) order (default is 'desc')."", ""type"": ""str"", ""default"": ""desc""}, ""with_rt_ratings"": {""description"": ""If True, includes Rotten Tomatoes ratings in the results (default is None)."", ""type"": ""bool"", ""default"": ""false""}, ""sort_by"": {""description"": ""Sorts the results by the specified value, such as 'date_added' (default is 'date_added')."", ""type"": ""str"", ""default"": ""date_added""}, ""page"": {""description"": ""The page number to retrieve, useful for pagination (default is 1)."", ""type"": ""int"", ""default"": ""1""}, ""query_term"": {""description"": ""Used for movie search, matching on: Movie Title, IMDB Code, Actor Name/IMDb, or Director Name/IMDb Code (default is '0')."", ""type"": ""str"", ""default"": ""0""}, ""quality"": {""description"": ""Used to filter by a given quality, such as '720p', '1080p', etc. (default is 'all')."", ""type"": ""str"", ""default"": ""all""}, ""minimum_rating"": {""description"": ""Filters movies by a given minimum IMDb rating (default is 0)."", ""type"": ""int"", ""default"": ""0""}, ""limit"": {""description"": ""The limit of results per page (default is 20)."", ""type"": ""int"", ""default"": ""20""}}}, {""name"": ""get_by_climate"", ""description"": ""Fetches plants based on the given climate of their natural habitat."", ""parameters"": {""climate"": {""description"": ""The climate type to filter plants by. Defaults to 'Tropical'."", ""type"": ""str"", ""default"": ""Tropical""}}}]"
261,41440,"Look for streets or postcodes in the UK that match the query 'park avenue' and limit the results to 2. Fetch town information for the ZIP code 4000 in Switzerland, and provide address suggestions for '1 Main Street'.","[{""name"": ""search"", ""arguments"": {""q"": ""park avenue"", ""limit"": 2}}, {""name"": ""getzip"", ""arguments"": {""zip"": 4000}}, {""name"": ""address_autosuggest"", ""arguments"": {""query"": ""1 Main Street""}}]","[{""name"": ""search"", ""description"": ""Searches for a street or post code based on a query string."", ""parameters"": {""q"": {""description"": ""The query string used to search for a street or post code."", ""type"": ""str"", ""default"": ""Downing Street London""}, ""limit"": {""description"": ""The maximum number of results to return. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}}}, {""name"": ""getzip"", ""description"": ""Fetch town information based on a provided ZIP code (Postleitzahl) using the RapidAPI."", ""parameters"": {""zip"": {""description"": ""The ZIP code for which to fetch town information."", ""type"": ""int"", ""default"": ""3052""}}}, {""name"": ""address_autosuggest"", ""description"": ""Fetches address suggestions based on a partial or complete address query using the Address Autosuggest API."", ""parameters"": {""query"": {""description"": ""The partial or complete text of the address to search for suggestions."", ""type"": ""str"", ""default"": ""Bridge""}}}]"
262,41480,"What will the population of a city with a current population of 500,000 be in 20 years with the default annual growth rate? After that, I would like to simulate a query to the 'products' table with conditions that include price less than 10 and category equals 'electronics'. Lastly, could you predict the evolutionary rate for the species 'Canis lupus' for the next 50,000 years using the Lamarck model?","[{""name"": ""project_population"", ""arguments"": {""current_pop"": 500000, ""num_years"": 20}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""products"", ""conditions"": [{""price"": {""$lt"": 10}}, {""category"": ""electronics""}]}}, {""name"": ""predict_evolution_rate"", ""arguments"": {""species"": ""Canis lupus"", ""years"": 50000, ""model"": ""Lamarck""}}]","[{""name"": ""project_population"", ""description"": ""Projects the population size after a specified number of years."", ""parameters"": {""current_pop"": {""description"": ""The current population size."", ""type"": ""int"", ""default"": 1.2}, ""num_years"": {""description"": ""The number of years into the future to make the projection."", ""type"": ""int"", ""default"": 1.2}, ""annual_growth"": {""description"": ""The annual population growth rate as a percentage. Defaults to 1.2."", ""type"": ""float, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""predict_evolution_rate"", ""description"": ""Predict the evolutionary rate for a specific species for a given timeframe."", ""parameters"": {""species"": {""description"": ""The species that the evolution rate will be predicted for."", ""type"": ""str"", ""default"": ""Darwin""}, ""years"": {""description"": ""Number of years for the prediction."", ""type"": ""int"", ""default"": ""Darwin""}, ""model"": {""description"": ""The model used to make the prediction, options: 'Darwin', 'Lamarck', default is 'Darwin'."", ""type"": ""str""}}}, {""name"": ""predict_forest_area"", ""description"": ""Predicts the change in forest area over a specified number of years."", ""parameters"": {""location"": {""description"": ""The geographic location for the prediction."", ""type"": ""str""}, ""num_years"": {""description"": ""The number of years into the future to make the prediction."", ""type"": ""int""}, ""include_humans"": {""description"": ""Whether to include the impact of human activities in the prediction. Defaults to False."", ""type"": ""bool, optional""}}}, {""name"": ""place_safeway_order"", ""description"": ""Order specified items from a Safeway location."", ""parameters"": {""location"": {""description"": ""The location of the Safeway store, e.g., 'Palo Alto, CA'."", ""type"": ""str""}, ""items"": {""description"": ""List of items to order."", ""type"": ""list""}, ""quantity"": {""description"": ""Quantity of each item in the order list."", ""type"": ""list""}}}]"
263,41500,"Scrape as many links as possible from https://www.example3.com, without query parameters.","[{""name"": ""scrape_links"", ""arguments"": {""url"": ""https://www.example3.com"", ""includequery"": false}}]","[{""name"": ""scrape_links"", ""description"": ""Scrapes a specified number of links from the provided URL using the Scrapey Link Scraper API."", ""parameters"": {""url"": {""description"": ""The target URL from which to scrape links."", ""type"": ""str"", ""default"": ""amazon.com""}, ""maxlinks"": {""description"": ""The maximum number of links to scrape. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}, ""includequery"": {""description"": ""Whether to include query parameters in the links. Defaults to None."", ""type"": ""bool, optional"", ""default"": ""true""}}}]"
264,41592,"Find links related to 'climate change' and search for images using the query 'renewable energy'. Also, search for images of 'birds' using the Google Search JSON API.","[{""name"": ""links_finder"", ""arguments"": {""query"": ""climate change""}}, {""name"": ""search"", ""arguments"": {""q"": ""renewable energy""}}, {""name"": ""search_image"", ""arguments"": {""q"": ""birds""}}]","[{""name"": ""pagesjaunes"", ""description"": ""This function extracts data from the \""Pages Jaunes\"" (Yellow Pages) for a given location and keyword."", ""parameters"": {""pjpage"": {""description"": ""The page number to retrieve."", ""type"": ""int"", ""default"": ""1""}, ""pjlocation"": {""description"": ""The location to search within \""Pages Jaunes\""."", ""type"": ""str"", ""default"": ""Paris""}, ""pjkeyword"": {""description"": ""The keyword to search for in \""Pages Jaunes\""."", ""type"": ""str"", ""default"": ""Restaurant""}}}, {""name"": ""links_finder"", ""description"": ""Fetches relevant links based on a given query using the ExplorArc's Link Finder API."", ""parameters"": {""query"": {""description"": ""The search query to find relevant links. Defaults to 'roadmap'."", ""type"": ""str"", ""default"": ""roadmap""}}}, {""name"": ""search"", ""description"": ""Search for images using the Webit Image Search API."", ""parameters"": {""q"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": ""pizza""}, ""number"": {""description"": ""The number of search results to return. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}, ""search_filter"": {""description"": ""Additional search filters for more specific results. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""search_image"", ""description"": ""Performs an image search using the Google Search JSON API and returns a JSON response containing information about images that match the search query."", ""parameters"": {""q"": {""description"": ""The search query for finding images."", ""type"": ""str"", ""default"": ""Newyork City""}, ""num"": {""description"": ""Number of search results to return. Valid values are between 1 and 20, inclusive. Default is 10."", ""type"": ""int, optional"", ""default"": ""10""}, ""lr"": {""description"": ""Restricts the search to documents written in a particular language. Default is 'lang_en'."", ""type"": ""str, optional"", ""default"": ""lang_en""}, ""start"": {""description"": ""The index of the first result to return. Default is 0."", ""type"": ""int, optional"", ""default"": ""0""}, ""gl"": {""description"": ""A two-letter country code that boosts search results whose country of origin matches the parameter value. Default is 'US'."", ""type"": ""str, optional"", ""default"": ""US""}}}]"
265,41651,"Could you retrieve the details of the airports that match the query 'Paris'? Additionally, I would like to know the details of the airports that match the queries 'Tokyo' and 'Sydney'.","[{""name"": ""airport_search"", ""arguments"": {""query"": ""Paris""}}, {""name"": ""airport_search"", ""arguments"": {""query"": ""Tokyo""}}, {""name"": ""airport_search"", ""arguments"": {""query"": ""Sydney""}}]","[{""name"": ""airport_search"", ""description"": ""Search for airports using the RapidAPI Flight Fare Search API."", ""parameters"": {""query"": {""description"": ""The search term to use for finding airports."", ""type"": ""str"", ""default"": ""LHR""}}}]"
266,41655,Query for LDU boundary by H3 index 987654321.,"[{""name"": ""query_for_ldu_boundary_by_h3index"", ""arguments"": {""h3ndex"": 987654321}}]","[{""name"": ""fetch_by_type_and_region"", ""description"": ""Fetch records from the API based on the given type, limit, and region."", ""parameters"": {""type"": {""description"": ""The type of records to fetch. Refer to the README for accepted types."", ""type"": ""str"", ""default"": ""Hill""}, ""limit"": {""description"": ""The maximum number of records to fetch."", ""type"": ""int"", ""default"": ""5""}, ""region"": {""description"": ""The region from which to fetch records."", ""type"": ""str"", ""default"": ""Eastern""}}}, {""name"": ""map"", ""description"": ""Fetches a map image in WMTS format based on the given parameters."", ""parameters"": {""tilerow"": {""description"": ""The WMTS tile row number (latitude direction)."", ""type"": ""int"", ""default"": ""25806""}, ""tilematrix"": {""description"": ""The tile matrix, specified in the format `[EPSG code]:[Scale value]`."", ""type"": ""str"", ""default"": ""EPSG:3857:16""}, ""tilecol"": {""description"": ""The WMTS tile column number (longitude direction)."", ""type"": ""int"", ""default"": ""58211""}, ""rotationangle"": {""description"": ""Angle to rotate the map image. Valid range is 0 to 359, default is 0."", ""type"": ""int, optional"", ""default"": """"}, ""mapstyle"": {""description"": ""Design of the map. Format is `[design]_[annotation size]`, default is `std_pc`."", ""type"": ""str, optional"", ""default"": """"}, ""landmarkicon"": {""description"": ""Display of landmark icons. `on` for display, `off` for hide, default is `off`."", ""type"": ""str, optional"", ""default"": """"}, ""resolution"": {""description"": ""Resolution of the map image. Values can be `1`, `2`, or `4`, default is `1`."", ""type"": ""str, optional"", ""default"": """"}, ""contour"": {""description"": ""Display of contour lines. `on` for display, `off` for hide, default is `on`."", ""type"": ""str, optional"", ""default"": """"}, ""bldgname"": {""description"": ""Display of building names. `on` for display, `off` for hide, default is `off`."", ""type"": ""str, optional"", ""default"": """"}, ""logo"": {""description"": ""Display of brand logos. `on` for display, `off` for hide, default is `off`."", ""type"": ""str, optional"", ""default"": """"}, ""target"": {""description"": ""Display contents of the map. Values can be `1` for background only, `2` for annotations only, `3` for both, default is `3`."", ""type"": ""str, optional"", ""default"": """"}, ""format"": {""description"": ""Output image format. Values can be `image/png` or `image/jpeg`, default is `image/png`."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""query_for_ldu_boundary_by_h3index"", ""description"": ""Queries for a Local Delivery Unit (LDU) boundary by its H3 index."", ""parameters"": {""h3ndex"": {""description"": ""The H3 index used to query the LDU boundary."", ""type"": ""int"", ""default"": ""635775751926485631""}}}]"
267,41701,"Get the latest 50 new iOS apps from the App Store in the UK for the category 'Books'. Also, search for devices on RapidAPI's mobile phones database using the query 'Google Pixel 5'. Finally, get company data for the company with LinkedIn URL 'https://www.linkedin.com/company/netflix'","[{""name"": ""new_ios_apps"", ""arguments"": {""country"": ""gb"", ""category"": ""6018"", ""num"": 50}}, {""name"": ""search_devices"", ""arguments"": {""query"": ""Google Pixel 5""}}, {""name"": ""get_company_data_by_linkedin_url"", ""arguments"": {""linkedin_url"": ""https://www.linkedin.com/company/netflix""}}]","[{""name"": ""new_ios_apps"", ""description"": ""Fetch a list of new iOS apps from the App Store using the RapidAPI service."", ""parameters"": {""country"": {""description"": ""The country code for the App Store. Defaults to 'us'."", ""type"": ""str, optional"", ""default"": ""us""}, ""category"": {""description"": ""The category code for the type of apps. Defaults to '6016'."", ""type"": ""str, optional"", ""default"": ""6016""}, ""lang"": {""description"": ""The language code for the App Store content. Defaults to 'en'."", ""type"": ""str, optional"", ""default"": ""en""}, ""num"": {""description"": ""The number of results to return. Defaults to 100."", ""type"": ""int, optional"", ""default"": ""100""}}}, {""name"": ""get_company_data_by_linkedin_url"", ""description"": ""Fetch company data using a given LinkedIn URL via the ToolBench RapidAPI."", ""parameters"": {""linkedin_url"": {""description"": ""The LinkedIn URL of the company to retrieve data for."", ""type"": ""str"", ""default"": ""https://www.linkedin.com/company/apple/""}}}, {""name"": ""search_devices"", ""description"": ""Searches for devices using the given query string on the RapidAPI's mobile phones database and returns the results."", ""parameters"": {""query"": {""description"": ""The search query string to find matching devices."", ""type"": ""str"", ""default"": ""iphone 14""}}}]"
268,41704,"Search for exchanges based on a query string 'Binance' and category 'Cryptocurrency' using the stock_cryptocurrency_forex_market_data API. Also, grant access to a unique URL for the Walnut Trading Dashboard using the provided API key.","[{""name"": ""search_exchange"", ""arguments"": {""q"": ""Binance"", ""category"": ""Cryptocurrency""}}, {""name"": ""free_access"", ""arguments"": {""get_dash_url"": ""unique_url""}}]","[{""name"": ""symbols_get_peers"", ""description"": ""Fetches the peer symbols of a given stock symbol using the Seeking Alpha API."", ""parameters"": {""symbol"": {""description"": ""The stock symbol to query for peers. Multiple symbols can be queried by separating them with a comma (e.g. 'aapl,tsla')."", ""type"": ""str"", ""default"": ""aapl""}}}, {""name"": ""specific_transactions"", ""description"": ""Fetch detailed information about a specific cryptocurrency transaction using the provided hash and symbol."", ""parameters"": {""hash"": {""description"": ""The transaction hash used to uniquely identify the cryptocurrency transaction."", ""type"": ""str"", ""default"": ""ac6f1a0b388e2814f2e2036c7c81524cfae7e3432a8e503fe5d07ebb453ee310""}, ""symbol"": {""description"": ""The symbol of the cryptocurrency (e.g., BTC, ETH) for which the transaction information is to be retrieved."", ""type"": ""str"", ""default"": ""btc""}}}, {""name"": ""profile"", ""description"": ""Fetches company profile data such as sector, industry, location, and executives using the given stock symbol."", ""parameters"": {""symbol"": {""description"": ""The stock symbol for which to fetch company profile data."", ""type"": ""str"", ""default"": ""AAPL""}}}, {""name"": ""search_exchange"", ""description"": ""Search for exchanges based on a query string or category."", ""parameters"": {""q"": {""description"": ""A query string to search for specific exchanges. Defaults to 'B'."", ""type"": ""str, optional"", ""default"": ""B""}, ""category"": {""description"": ""The category to filter the exchanges, for example, 'Cryptocurrency'. Defaults to 'Cryptocurrency'."", ""type"": ""str, optional"", ""default"": ""Cryptocurrency""}}}, {""name"": ""free_access"", ""description"": ""Grant access to a unique URL for the Walnut Trading Dashboard using the provided API key."", ""parameters"": {""get_dash_url"": {""description"": ""The URL parameter required to get access to the dashboard."", ""type"": ""str"", ""default"": ""True""}}}]"
269,41873,"Please search for a product on Tokopedia using the query 'laptop' and the action 'search'. Also, perform another search using the query 'smartphone' and the action 'search'. For both searches, could you use the custom API key 'abc123'?","[{""name"": ""search_product"", ""arguments"": {""query"": ""laptop"", ""act"": ""search""}}, {""name"": ""search_product"", ""arguments"": {""query"": ""smartphone"", ""act"": ""search""}}]","[{""name"": ""search_product"", ""description"": ""This function searches for a product using the Tokopedia API based on the given query and act parameters."", ""parameters"": {""query"": {""description"": ""The search query string for the product to be searched."", ""type"": ""str"", ""default"": ""Celana Jeans""}, ""act"": {""description"": ""The action parameter to specify the type of search."", ""type"": ""str"", ""default"": ""search""}}}]"
270,41878,I want to simulate a query to a database named 'users' with conditions: 'age' > 30 and 'city' == 'New York'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": {""$gt"": 30}}, {""city"": ""New York""}]}}]","[{""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}]"
271,41954,"Find the Polish car averages for a 2021 Ford Mustang and a 2022 Chevrolet Camaro. Also, search for devices on the mobile phones database that match the query 'OnePlus Nord CE 5G'. Finally, fetch videos related to the video with ID 'kXYiU_JCYtU' in the UK region and in English language.","[{""name"": ""pl_car_averages"", ""arguments"": {""year"": ""2021"", ""make"": ""Ford"", ""model"": ""Mustang""}}, {""name"": ""pl_car_averages"", ""arguments"": {""year"": ""2022"", ""make"": ""Chevrolet"", ""model"": ""Camaro""}}, {""name"": ""search_devices"", ""arguments"": {""query"": ""OnePlus Nord CE 5G""}}, {""name"": ""related_videos"", ""arguments"": {""is_id"": ""kXYiU_JCYtU"", ""geo"": ""UK"", ""lang"": ""en""}}]","[{""name"": ""pl_car_averages"", ""description"": ""Fetches and returns Polish car averages for a given vehicle's year, make, and model."", ""parameters"": {""year"": {""description"": ""The year of the car."", ""type"": ""str"", ""default"": ""2012""}, ""make"": {""description"": ""The make of the car."", ""type"": ""str"", ""default"": ""bmw""}, ""model"": {""description"": ""The model of the car."", ""type"": ""str"", ""default"": ""5 series""}}}, {""name"": ""search_devices"", ""description"": ""Searches for devices using the given query string on the RapidAPI's mobile phones database and returns the results."", ""parameters"": {""query"": {""description"": ""The search query string to find matching devices."", ""type"": ""str"", ""default"": ""iphone 14""}}}, {""name"": ""related_videos"", ""description"": ""Fetches videos related to a specified video using the YouTube V3 API."", ""parameters"": {""is_id"": {""description"": ""The ID of the video for which to fetch related videos."", ""type"": ""str"", ""default"": ""dQw4w9WgXcQ""}, ""x_cachebypass"": {""description"": ""Cache bypass parameter; pass '1' to bypass the cache. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""geo"": {""description"": ""ISO 3166-2 country code of the region (e.g., 'US', 'UK', 'CA'). Defaults to 'US'."", ""type"": ""str, optional"", ""default"": ""US""}, ""lang"": {""description"": ""Locale/language for the request (e.g., 'en', 'gb', 'hi'). Defaults to 'en'."", ""type"": ""str, optional"", ""default"": ""en""}, ""token"": {""description"": ""Pagination token for fetching additional results. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}]"
272,41974,"Find the geocoding search results for the query '1600 Pennsylvania Ave NW, Washington, DC 20500' and limit the results to 5. Also, retrieve the polygon geometry of the search results in SVG format.","[{""name"": ""geocodingsearch"", ""arguments"": {""q"": ""1600 Pennsylvania Ave NW, Washington, DC 20500"", ""limit"": 5, ""polygon_svg"": ""true""}}]","[{""name"": ""reverse_geocode"", ""description"": ""This function takes longitude and latitude coordinates and returns the corresponding address by making a reverse geocoding API request."", ""parameters"": {""lng"": {""description"": ""The longitude coordinate."", ""type"": ""int"", ""default"": ""-123.0470199""}, ""lat"": {""description"": ""The latitude coordinate."", ""type"": ""int"", ""default"": ""49.2813458""}}}, {""name"": ""mapimage"", ""description"": ""Retrieves a map image with specified parameters such as coordinates, scale, size, and various display options."", ""parameters"": {""lonlat"": {""description"": ""The latitude and longitude in the format \""longitude,latitude\""."", ""type"": ""str"", ""default"": ""139.767231,35.681196""}, ""scale"": {""description"": ""The map scale. Valid range is from 6 to 21."", ""type"": ""int"", ""default"": ""16""}, ""size"": {""description"": ""The image size in the format \""width,height\"" in pixels."", ""type"": ""str"", ""default"": ""320,240""}, ""icon"": {""description"": ""Icon settings in the format \""[icon_type,longitude,latitude]|...\"". Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""centericon"": {""description"": ""Whether to display the center icon (on/off). Defaults to None (\""off\"")."", ""type"": ""str, optional"", ""default"": """"}, ""logo"": {""description"": ""Whether to display the brand logo (on/off). Defaults to None (\""off\"")."", ""type"": ""str, optional"", ""default"": """"}, ""landmarkicon"": {""description"": ""Whether to display landmark icons (on/off). Defaults to None (\""off\"")."", ""type"": ""str, optional"", ""default"": """"}, ""format"": {""description"": ""The output image format, either \""image/png\"" or \""image/jpeg\"". Defaults to \""image/png\""."", ""type"": ""str, optional"", ""default"": """"}, ""resolution"": {""description"": ""The image resolution. \""1\"" for standard size, \""2\"" for double size. Defaults to \""1\""."", ""type"": ""str, optional"", ""default"": """"}, ""rotationangle"": {""description"": ""The angle to rotate the map. Valid range is from 0 to 359 degrees. Defaults to 0."", ""type"": ""int, optional"", ""default"": """"}, ""routeresultid"": {""description"": ""The route result ID to display the route on the map. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""routeicon"": {""description"": ""Route icon settings, \""0\"" for none, \""1\"" for standard icons. Defaults to \""1\""."", ""type"": ""str, optional"", ""default"": """"}, ""scaler"": {""description"": ""Whether to display the scale (on/off). Defaults to \""off\""."", ""type"": ""str, optional"", ""default"": """"}, ""bldgname"": {""description"": ""Whether to display building names (on/off). Defaults to \""off\""."", ""type"": ""str, optional"", ""default"": """"}, ""contour"": {""description"": ""Whether to display contour lines (on/off). Defaults to \""on\""."", ""type"": ""str, optional"", ""default"": """"}, ""target"": {""description"": ""The map display content. \""1\"" for background, \""2\"" for notes, \""3\"" for both. Defaults to \""3\""."", ""type"": ""str, optional"", ""default"": """"}, ""mapstyle"": {""description"": ""Map design parameter in the format \""[design]_[note_size]\"". Defaults to \""std_pc\""."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""geocodingsearch"", ""description"": ""Performs a forward geocoding search using a free-form query string and optional parameters to specify query filters and output format."", ""parameters"": {""q"": {""description"": ""Free-form query string for the geocoding search."", ""type"": ""str"", ""default"": ""New York City NY USA""}, ""countrycodes"": {""description"": ""Two-letter country code as defined in ISO 3166-1 alpha2 to restrict search to a specific country."", ""type"": ""str, optional"", ""default"": """"}, ""json_callback"": {""description"": ""Name of JSON callback function for JSONP calls; use this when the format is set to JSON."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_text"": {""description"": ""Include a textual representation of the polygon geometry in the output."", ""type"": ""str, optional"", ""default"": """"}, ""namedetails"": {""description"": ""Include detailed naming information in the output."", ""type"": ""str, optional"", ""default"": """"}, ""limit"": {""description"": ""Limit the number of search results."", ""type"": ""str, optional"", ""default"": """"}, ""viewbox"": {""description"": ""Specify a bounding box for the search area in the format 'x1,y1,x2,y2', where x is longitude and y is latitude."", ""type"": ""str, optional"", ""default"": """"}, ""format"": {""description"": ""Output format of the response (e.g., JSON)."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_geojson"": {""description"": ""Include GeoJSON representation of the polygon geometry in the output."", ""type"": ""str, optional"", ""default"": """"}, ""bounded"": {""description"": ""Use '1' to restrict the search area to the specified viewbox."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_svg"": {""description"": ""Include SVG representation of the polygon geometry in the output."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_kml"": {""description"": ""Include KML representation of the polygon geometry in the output."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_threshold"": {""description"": ""Simplification threshold for the polygon geometry."", ""type"": ""int, optional"", ""default"": ""0.0""}, ""accept_language"": {""description"": ""Set the query and response language using two-letter language codes (e.g., 'en' or 'es') or a combination of language and region code (e.g., 'en-GB' or 'es-AR'). Default is 'en'."", ""type"": ""str, optional"", ""default"": ""en""}, ""addressdetails"": {""description"": ""Include detailed address information in the output."", ""type"": ""str, optional"", ""default"": """"}}}]"
273,41982,Fetch search suggestions for the query 'machine learning tutorial' on YouTube.,"[{""name"": ""search_suggestions"", ""arguments"": {""q"": ""machine learning tutorial""}}]","[{""name"": ""shows_id"", ""description"": ""Fetch metadata associated with the specified show from the given platform."", ""parameters"": {""platform"": {""description"": ""Source platform for the show. Possible values are 'ios', 'android', 'androidtv', 'web'."", ""type"": ""str"", ""default"": ""web""}, ""is_id"": {""description"": ""The ID of the show. Can also be a TMDB ID."", ""type"": ""str"", ""default"": ""82856""}, ""region"": {""description"": ""Region to retrieve the sources' deep link from. Default is 'US'. Possible values are 'US', 'FR'."", ""type"": ""str, optional"", ""default"": ""US""}}}, {""name"": ""search_video_list_by_keywords"", ""description"": ""Search for videos on TikTok by specified keywords and additional filtering options."", ""parameters"": {""keywords"": {""description"": ""Keywords to search videos for."", ""type"": ""str"", ""default"": ""\u8e0a\u3063\u3066\u307f\u305f""}, ""sort_type"": {""description"": ""Criterion for sorting results. Defaults to '0'."", ""type"": ""str, optional"", ""default"": ""0""}, ""publish_time"": {""description"": ""Time filter for when videos were posted. Defaults to '0'."", ""type"": ""str, optional"", ""default"": ""0""}, ""cursor"": {""description"": ""Pagination cursor for navigating results. Defaults to '0'."", ""type"": ""str, optional"", ""default"": ""0""}, ""region"": {""description"": ""ISO region code to filter results by location. Defaults to 'US'."", ""type"": ""str, optional"", ""default"": ""US""}, ""count"": {""description"": ""Number of results to retrieve. Defaults to '10'."", ""type"": ""str, optional"", ""default"": ""10""}}}, {""name"": ""search_suggestions"", ""description"": ""Fetches search suggestions for a given query using the Cheap YouTube API through RapidAPI."", ""parameters"": {""q"": {""description"": ""The search query for which to fetch suggestions."", ""type"": ""str"", ""default"": ""crypto""}}}]"
274,42322,"Simulate querying the 'users' table with the conditions {'age': 25, 'city': 'New York'} and {'gender': 'female', 'occupation': 'engineer'}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": 25, ""city"": ""New York""}, {""gender"": ""female"", ""occupation"": ""engineer""}]}}]","[{""name"": ""get_ip_zipcode"", ""description"": ""Retrieves the ZIP code of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_hotel_available"", ""description"": ""Checks the availability of a hotel for a given date range."", ""parameters"": {""hotel"": {""description"": ""The name of the hotel."", ""type"": ""str""}, ""city"": {""description"": ""The city where the hotel is located."", ""type"": ""str""}, ""checkin"": {""description"": ""The check-in date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}, ""checkout"": {""description"": ""The check-out date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}}}, {""name"": ""predict_forest_area"", ""description"": ""Predicts the change in forest area over a specified number of years."", ""parameters"": {""location"": {""description"": ""The geographic location for the prediction."", ""type"": ""str""}, ""num_years"": {""description"": ""The number of years into the future to make the prediction."", ""type"": ""int""}, ""include_humans"": {""description"": ""Whether to include the impact of human activities in the prediction. Defaults to False."", ""type"": ""bool, optional""}}}, {""name"": ""is_valid_email"", ""description"": ""Checks if an email address is valid."", ""parameters"": {""email"": {""description"": ""The email address to validate."", ""type"": ""str""}}}, {""name"": ""place_safeway_order"", ""description"": ""Order specified items from a Safeway location."", ""parameters"": {""location"": {""description"": ""The location of the Safeway store, e.g., 'Palo Alto, CA'."", ""type"": ""str""}, ""items"": {""description"": ""List of items to order."", ""type"": ""list""}, ""quantity"": {""description"": ""Quantity of each item in the order list."", ""type"": ""list""}}}, {""name"": ""get_pokemon_move_info"", ""description"": ""Retrieves information about a Pok\u00e9mon's move using the Pok\u00e9API."", ""parameters"": {""pokemon_name"": {""description"": ""The name of the Pok\u00e9mon."", ""type"": ""str"", ""default"": ""run""}, ""move_name"": {""description"": ""The name of the move to check. Defaults to \""run\""."", ""type"": ""str, optional"", ""default"": ""run""}}}]"
275,42370,"Simulate a query on the 'employees' table with conditions: {'age': {'$gt': 30}, 'salary': {'$lt': 50000}}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""employees"", ""conditions"": [{""age"": {""$gt"": 30}}, {""salary"": {""$lt"": 50000}}]}}]","[{""name"": ""get_holidays_by_year"", ""description"": ""Retrieves the list of public holidays for a given year and country using the Nager.Date API."", ""parameters"": {""year"": {""description"": ""The year for which to retrieve the holidays."", ""type"": ""int""}, ""country_code"": {""description"": ""The two-letter ISO 3166-1 alpha-2 country code."", ""type"": ""str""}}}, {""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""predict_forest_area"", ""description"": ""Predicts the change in forest area over a specified number of years."", ""parameters"": {""location"": {""description"": ""The geographic location for the prediction."", ""type"": ""str""}, ""num_years"": {""description"": ""The number of years into the future to make the prediction."", ""type"": ""int""}, ""include_humans"": {""description"": ""Whether to include the impact of human activities in the prediction. Defaults to False."", ""type"": ""bool, optional""}}}, {""name"": ""predict_evolution_rate"", ""description"": ""Predict the evolutionary rate for a specific species for a given timeframe."", ""parameters"": {""species"": {""description"": ""The species that the evolution rate will be predicted for."", ""type"": ""str"", ""default"": ""Darwin""}, ""years"": {""description"": ""Number of years for the prediction."", ""type"": ""int"", ""default"": ""Darwin""}, ""model"": {""description"": ""The model used to make the prediction, options: 'Darwin', 'Lamarck', default is 'Darwin'."", ""type"": ""str""}}}]"
276,42518,"Could you search for a product on Tokopedia using the query 'laptop' and the action 'search'. Also, perform another search using the query 'smartphone' and the action 'search'. Lastly, repeat the search using the query 'tablet' and the action 'search'. For all three searches, could you use the custom API key 'pqr678'?","[{""name"": ""search_product"", ""arguments"": {""query"": ""laptop"", ""act"": ""search""}}, {""name"": ""search_product"", ""arguments"": {""query"": ""smartphone"", ""act"": ""search""}}, {""name"": ""search_product"", ""arguments"": {""query"": ""tablet"", ""act"": ""search""}}]","[{""name"": ""search_product"", ""description"": ""This function searches for a product using the Tokopedia API based on the given query and act parameters."", ""parameters"": {""query"": {""description"": ""The search query string for the product to be searched."", ""type"": ""str"", ""default"": ""Celana Jeans""}, ""act"": {""description"": ""The action parameter to specify the type of search."", ""type"": ""str"", ""default"": ""search""}}}]"
277,42614,"Find a drink recipe with the ID '1234' using the Ghana Food Recipe API. Also, find creative recipes using the search query 'vegan chocolate cake' using the Recipe64 RapidAPI.","[{""name"": ""drink_by_id"", ""arguments"": {""is_id"": ""1234""}}, {""name"": ""go"", ""arguments"": {""q"": ""vegan chocolate cake""}}]","[{""name"": ""drink_by_id"", ""description"": ""Fetches a specific drink recipe by its ID using the Ghana Food Recipe API."", ""parameters"": {""is_id"": {""description"": ""The unique identifier for the drink recipe."", ""type"": ""str"", ""default"": ""63c67c9db06a3ed9f92b2367""}}}, {""name"": ""go"", ""description"": ""Retrieves creative recipes based on a search query using the Recipe64 RapidAPI."", ""parameters"": {""q"": {""description"": ""Search query for the recipes."", ""type"": ""str"", ""default"": ""taco""}}}]"
278,42732,Query for a Local Delivery Unit (LDU) boundary by its H3 index 61976289624904704.,"[{""name"": ""query_for_ldu_boundary_by_h3index"", ""arguments"": {""h3ndex"": 61976289624904704}}]","[{""name"": ""get_vector_tile"", ""description"": ""Fetches vector tiles based on the OpenMapTiles schema using the provided x, y, and z coordinates."", ""parameters"": {""x"": {""description"": ""The X coordinate of the tile."", ""type"": ""int"", ""default"": ""0""}, ""y"": {""description"": ""The Y coordinate of the tile."", ""type"": ""int"", ""default"": ""0""}, ""z"": {""description"": ""The zoom level of the tile."", ""type"": ""int"", ""default"": ""0""}}}, {""name"": ""reversegeocoding"", ""description"": ""Perform reverse geocoding to find an address or place by latitude and longitude."", ""parameters"": {""lon"": {""description"": ""Longitude of the location."", ""type"": ""int"", ""default"": ""-87.6244212""}, ""lat"": {""description"": ""Latitude of the location."", ""type"": ""int"", ""default"": ""41.8755616""}, ""json_callback"": {""description"": ""JSON callback function name for cross-domain requests."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_geojson"": {""description"": ""Include a GeoJSON polygon for the results."", ""type"": ""str, optional"", ""default"": """"}, ""limit"": {""description"": ""Limit the number of returned results."", ""type"": ""str, optional"", ""default"": """"}, ""accept_language"": {""description"": ""Response language in two-letter codes (e.g., 'en', 'es'). Default is 'en'."", ""type"": ""str, optional"", ""default"": ""en""}, ""polygon_kml"": {""description"": ""Include KML polygon in the results."", ""type"": ""str, optional"", ""default"": """"}, ""zoom"": {""description"": ""Level of detail required for the address details."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_svg"": {""description"": ""Include SVG polygon in the results."", ""type"": ""str, optional"", ""default"": """"}, ""addressdetails"": {""description"": ""Include full address breakdown in the results."", ""type"": ""str, optional"", ""default"": """"}, ""namedetails"": {""description"": ""Include a list of alternative names in the results."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_threshold"": {""description"": ""Simplify the returned polygons to a threshold level."", ""type"": ""int, optional"", ""default"": ""0.0""}, ""format"": {""description"": ""Format of the response (e.g., 'json', 'xml')."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_text"": {""description"": ""Include a WKT polygon in the results."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""search"", ""description"": ""Performs a global geocoding search using the provided query and optional parameters, returning geographic data from the API."", ""parameters"": {""q"": {""description"": ""Query string to search for geographic locations."", ""type"": ""str"", ""default"": ""Kirchengasse Wien""}, ""language"": {""description"": ""Language for the given instructions. Must be a valid ISO 639-1 language code. Default is None."", ""type"": ""str, optional"", ""default"": """"}, ""viewbox"": {""description"": ""Preferred area to search in, formatted as `{minLng},{minLat},{maxLng},{maxLat}`. Default is None."", ""type"": ""str, optional"", ""default"": """"}, ""polygon"": {""description"": ""Whether available polygons are added to the response data. Default is None."", ""type"": ""str, optional"", ""default"": """"}, ""limit"": {""description"": ""Limits the number of returned results. Default is None."", ""type"": ""int, optional"", ""default"": """"}, ""countrycodes"": {""description"": ""Limits results to specified countries. Multiple countries should be separated by commas, using valid ISO 3166-1 alpha-2 country codes. Default is None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""query_for_ldu_boundary_by_h3index"", ""description"": ""Queries for a Local Delivery Unit (LDU) boundary by its H3 index."", ""parameters"": {""h3ndex"": {""description"": ""The H3 index used to query the LDU boundary."", ""type"": ""int"", ""default"": ""635775751926485631""}}}]"
279,42832,"Can you simulate a query on the 'customers' table where the city is 'New York' and the status is 'active'? Also, I need to calculate the total cost for items: 'apple', 'banana', and 'orange' with respective quantities of 3, 2, and 5 and prices of 0.5, 0.25, and 0.75.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""customers"", ""conditions"": [{""column"": ""city"", ""value"": ""New York""}, {""column"": ""status"", ""value"": ""active""}]}}, {""name"": ""calculate_order_total"", ""arguments"": {""items"": [""apple"", ""banana"", ""orange""], ""quantities"": [3, 2, 5], ""prices"": [0.5, 0.25, 0.75]}}]","[{""name"": ""calculate_order_total"", ""description"": ""Calculates the total cost of an order based on the items, quantities, and prices."", ""parameters"": {""items"": {""description"": ""A list of item names."", ""type"": ""List[str]""}, ""quantities"": {""description"": ""A list of corresponding quantities for each item."", ""type"": ""List[int]""}, ""prices"": {""description"": ""A list of corresponding prices for each item."", ""type"": ""List[float]""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
280,42853,Simulate querying the 'products' table with conditions: price<50 and category='electronics'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""products"", ""conditions"": [{""price"": {""$lt"": 50}}, {""category"": ""electronics""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
281,42870,"What is the company information for the business with CNPJ ID '45678912', and what is the hosts file for Minecraft? Additionally, I want to search for the query 'latest SEO trends' on a secondary search engine.","[{""name"": ""consulta_empresa"", ""arguments"": {""is_id"": ""45678912""}}, {""name"": ""hosts_txt"", ""arguments"": {""game"": ""minecraft""}}, {""name"": ""search_b"", ""arguments"": {""query"": ""latest SEO trends""}}]","[{""name"": ""consulta_empresa"", ""description"": ""Fetches company information based on the given CNPJ ID using the RapidAPI service."", ""parameters"": {""is_id"": {""description"": ""The first 8 digits of the CNPJ used to identify the company."", ""type"": ""str"", ""default"": ""37335118""}}}, {""name"": ""hosts_txt"", ""description"": ""Fetches the hosts file for a specific game using the StopModReposts Blocklist API."", ""parameters"": {""game"": {""description"": ""The name of the game for which to fetch the hosts file. Defaults to 'minecraft'."", ""type"": ""str, optional"", ""default"": ""minecraft""}}}, {""name"": ""search_b"", ""description"": ""Performs a search query using the SEO API on a secondary search engine."", ""parameters"": {""query"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": ""q=coffee+shop""}}}, {""name"": ""emailfinder"", ""description"": ""Finds the most likely email address based on the provided domain name, first name, and last name using the Tomba RapidAPI."", ""parameters"": {""domain"": {""description"": ""The domain name to search for the email address (e.g., \""stripe.com\"")."", ""type"": ""str"", ""default"": ""stripe.com""}, ""first_name"": {""description"": ""The first name of the person."", ""type"": ""str"", ""default"": ""Moskoz""}, ""last_name"": {""description"": ""The last name of the person."", ""type"": ""str"", ""default"": ""Dustin""}}}]"
282,43020,Search for related locations and suggestions based on the query string 'Paris'.,"[{""name"": ""locations_v3_search"", ""arguments"": {""q"": ""Paris""}}]","[{""name"": ""amenities"", ""description"": ""Retrieves amenities IDs and descriptions from the Airbnb Listings API, returning up to 50 results starting from the specified offset."", ""parameters"": {""offset"": {""description"": ""The index to start retrieving the amenities from."", ""type"": ""int"", ""default"": ""0""}}}, {""name"": ""locations_v3_search"", ""description"": ""Search for related locations and suggestions based on the provided query string using the RapidAPI 'locations/v3/search' endpoint."", ""parameters"": {""q"": {""description"": ""The query string representing names of countries, cities, districts, places, etc."", ""type"": ""str"", ""default"": ""new york""}, ""langid"": {""description"": ""The language identifier. Default is 1033."", ""type"": ""int, optional"", ""default"": ""1033""}, ""siteid"": {""description"": ""The site identifier. Default is 300000001."", ""type"": ""int, optional"", ""default"": ""300000001""}, ""locale"": {""description"": ""The locale code. Default is 'en_US'."", ""type"": ""str, optional"", ""default"": ""en_US""}}}]"
283,43060,"I want to simulate querying the 'customers' table with conditions: {'region': 'North America', 'purchase_frequency': {'$gte': 5}}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""customers"", ""conditions"": [{""region"": ""North America""}, {""purchase_frequency"": {""$gte"": 5}}]}}]","[{""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
284,43184,"Perform a geocoding search for '1600 Pennsylvania Avenue, Washington, DC' and limit the results to 1. Also, query for the LDU boundary by H3 index 611963863572242687.","[{""name"": ""geocodingsearch"", ""arguments"": {""q"": ""1600 Pennsylvania Avenue, Washington, DC"", ""limit"": ""1""}}, {""name"": ""query_for_ldu_boundary_by_h3index"", ""arguments"": {""h3ndex"": 611963863572242687}}]","[{""name"": ""geocodingsearch"", ""description"": ""Performs a forward geocoding search using a free-form query string and optional parameters to specify query filters and output format."", ""parameters"": {""q"": {""description"": ""Free-form query string for the geocoding search."", ""type"": ""str"", ""default"": ""New York City NY USA""}, ""countrycodes"": {""description"": ""Two-letter country code as defined in ISO 3166-1 alpha2 to restrict search to a specific country."", ""type"": ""str, optional"", ""default"": """"}, ""json_callback"": {""description"": ""Name of JSON callback function for JSONP calls; use this when the format is set to JSON."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_text"": {""description"": ""Include a textual representation of the polygon geometry in the output."", ""type"": ""str, optional"", ""default"": """"}, ""namedetails"": {""description"": ""Include detailed naming information in the output."", ""type"": ""str, optional"", ""default"": """"}, ""limit"": {""description"": ""Limit the number of search results."", ""type"": ""str, optional"", ""default"": """"}, ""viewbox"": {""description"": ""Specify a bounding box for the search area in the format 'x1,y1,x2,y2', where x is longitude and y is latitude."", ""type"": ""str, optional"", ""default"": """"}, ""format"": {""description"": ""Output format of the response (e.g., JSON)."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_geojson"": {""description"": ""Include GeoJSON representation of the polygon geometry in the output."", ""type"": ""str, optional"", ""default"": """"}, ""bounded"": {""description"": ""Use '1' to restrict the search area to the specified viewbox."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_svg"": {""description"": ""Include SVG representation of the polygon geometry in the output."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_kml"": {""description"": ""Include KML representation of the polygon geometry in the output."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_threshold"": {""description"": ""Simplification threshold for the polygon geometry."", ""type"": ""int, optional"", ""default"": ""0.0""}, ""accept_language"": {""description"": ""Set the query and response language using two-letter language codes (e.g., 'en' or 'es') or a combination of language and region code (e.g., 'en-GB' or 'es-AR'). Default is 'en'."", ""type"": ""str, optional"", ""default"": ""en""}, ""addressdetails"": {""description"": ""Include detailed address information in the output."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""query_for_ldu_boundary_by_h3index"", ""description"": ""Queries for a Local Delivery Unit (LDU) boundary by its H3 index."", ""parameters"": {""h3ndex"": {""description"": ""The H3 index used to query the LDU boundary."", ""type"": ""int"", ""default"": ""635775751926485631""}}}]"
285,43221,Search for a Twitter user with the query 'elonmusk'.,"[{""name"": ""search_user"", ""arguments"": {""q"": ""elonmusk""}}]","[{""name"": ""search_b"", ""description"": ""Performs a search query using the SEO API on a secondary search engine."", ""parameters"": {""query"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": ""q=coffee+shop""}}}, {""name"": ""channel_details"", ""description"": ""Fetches details of a YouTube channel given its ID and desired parts using the RapidAPI service."", ""parameters"": {""is_id"": {""description"": ""The ID of the YouTube channel to fetch details for."", ""type"": ""str"", ""default"": ""UCBVjMGOIkavEAhyqpxJ73Dw""}, ""part"": {""description"": ""The part parameter specifies a comma-separated list of one or more channel resource properties that the API response will include."", ""type"": ""str"", ""default"": ""snippet,statistics""}}}, {""name"": ""search_user"", ""description"": ""Searches for a Twitter user based on the provided query string using the Twitter Pack API."", ""parameters"": {""q"": {""description"": ""The query string to search for the Twitter user."", ""type"": ""str"", ""default"": ""elon""}}}, {""name"": ""trending"", ""description"": ""Fetches the trending NFT collections from OpenSea."", ""parameters"": {""time"": {""description"": ""The time frame for which to fetch trending NFTs. Defaults to 'ONE_HOUR'."", ""type"": ""str"", ""default"": ""ONE_HOUR""}, ""chain"": {""description"": ""The blockchain chain to filter the NFTs by. If None, results are not filtered by chain. Defaults to None."", ""type"": ""str"", ""default"": """"}, ""sortby"": {""description"": ""The criteria by which to sort the NFTs. Defaults to 'ONE_HOUR_VOLUME'."", ""type"": ""str"", ""default"": ""ONE_HOUR_VOLUME""}, ""count"": {""description"": ""The number of trending NFTs to fetch. Defaults to 100."", ""type"": ""int"", ""default"": ""100""}}}]"
286,43347,"Simulate a query to the 'products' table with conditions: {'price': {'<': 10}, 'category': 'electronics'} and {'brand': 'Apple'} or {'brand': 'Samsung'}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""products"", ""conditions"": [{""price"": {""<"": 10}, ""category"": ""electronics""}, {""$or"": [{""brand"": ""Apple""}, {""brand"": ""Samsung""}]}]}}]","[{""name"": ""whole_foods_order"", ""description"": ""Places an order at Whole Foods."", ""parameters"": {""store_location"": {""description"": ""The location of the Whole Foods store."", ""type"": ""str""}, ""item_list"": {""description"": ""A list of items to order."", ""type"": ""list""}, ""order_size"": {""description"": ""The size of the order. Allowed values: \""small\"", \""medium\"", or \""large\""."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""calculate_calorie_intake"", ""description"": ""Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals."", ""parameters"": {""weight_kg"": {""description"": ""Body weight in kilograms."", ""type"": ""float""}, ""height_cm"": {""description"": ""Height in centimeters."", ""type"": ""float""}, ""age"": {""description"": ""Age in years."", ""type"": ""int""}, ""sex"": {""description"": ""Biological sex, either 'male' or 'female'."", ""type"": ""str""}, ""activity_level"": {""description"": ""Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active)."", ""type"": ""int""}, ""goal"": {""description"": ""Fitness goal, either 'lose', 'maintain', or 'gain'."", ""type"": ""str""}}}]"
287,43374,"Could you search for a product on Tokopedia using the query 'laptop' and the action 'search'. Also, perform another search using the query 'smartphone' and the action 'search'. Lastly, repeat the search using the query 'tablet' and the action 'search'. For all three searches, could you use the custom API key 'jkl012'?","[{""name"": ""search_product"", ""arguments"": {""query"": ""laptop"", ""act"": ""search""}}, {""name"": ""search_product"", ""arguments"": {""query"": ""smartphone"", ""act"": ""search""}}, {""name"": ""search_product"", ""arguments"": {""query"": ""tablet"", ""act"": ""search""}}]","[{""name"": ""search_product"", ""description"": ""This function searches for a product using the Tokopedia API based on the given query and act parameters."", ""parameters"": {""query"": {""description"": ""The search query string for the product to be searched."", ""type"": ""str"", ""default"": ""Celana Jeans""}, ""act"": {""description"": ""The action parameter to specify the type of search."", ""type"": ""str"", ""default"": ""search""}}}]"
288,43494,"What would be the simulated response if I query the 'animals' table with conditions: {'type': 'mammals', 'weight': {'$gte': 100}}? And what is the predicted evolution rate for the species 'elephants' over the next 1000 years using the Darwin model?","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""animals"", ""conditions"": [{""type"": ""mammals"", ""weight"": {""$gte"": 100}}]}}, {""name"": ""predict_evolution_rate"", ""arguments"": {""species"": ""elephants"", ""years"": 1000, ""model"": ""Darwin""}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""predict_evolution_rate"", ""description"": ""Predict the evolutionary rate for a specific species for a given timeframe."", ""parameters"": {""species"": {""description"": ""The species that the evolution rate will be predicted for."", ""type"": ""str"", ""default"": ""Darwin""}, ""years"": {""description"": ""Number of years for the prediction."", ""type"": ""int"", ""default"": ""Darwin""}, ""model"": {""description"": ""The model used to make the prediction, options: 'Darwin', 'Lamarck', default is 'Darwin'."", ""type"": ""str""}}}]"
289,43505,"Simulate a query to the 'users' table with conditions: {'age': {'>': 25}, 'gender': 'female'} and {'occupation': 'engineer'}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": {"">"": 25}, ""gender"": ""female""}, {""occupation"": ""engineer""}]}}]","[{""name"": ""whole_foods_order"", ""description"": ""Places an order at Whole Foods."", ""parameters"": {""store_location"": {""description"": ""The location of the Whole Foods store."", ""type"": ""str""}, ""item_list"": {""description"": ""A list of items to order."", ""type"": ""list""}, ""order_size"": {""description"": ""The size of the order. Allowed values: \""small\"", \""medium\"", or \""large\""."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""calculate_calorie_intake"", ""description"": ""Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals."", ""parameters"": {""weight_kg"": {""description"": ""Body weight in kilograms."", ""type"": ""float""}, ""height_cm"": {""description"": ""Height in centimeters."", ""type"": ""float""}, ""age"": {""description"": ""Age in years."", ""type"": ""int""}, ""sex"": {""description"": ""Biological sex, either 'male' or 'female'."", ""type"": ""str""}, ""activity_level"": {""description"": ""Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active)."", ""type"": ""int""}, ""goal"": {""description"": ""Fitness goal, either 'lose', 'maintain', or 'gain'."", ""type"": ""str""}}}]"
290,43641,Calculate the total cost of an order containing 5 packs of pens at $2.00 each and 7 notebooks at $3.50 each. Simulate querying a database table called 'office_supplies' with conditions {'category': 'stationery'} and {'quantity': {'$gte': 5}}.,"[{""name"": ""calculate_order_total"", ""arguments"": {""items"": [""pen"", ""notebook""], ""quantities"": [5, 7], ""prices"": [2.0, 3.5]}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""office_supplies"", ""conditions"": [{""category"": ""stationery""}, {""quantity"": {""$gte"": 5}}]}}]","[{""name"": ""calculate_order_total"", ""description"": ""Calculates the total cost of an order based on the items, quantities, and prices."", ""parameters"": {""items"": {""description"": ""A list of item names."", ""type"": ""List[str]""}, ""quantities"": {""description"": ""A list of corresponding quantities for each item."", ""type"": ""List[int]""}, ""prices"": {""description"": ""A list of corresponding prices for each item."", ""type"": ""List[float]""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
291,43661,"I want to simulate querying the 'users' table with conditions: {'age': {'$gt': 25}, 'country': 'USA'}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": {""$gt"": 25}}, {""country"": ""USA""}]}}]","[{""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
292,44182,"Query horse races ordered by date in ascending order, with the upper bound date of 2022-12-31, and the racecourse name as Cheltenham.","[{""name"": ""query_races"", ""arguments"": {""order_by_date"": ""asc"", ""date_to"": ""2022-12-31"", ""course"": ""Cheltenham""}}]","[{""name"": ""leaguelogoimage"", ""description"": ""Fetch the logo image for a specific Rugby league in PNG format using the given tournament ID and RapidAPI key."", ""parameters"": {""tournamentid"": {""description"": ""The unique tournament ID for which to retrieve the league logo image."", ""type"": ""int"", ""default"": 294}}}, {""name"": ""select_race_based_on_id"", ""description"": ""Fetches the details of a specific race using its ID from the F1 race schedule API."", ""parameters"": {""is_id"": {""description"": ""The ID of the race to fetch details for."", ""type"": ""str"", ""default"": ""6141c76615d27e0de553b9d7""}}}, {""name"": ""query_races"", ""description"": ""Queries horse races based on various filter criteria."", ""parameters"": {""order_by_date"": {""description"": ""Results ordered by date of the race, either \""asc\"" for ascending or \""desc\"" for descending."", ""type"": ""str, optional"", ""default"": """"}, ""date_to"": {""description"": ""Upper bound date for the races to be queried."", ""type"": ""str, optional"", ""default"": """"}, ""class_to"": {""description"": ""Maximum race class."", ""type"": ""int, optional"", ""default"": """"}, ""distance_to"": {""description"": ""Upper bound distance for the races to be queried."", ""type"": ""str, optional"", ""default"": """"}, ""distance_from"": {""description"": ""Lower bound distance for the races to be queried."", ""type"": ""str, optional"", ""default"": """"}, ""id_horse"": {""description"": ""Horse ID. If provided, the query searches for races where this horse has run."", ""type"": ""int, optional"", ""default"": """"}, ""course"": {""description"": ""Racecourse name (e.g., Cheltenham, Ascot, Newmarket)."", ""type"": ""str, optional"", ""default"": """"}, ""class_from"": {""description"": ""Minimum race class."", ""type"": ""int, optional"", ""default"": """"}, ""page"": {""description"": ""Page number for pagination."", ""type"": ""int, optional"", ""default"": """"}, ""date_from"": {""description"": ""Lower bound date for the races to be queried."", ""type"": ""str, optional"", ""default"": """"}, ""name"": {""description"": ""Minimum race class."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""leaguehometeamevents"", ""description"": ""Retrieves the last 5 home events for a specific league and season using the Baseball API."", ""parameters"": {""seasonid"": {""description"": ""The ID of the season for which to retrieve the home team events."", ""type"": ""int"", ""default"": 49349}, ""tournamentid"": {""description"": ""The unique ID of the tournament for which to retrieve the home team events."", ""type"": ""int"", ""default"": 19442}}}, {""name"": ""daily_match_list_scheduled"", ""description"": ""Fetches the list of scheduled daily matches for a given date."", ""parameters"": {""date"": {""description"": ""The date of the matches in `dd/MM/yyyy` format. The retrieval period is limited to \u00b17 days from the current date."", ""type"": ""str"", ""default"": ""29/01/2021""}}}]"
293,44396,"What are the auto-complete suggestions for the query 'bank' in the stock market? Furthermore, fetch the cash flow statement for JPMorgan Chase & Co.","[{""name"": ""market_auto_complete"", ""arguments"": {""query"": ""bank""}}, {""name"": ""cash_flow_statement"", ""arguments"": {""ticker"": ""JPM""}}]","[{""name"": ""market_auto_complete"", ""description"": ""Fetch auto-complete suggestions for stock market queries."", ""parameters"": {""query"": {""description"": ""The search query for which auto-complete suggestions are needed."", ""type"": ""str"", ""default"": ""nasdaq""}}}, {""name"": ""cash_flow_statement"", ""description"": ""Fetches the company cash flow statement by year, with data in thousands of dollars."", ""parameters"": {""ticker"": {""description"": ""The stock ticker symbol of the company."", ""type"": ""str"", ""default"": ""AAPL""}}}]"
294,44510,"Simulate a query on the 'customers' table with conditions {'join_date': '2022-01-01', 'country': 'USA'}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""customers"", ""conditions"": [{""join_date"": ""2022-01-01"", ""country"": ""USA""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""analyze_social_group_dynamics"", ""description"": ""Analyzes the social dynamics within a group based on the personality traits and group size."", ""parameters"": {""total"": {""description"": ""The total group size."", ""type"": ""int""}, ""extroverts"": {""description"": ""The number of extroverted members in the group."", ""type"": ""int""}, ""introverts"": {""description"": ""The number of introverted members in the group."", ""type"": ""int""}}}, {""name"": ""structural_analysis"", ""description"": ""Performs structural analysis on a building based on its ID, floor numbers, and analysis mode."", ""parameters"": {""building_id"": {""description"": ""The unique identifier of the building."", ""type"": ""str"", ""default"": ""static""}, ""floor_numbers"": {""description"": ""The list of floor numbers to be analyzed."", ""type"": ""List[int]"", ""default"": ""static""}, ""analysis_mode"": {""description"": ""The mode of analysis, either \""static\"" or \""dynamic\"". Defaults to \""static\""."", ""type"": ""str, optional""}}}, {""name"": ""predict_evolution_rate"", ""description"": ""Predict the evolutionary rate for a specific species for a given timeframe."", ""parameters"": {""species"": {""description"": ""The species that the evolution rate will be predicted for."", ""type"": ""str"", ""default"": ""Darwin""}, ""years"": {""description"": ""Number of years for the prediction."", ""type"": ""int"", ""default"": ""Darwin""}, ""model"": {""description"": ""The model used to make the prediction, options: 'Darwin', 'Lamarck', default is 'Darwin'."", ""type"": ""str""}}}]"
295,44727,"Scrape 20 links from https://www.example.com, including query parameters. Also, scrape 15 links from https://www.example2.com without query parameters.","[{""name"": ""scrape_links"", ""arguments"": {""url"": ""https://www.example.com"", ""maxlinks"": 20, ""includequery"": true}}, {""name"": ""scrape_links"", ""arguments"": {""url"": ""https://www.example2.com"", ""maxlinks"": 15, ""includequery"": false}}]","[{""name"": ""scrape_links"", ""description"": ""Scrapes a specified number of links from the provided URL using the Scrapey Link Scraper API."", ""parameters"": {""url"": {""description"": ""The target URL from which to scrape links."", ""type"": ""str"", ""default"": ""amazon.com""}, ""maxlinks"": {""description"": ""The maximum number of links to scrape. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}, ""includequery"": {""description"": ""Whether to include query parameters in the links. Defaults to None."", ""type"": ""bool, optional"", ""default"": ""true""}}}]"
296,44777,Simulate a query on the 'customers' table with the conditions that the customer's name is 'Jane' and their order total is greater than 1000.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""customers"", ""conditions"": [{""name"": ""Jane"", ""order_total"": {""$gt"": 1000}}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
297,44845,Search for related locations and suggestions based on the query 'New York' in English and USD currency.,"[{""name"": ""locations_v2_search_deprecated"", ""arguments"": {""query"": ""New York"", ""locale"": ""en_US"", ""currency"": ""USD""}}]","[{""name"": ""properties_get_facilities"", ""description"": ""Fetches the facilities of a property given its hotel ID."", ""parameters"": {""hotel_ids"": {""description"": ""The value of the hotel_id field from the properties/list API."", ""type"": ""int"", ""default"": ""1528418""}, ""languagecode"": {""description"": ""The language code for the response. Default is 'en-us'. Possible values include en, en-us, ar, bg, ca, cs, da, de, el, es, es-ar, et, fi, fr, he, hr, hu, id, is, it, ja, ko, lt, lv, ms, nl, no, pl, pt, pt-br, ro, ru, sk, sl, sr, sv, th, tl, tr, uk, vi, zh, zh-tw."", ""type"": ""str, optional"", ""default"": ""en-us""}}}, {""name"": ""locations_v2_search_deprecated"", ""description"": ""Searches for related locations and suggestions based on the provided query, locale, and currency."", ""parameters"": {""query"": {""description"": ""Name of the country, city, district, place, etc., to search for."", ""type"": ""str"", ""default"": ""new york""}, ""locale"": {""description"": ""The language code for the search results. Defaults to 'en_US'."", ""type"": ""str, optional"", ""default"": ""en_US""}, ""currency"": {""description"": ""The currency code for the search results. Defaults to 'USD'."", ""type"": ""str, optional"", ""default"": ""USD""}}}]"
298,44897,"Please search for businesses with the query 'clinic' in the 'premium' package, limit to 10 results. Also, do the same for 'gym' and 'spa'.","[{""name"": ""business_phone_search"", ""arguments"": {""limit"": ""10"", ""query"": ""clinic"", ""packages"": ""premium""}}, {""name"": ""business_phone_search"", ""arguments"": {""limit"": ""10"", ""query"": ""gym"", ""packages"": ""premium""}}, {""name"": ""business_phone_search"", ""arguments"": {""limit"": ""10"", ""query"": ""spa"", ""packages"": ""premium""}}]","[{""name"": ""dinotest"", ""description"": ""Tests the specified endpoint using the provided RapidAPI key and returns the response."", ""parameters"": {""num"": {""description"": ""The endpoint number to be tested."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""veiculo_tipo"", ""description"": ""Fetches vehicle brands for the specified type of vehicle from the Veiculos API."", ""parameters"": {""veiculo_tipo"": {""description"": ""The type of vehicle for which to fetch brands. Possible values are \""carros\"", \""motos\"", and \""caminhoes\""."", ""type"": ""str"", ""default"": ""carros""}}}, {""name"": ""business_phone_search"", ""description"": ""Search for relevant businesses in the Data Axle database based on the given parameters."", ""parameters"": {""limit"": {""description"": ""The maximum number of results to return."", ""type"": ""str"", ""default"": ""20""}, ""query"": {""description"": ""The search query for finding businesses."", ""type"": ""str"", ""default"": ""4162287300""}, ""packages"": {""description"": ""The specific data packages to include in the search."", ""type"": ""str"", ""default"": ""standard_v1""}}}, {""name"": ""get_all_kfc_locations_by_state_and_city"", ""description"": ""Retrieve KFC locations for a given state and city with pagination support."", ""parameters"": {""state"": {""description"": ""The state where KFC locations are being queried."", ""type"": ""str"", ""default"": ""CA""}, ""city"": {""description"": ""The city where KFC locations are being queried."", ""type"": ""str"", ""default"": ""San Jose""}, ""page"": {""description"": ""The page number for the results, with each page containing 10 results."", ""type"": ""int"", ""default"": ""0""}}}]"
299,45119,"Analyze the social dynamics of a group with 15 members, 7 extroverts, and 8 introverts, and simulate a query on the 'products' table with conditions, such as 'price > 100' and 'category = electronics'.","[{""name"": ""analyze_social_group_dynamics"", ""arguments"": {""total"": 15, ""extroverts"": 7, ""introverts"": 8}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""products"", ""conditions"": [{""price"": {""$gt"": 100}}, {""category"": ""electronics""}]}}]","[{""name"": ""analyze_social_group_dynamics"", ""description"": ""Analyzes the social dynamics within a group based on the personality traits and group size."", ""parameters"": {""total"": {""description"": ""The total group size."", ""type"": ""int""}, ""extroverts"": {""description"": ""The number of extroverted members in the group."", ""type"": ""int""}, ""introverts"": {""description"": ""The number of introverted members in the group."", ""type"": ""int""}}}, {""name"": ""structural_analysis"", ""description"": ""Performs structural analysis on a building based on its ID, floor numbers, and analysis mode."", ""parameters"": {""building_id"": {""description"": ""The unique identifier of the building."", ""type"": ""str"", ""default"": ""static""}, ""floor_numbers"": {""description"": ""The list of floor numbers to be analyzed."", ""type"": ""List[int]"", ""default"": ""static""}, ""analysis_mode"": {""description"": ""The mode of analysis, either \""static\"" or \""dynamic\"". Defaults to \""static\""."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_valid_ip_address"", ""description"": ""Checks if a string is a valid IP address (IPv4)."", ""parameters"": {""ip"": {""description"": ""The string to check."", ""type"": ""str""}}}]"
300,45151,Search for related locations and suggestions based on the query 'Paris' in French and Euro currency.,"[{""name"": ""locations_v2_search_deprecated"", ""arguments"": {""query"": ""Paris"", ""locale"": ""fr_FR"", ""currency"": ""EUR""}}]","[{""name"": ""properties_get_facilities"", ""description"": ""Fetches the facilities of a property given its hotel ID."", ""parameters"": {""hotel_ids"": {""description"": ""The value of the hotel_id field from the properties/list API."", ""type"": ""int"", ""default"": ""1528418""}, ""languagecode"": {""description"": ""The language code for the response. Default is 'en-us'. Possible values include en, en-us, ar, bg, ca, cs, da, de, el, es, es-ar, et, fi, fr, he, hr, hu, id, is, it, ja, ko, lt, lv, ms, nl, no, pl, pt, pt-br, ro, ru, sk, sl, sr, sv, th, tl, tr, uk, vi, zh, zh-tw."", ""type"": ""str, optional"", ""default"": ""en-us""}}}, {""name"": ""locations_v2_search_deprecated"", ""description"": ""Searches for related locations and suggestions based on the provided query, locale, and currency."", ""parameters"": {""query"": {""description"": ""Name of the country, city, district, place, etc., to search for."", ""type"": ""str"", ""default"": ""new york""}, ""locale"": {""description"": ""The language code for the search results. Defaults to 'en_US'."", ""type"": ""str, optional"", ""default"": ""en_US""}, ""currency"": {""description"": ""The currency code for the search results. Defaults to 'USD'."", ""type"": ""str, optional"", ""default"": ""USD""}}}]"
301,45192,"What are some auto-complete suggestions for the search query 'Apple Inc.' in the stock market, and what is the balance sheet data for the AAPL stock?","[{""name"": ""market_auto_complete"", ""arguments"": {""query"": ""Apple Inc.""}}, {""name"": ""stock_balance_sheet"", ""arguments"": {""symbol"": ""AAPL""}}]","[{""name"": ""market_auto_complete"", ""description"": ""Fetch auto-complete suggestions for stock market queries."", ""parameters"": {""query"": {""description"": ""The search query for which auto-complete suggestions are needed."", ""type"": ""str"", ""default"": ""nasdaq""}}}, {""name"": ""stock_balance_sheet"", ""description"": ""Retrieves the balance sheet data for a specified stock symbol using the Yahoo Finance API."", ""parameters"": {""symbol"": {""description"": ""The stock symbol for which to retrieve the balance sheet data."", ""type"": ""str"", ""default"": ""AAPL""}}}, {""name"": ""v3_auto_complete"", ""description"": ""Fetches auto-suggestions based on a given symbol or company name using the RapidAPI Fidelity Investments endpoint."", ""parameters"": {""q"": {""description"": ""Symbol or company name for which to fetch auto-suggestions."", ""type"": ""str"", ""default"": ""apple""}}}, {""name"": ""straddle"", ""description"": ""This function retrieves the straddle data for a given stock ticker from the RapidAPI stock and options trading data provider."", ""parameters"": {""ticker"": {""description"": ""The stock ticker symbol for which to retrieve straddle data."", ""type"": ""str"", ""default"": ""intc""}}}]"
302,45343,Search for information on Apple Inc.'s stock using 'AAPL' as the search query.,"[{""name"": ""search"", ""arguments"": {""q"": ""AAPL""}}]","[{""name"": ""get_all_social_spikes_by_coin_name"", ""description"": ""Retrieve social media spikes for a given coin name within the last 24 hours."", ""parameters"": {""coinname"": {""description"": ""The name of the cryptocurrency for which to retrieve social media spikes."", ""type"": ""str"", ""default"": ""Bitcoin""}}}, {""name"": ""get_global_stats"", ""description"": ""Fetches global statistics available on CoinRanking using the RapidAPI service."", ""parameters"": {""referencecurrencyuuid"": {""description"": ""UUID of the reference currency in which all the prices are calculated. Defaults to US Dollar UUID 'yhjMzLPhuIDl'."", ""type"": ""str"", ""default"": ""yhjMzLPhuIDl""}}}, {""name"": ""search"", ""description"": ""Performs a search for indexes, stocks, ETFs, cryptocurrencies, currencies, and more using the Joj Finance API."", ""parameters"": {""q"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": ""Airbnb""}, ""gl"": {""description"": ""The geographical location specifier. Defaults to 'US'."", ""type"": ""str, optional"", ""default"": ""US""}, ""hl"": {""description"": ""The language specifier. Defaults to 'en'."", ""type"": ""str, optional"", ""default"": ""en""}}}]"
303,45345,"Get comments for an idea post with the unique identifier '654321' in Spanish. Additionally, find auto-complete suggestions for the stock market query 'Tesla Motors'.","[{""name"": ""ideas_get_comments"", ""arguments"": {""uuid"": ""654321"", ""lang"": ""es""}}, {""name"": ""market_auto_complete"", ""arguments"": {""query"": ""Tesla Motors""}}]","[{""name"": ""ideas_get_comments"", ""description"": ""Fetches comments related to an idea post from the TradingView API."", ""parameters"": {""uuid"": {""description"": ""The unique identifier of the idea post obtained from the `.../ideas/list` endpoint."", ""type"": ""str"", ""default"": ""CRK6Iv51""}, ""lang"": {""description"": ""The language code for the comments. Defaults to 'en'."", ""type"": ""str, optional"", ""default"": ""en""}}}, {""name"": ""market_auto_complete"", ""description"": ""Fetch auto-complete suggestions for stock market queries."", ""parameters"": {""query"": {""description"": ""The search query for which auto-complete suggestions are needed."", ""type"": ""str"", ""default"": ""nasdaq""}}}]"
304,45365,"Can you simulate a query on the 'employees' table with the following conditions: { 'department': 'HR', 'position': 'manager' }?","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""employees"", ""conditions"": [{""department"": ""HR"", ""position"": ""manager""}]}}]","[{""name"": ""geocode_city"", ""description"": ""Retrieves the latitude and longitude coordinates of a given city using the Maps.co Geocoding API."", ""parameters"": {""city"": {""description"": ""The name of the city."", ""type"": ""str""}}}, {""name"": ""whole_foods_order"", ""description"": ""Places an order at Whole Foods."", ""parameters"": {""store_location"": {""description"": ""The location of the Whole Foods store."", ""type"": ""str""}, ""item_list"": {""description"": ""A list of items to order."", ""type"": ""list""}, ""order_size"": {""description"": ""The size of the order. Allowed values: \""small\"", \""medium\"", or \""large\""."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_holidays_by_year"", ""description"": ""Retrieves the list of public holidays for a given year and country using the Nager.Date API."", ""parameters"": {""year"": {""description"": ""The year for which to retrieve the holidays."", ""type"": ""int""}, ""country_code"": {""description"": ""The two-letter ISO 3166-1 alpha-2 country code."", ""type"": ""str""}}}]"
305,45427,"I need some help. Can you check the autocomplete API for the query '10001'? Also, what's the weather forecast for the next 5 days at coordinates 51.5074, -0.1278? Thanks!","[{""name"": ""search_autocomplete_api"", ""arguments"": {""q"": ""10001""}}, {""name"": ""daily_forecast_5_days"", ""arguments"": {""longitude"": ""-0.1278"", ""latitude"": ""51.5074""}}]","[{""name"": ""daily_forecast_5_days"", ""description"": ""Fetch a 5-day daily weather forecast for the specified geographic coordinates."", ""parameters"": {""longitude"": {""description"": ""The longitude of the location for which the forecast is to be retrieved."", ""type"": ""str"", ""default"": ""103.86""}, ""latitude"": {""description"": ""The latitude of the location for which the forecast is to be retrieved."", ""type"": ""str"", ""default"": ""1.28""}}}, {""name"": ""ocean_conditions_closest_to_latitude_longitude"", ""description"": ""Search for current and predicted ocean conditions closest to a specified latitude and longitude."", ""parameters"": {""latitude"": {""description"": ""The latitude coordinate of the location."", ""type"": ""int"", ""default"": ""52.8""}, ""longitude"": {""description"": ""The longitude coordinate of the location."", ""type"": ""int"", ""default"": ""-4.07""}}}, {""name"": ""search_autocomplete_api"", ""description"": ""Search or Autocomplete API returns matching cities and towns based on the query."", ""parameters"": {""q"": {""description"": ""Query parameter used to obtain matching locations. Supported formats include:"", ""type"": ""str"", ""default"": """"}}}, {""name"": ""list_of_cities_in_one_country"", ""description"": ""Fetches the list of cities in a specified country via the Weather Forecast API."", ""parameters"": {""lang"": {""description"": ""The language in which the city names should be returned. Defaults to 'en'. Supported languages include 'en', 'fr', 'pl', 'pt', 'es', 'it', 'gr', 'tr', 'ru', 'cn', 'cz'."", ""type"": ""str"", ""default"": ""en""}, ""country"": {""description"": ""The country code for which the cities should be listed. Defaults to 'UK'."", ""type"": ""str"", ""default"": ""UK""}}}]"
306,45432,List recipes authored by 'chefJohn' with a query filter for 'pasta' starting from index 20.,"[{""name"": ""recipes_by_author"", ""arguments"": {""profile_name"": ""chefJohn"", ""q"": ""pasta"", ""start"": 20}}]","[{""name"": ""reviews_list"", ""description"": ""Fetches a list of reviews and feedback from users using the Yummly API."", ""parameters"": {""offset"": {""description"": ""The number of items to skip before starting to collect the result set."", ""type"": ""int"", ""default"": ""0""}, ""globalid"": {""description"": ""The value of the globalId field returned in the feeds/list and feeds/search API."", ""type"": ""str"", ""default"": ""a8d6747a-bfaa-46a7-92fb-892e3f76b264""}, ""limit"": {""description"": ""The maximum number of items to return."", ""type"": ""int"", ""default"": ""20""}}}, {""name"": ""recipes_by_author"", ""description"": ""Fetches recipes by a given author profile from the Worldwide Recipes API."", ""parameters"": {""profile_name"": {""description"": ""The name of the author's profile to fetch recipes for."", ""type"": ""str"", ""default"": ""gonna-want-seconds""}, ""q"": {""description"": ""An optional query string to filter recipes."", ""type"": ""str, optional"", ""default"": """"}, ""start"": {""description"": ""The starting index for pagination (e.g., Page 1 = start: 0, Page 2 = start: 20)."", ""type"": ""int, optional"", ""default"": """"}}}, {""name"": ""salad_ingredient"", ""description"": ""Fetches a random salad recipe that includes the specified ingredient from the API."", ""parameters"": {""ingredient"": {""description"": ""The ingredient to be included in the salad recipe search."", ""type"": ""str"", ""default"": ""cucumbers""}}}, {""name"": ""icecream_ingredient"", ""description"": ""Fetches a random ice cream recipe that includes a specified ingredient."", ""parameters"": {""ingredient"": {""description"": ""The specific ingredient to include in the ice cream recipe search."", ""type"": ""str"", ""default"": ""blueberry""}}}]"
307,45457,"Scrape 5 links from https://www.example4.com and 7 links from https://www.example5.com, including query parameters.","[{""name"": ""scrape_links"", ""arguments"": {""url"": ""https://www.example4.com"", ""maxlinks"": 5, ""includequery"": true}}, {""name"": ""scrape_links"", ""arguments"": {""url"": ""https://www.example5.com"", ""maxlinks"": 7, ""includequery"": true}}]","[{""name"": ""scrape_links"", ""description"": ""Scrapes a specified number of links from the provided URL using the Scrapey Link Scraper API."", ""parameters"": {""url"": {""description"": ""The target URL from which to scrape links."", ""type"": ""str"", ""default"": ""amazon.com""}, ""maxlinks"": {""description"": ""The maximum number of links to scrape. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}, ""includequery"": {""description"": ""Whether to include query parameters in the links. Defaults to None."", ""type"": ""bool, optional"", ""default"": ""true""}}}]"
308,45771,Search for creators on Patreon using the query 'artist' and retrieve the results.,"[{""name"": ""search_for_creators"", ""arguments"": {""search_query"": ""artist""}}]","[{""name"": ""listoforders"", ""description"": ""Executes an HTTP GET request to the Ecombr marketplace API for seller orders with the provided parameters and returns the response."", ""parameters"": {""token"": {""description"": ""Authentication token for the Ecombr API."", ""type"": ""str"", ""default"": """"}, ""cache_control"": {""description"": ""Value for the Cache-Control header."", ""type"": ""str"", ""default"": ""no-cache""}, ""e_mail"": {""description"": ""Email address associated with the seller account."", ""type"": ""str"", ""default"": """"}, ""content_type"": {""description"": ""Value for the Content-Type header."", ""type"": ""str"", ""default"": ""application/json""}, ""secret"": {""description"": ""Secret key for additional authentication."", ""type"": ""str"", ""default"": """"}, ""status"": {""description"": ""Status of the orders to filter."", ""type"": ""str"", ""default"": """"}, ""action"": {""description"": ""The action to be performed on the orders."", ""type"": ""str"", ""default"": ""orders_list""}}}, {""name"": ""get_products_in_category"", ""description"": ""Fetches a list of products from a specified category in a store with pagination."", ""parameters"": {""skip"": {""description"": ""The number of items to skip before starting to collect the result set."", ""type"": ""int"", ""default"": """"}, ""limit"": {""description"": ""The number of items to return in the result set."", ""type"": ""int"", ""default"": """"}, ""category"": {""description"": ""The category from which to fetch products."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""search_for_creators"", ""description"": ""Search for creators on Patreon using the given search query."", ""parameters"": {""search_query"": {""description"": ""The search term used to query creators on Patreon."", ""type"": ""str"", ""default"": ""adnr studios""}}}]"
309,45937,What are the auto-complete suggestions for the stock market query 'Google' and 'Amazon'?,"[{""name"": ""market_auto_complete"", ""arguments"": {""query"": ""Google""}}, {""name"": ""market_auto_complete"", ""arguments"": {""query"": ""Amazon""}}]","[{""name"": ""market_auto_complete"", ""description"": ""Fetch auto-complete suggestions for stock market queries."", ""parameters"": {""query"": {""description"": ""The search query for which auto-complete suggestions are needed."", ""type"": ""str"", ""default"": ""nasdaq""}}}]"
310,46009,Query the 'employees' table for employees who are older than 30 and live in New York.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""employees"", ""conditions"": [{""age"": {""$gt"": 30}}, {""city"": ""New York""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
311,46033,"Retrieve the product details for the product with ID 67890 and fetch the first 5 products from the 'Clothing' category in the store. Additionally, search for creators on Patreon using the search query 'music' and get the products from the 'Games' category using the Toolbench RapidAPI.","[{""name"": ""get_product"", ""arguments"": {""is_id"": 67890}}, {""name"": ""get_products_in_category"", ""arguments"": {""skip"": 0, ""limit"": 5, ""category"": ""Clothing""}}, {""name"": ""search_for_creators"", ""arguments"": {""search_query"": ""music""}}, {""name"": ""getproductbycategory"", ""arguments"": {""category"": ""Games""}}]","[{""name"": ""get_products_in_category"", ""description"": ""Fetches a list of products from a specified category in a store with pagination."", ""parameters"": {""skip"": {""description"": ""The number of items to skip before starting to collect the result set."", ""type"": ""int"", ""default"": """"}, ""limit"": {""description"": ""The number of items to return in the result set."", ""type"": ""int"", ""default"": """"}, ""category"": {""description"": ""The category from which to fetch products."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""getproductbycategory"", ""description"": ""Retrieves products from a given category using the Toolbench RapidAPI."", ""parameters"": {""category"": {""description"": ""The category of the product to search for."", ""type"": ""str"", ""default"": ""Phones""}}}, {""name"": ""get_product"", ""description"": ""Fetches product details from an API using the given product ID."", ""parameters"": {""is_id"": {""description"": ""The product ID for which to retrieve details."", ""type"": ""int"", ""default"": """"}}}, {""name"": ""search_for_creators"", ""description"": ""Search for creators on Patreon using the given search query."", ""parameters"": {""search_query"": {""description"": ""The search term used to query creators on Patreon."", ""type"": ""str"", ""default"": ""adnr studios""}}}]"
312,46094,"Could you search for a product on Tokopedia using the query 'headphones' and the action 'search'. Additionally, perform another search using the query 'camera' and the action 'search'. Lastly, repeat the search using the query 'smartwatch' and the action 'search'.","[{""name"": ""search_product"", ""arguments"": {""query"": ""headphones"", ""act"": ""search""}}, {""name"": ""search_product"", ""arguments"": {""query"": ""camera"", ""act"": ""search""}}, {""name"": ""search_product"", ""arguments"": {""query"": ""smartwatch"", ""act"": ""search""}}]","[{""name"": ""search_product"", ""description"": ""This function searches for a product using the Tokopedia API based on the given query and act parameters."", ""parameters"": {""query"": {""description"": ""The search query string for the product to be searched."", ""type"": ""str"", ""default"": ""Celana Jeans""}, ""act"": {""description"": ""The action parameter to specify the type of search."", ""type"": ""str"", ""default"": ""search""}}}]"
313,46151,"Find product offers with a minimum rating of 3, in new condition, and with free shipping. The search query should be 'headphones'.","[{""name"": ""search"", ""arguments"": {""q"": ""headphones"", ""min_rating"": ""3"", ""product_condition"": ""NEW"", ""free_shipping"": true}}]","[{""name"": ""aliexpress_item_description"", ""description"": ""Fetches the detailed description of an AliExpress item using its item ID."", ""parameters"": {""itemid"": {""description"": ""The ID of the AliExpress item."", ""type"": ""int"", ""default"": ""3256804591426248""}, ""locale"": {""description"": ""The locale for displaying titles and content in the selected language. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""search_by_keyword"", ""description"": ""Searches for products using a specified keyword on the 1688 platform through the Taobao-Tmall Product Detail API."", ""parameters"": {""keyword"": {""description"": ""The search keyword to look for products."", ""type"": ""str"", ""default"": ""\u6d77\u4e45\u6c34\u74f6""}, ""page"": {""description"": ""The page number for paginated results."", ""type"": ""int"", ""default"": ""1""}}}, {""name"": ""tmall_search_by_keyword"", ""description"": ""Searches for products on Tmall by keyword."", ""parameters"": {""page"": {""description"": ""The page number of the search results to retrieve."", ""type"": ""int"", ""default"": ""1""}, ""keyword"": {""description"": ""The keyword to search for products."", ""type"": ""str"", ""default"": ""\u6d77\u4e45\u6c34\u74f6""}}}, {""name"": ""search"", ""description"": ""Search for product offers using various filtering parameters such as rating, condition, shipping speed, price, and more. Supports both free-form queries and GTIN/EAN identifiers with infinite pagination."", ""parameters"": {""q"": {""description"": ""Free-form search query or a GTIN/EAN (e.g., '0194252014233')."", ""type"": ""str"", ""default"": ""Nike shoes""}, ""min_rating"": {""description"": ""Return products with rating greater than the specified value. Possible values: '1', '2', '3', '4'."", ""type"": ""str, optional"", ""default"": """"}, ""product_condition"": {""description"": ""Only return products with a specific condition. Possible values: 'NEW', 'USED', 'REFURBISHED'."", ""type"": ""str, optional"", ""default"": """"}, ""max_shipping_days"": {""description"": ""Only return product offers that offer shipping/delivery within a specified number of days."", ""type"": ""int, optional"", ""default"": """"}, ""store_id"": {""description"": ""Only return product offers from specific stores (comma-separated list of store IDs). Store IDs can be obtained from the Google Shopping URL after using the Seller filter."", ""type"": ""str, optional"", ""default"": """"}, ""on_sale"": {""description"": ""Only return product offers that are currently on sale. Default is None."", ""type"": ""bool, optional"", ""default"": """"}, ""free_returns"": {""description"": ""Only return product offers that offer free returns. Default is None."", ""type"": ""bool, optional"", ""default"": """"}, ""free_shipping"": {""description"": ""Only return product offers that offer free shipping/delivery. Default is None."", ""type"": ""bool, optional"", ""default"": """"}, ""max_price"": {""description"": ""Only return product offers with price lower than a certain value."", ""type"": ""int, optional"", ""default"": """"}, ""language"": {""description"": ""The language of the results. Default is 'en'. Valid values: see https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes."", ""type"": ""str, optional"", ""default"": ""en""}, ""sort_by"": {""description"": ""Sort product offers by best match, top rated, lowest or highest price. Possible values: 'BEST_MATCH', 'TOP_RATED', 'LOWEST_PRICE', 'HIGHEST_PRICE'."", ""type"": ""str, optional"", ""default"": """"}, ""country"": {""description"": ""Country code of the region/country to return offers for. Default is 'us'. Valid values: see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2."", ""type"": ""str, optional"", ""default"": ""us""}, ""min_price"": {""description"": ""Only return product offers with price greater than a certain value."", ""type"": ""int, optional"", ""default"": """"}, ""page"": {""description"": ""Results page to return. Default is 1."", ""type"": ""int, optional"", ""default"": """"}}}]"
314,46157,Search for products with the query 'headphones' and action 'search' on Tokopedia and verify the disposability of the email 'user@tempemail.net'.,"[{""name"": ""search_product"", ""arguments"": {""query"": ""headphones"", ""act"": ""search""}}, {""name"": ""emailvalidation"", ""arguments"": {""email"": ""user@tempemail.net""}}]","[{""name"": ""get_product"", ""description"": ""Fetches product details from an API using the given product ID."", ""parameters"": {""is_id"": {""description"": ""The product ID for which to retrieve details."", ""type"": ""int"", ""default"": """"}}}, {""name"": ""emailvalidation"", ""description"": ""Validates whether the given email address is disposable or not by using the Toolbench RapidAPI service."", ""parameters"": {""email"": {""description"": ""The email address to be validated."", ""type"": ""str"", ""default"": ""info@peekdomain.com""}}}, {""name"": ""search_product"", ""description"": ""This function searches for a product using the Tokopedia API based on the given query and act parameters."", ""parameters"": {""query"": {""description"": ""The search query string for the product to be searched."", ""type"": ""str"", ""default"": ""Celana Jeans""}, ""act"": {""description"": ""The action parameter to specify the type of search."", ""type"": ""str"", ""default"": ""search""}}}]"
315,46195,"Which hosts have run an EcoIndex analysis, ordered by the number of requests made, for the version v1, with a page size of 75, and also fetch an array of items based on the query string 'c'?","[{""name"": ""get_host_list_version_hosts_get"", ""arguments"": {""version"": ""v1"", ""size"": 75}}, {""name"": ""items"", ""arguments"": {""q"": ""c""}}]","[{""name"": ""get_host_list_version_hosts_get"", ""description"": ""Fetch a list of hosts that ran an EcoIndex analysis, ordered by the number of requests made."", ""parameters"": {""version"": {""description"": ""Engine version used to run the analysis (v0 or v1)."", ""type"": ""str"", ""default"": ""v1""}, ""q"": {""description"": ""Filter for partial host name. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""date_from"": {""description"": ""Start date for filtering elements (format: YYYY-MM-DD). Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""size"": {""description"": ""Number of elements per page. Defaults to 50."", ""type"": ""int, optional"", ""default"": 50}, ""date_to"": {""description"": ""End date for filtering elements (format: YYYY-MM-DD). Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""page"": {""description"": ""Page number to retrieve. Defaults to 1."", ""type"": ""int, optional"", ""default"": 1}}}, {""name"": ""getorderbyid"", ""description"": ""Fetch an order by its ID from a remote API."", ""parameters"": {""orderid"": {""description"": ""The ID of the order to fetch. Must be an integer between 1 and 10."", ""type"": ""int"", ""default"": 0}}}, {""name"": ""tsv6"", ""description"": ""Fetches the variable list within the specified category of a merged data subset along with the metadata."", ""parameters"": {""dataset"": {""description"": ""The dataset identifier."", ""type"": ""str"", ""default"": ""frim1""}, ""category"": {""description"": ""The category to filter the data."", ""type"": ""str"", ""default"": ""factor""}, ""subset"": {""description"": ""The data subset identifier."", ""type"": ""str"", ""default"": ""activome""}, ""format"": {""description"": ""The desired output format. Default is 'tsv'."", ""type"": ""str, optional"", ""default"": ""tsv""}}}, {""name"": ""items"", ""description"": ""Fetches an array of items based on a query string from the specified RapidAPI endpoint."", ""parameters"": {""q"": {""description"": ""The query string to filter items. Defaults to 'a'."", ""type"": ""str"", ""default"": ""a""}}}]"
316,46314,"What would be the simulated response if I query the 'fungi' table with conditions: {'type': 'mushrooms', 'color': {'$ne': 'red'}}? And what is the predicted evolution rate for 'morels' over the next 500 years using the Lamarck model?","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""fungi"", ""conditions"": [{""type"": ""mushrooms"", ""color"": {""$ne"": ""red""}}]}}, {""name"": ""predict_evolution_rate"", ""arguments"": {""species"": ""morels"", ""years"": 500, ""model"": ""Lamarck""}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""predict_evolution_rate"", ""description"": ""Predict the evolutionary rate for a specific species for a given timeframe."", ""parameters"": {""species"": {""description"": ""The species that the evolution rate will be predicted for."", ""type"": ""str"", ""default"": ""Darwin""}, ""years"": {""description"": ""Number of years for the prediction."", ""type"": ""int"", ""default"": ""Darwin""}, ""model"": {""description"": ""The model used to make the prediction, options: 'Darwin', 'Lamarck', default is 'Darwin'."", ""type"": ""str""}}}]"
317,46321,Show the third page of search results for the query 'laptop' on Amazon.jp.,"[{""name"": ""search"", ""arguments"": {""query"": ""laptop"", ""page"": ""3"", ""country"": ""JP""}}]","[{""name"": ""search"", ""description"": ""Search for product offers on Amazon with support for multiple filters and options."", ""parameters"": {""query"": {""description"": ""Search query. Supports both free-form text queries or a product ASIN."", ""type"": ""str"", ""default"": ""Phone""}, ""brand"": {""description"": ""Find products with a specific brand. Multiple brands can be specified as a comma-separated list. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""min_price"": {""description"": ""Only return product offers with a price greater than a specified minimum value. The value is in the currency of the selected country. Defaults to None."", ""type"": ""int, optional"", ""default"": """"}, ""max_price"": {""description"": ""Only return product offers with a price lower than a specified maximum value. The value is in the currency of the selected country. Defaults to None."", ""type"": ""int, optional"", ""default"": """"}, ""country"": {""description"": ""Sets the marketplace country, language, and currency. Allowed values are 'US', 'AU', 'BR', 'CA', 'CN', 'FR', 'DE', 'IN', 'IT', 'MX', 'NL', 'SG', 'ES', 'TR', 'AE', 'GB', 'JP'. Defaults to 'US'."", ""type"": ""str, optional"", ""default"": ""US""}, ""category_id"": {""description"": ""Find products in a specific category/department. Use the Product Category List endpoint to get a list of valid categories and their IDs for the specified country. Defaults to 'aps' (All Departments)."", ""type"": ""str, optional"", ""default"": ""aps""}, ""sort_by"": {""description"": ""Return the results in a specific sort order. Allowed values are 'RELEVANCE', 'LOWEST_PRICE', 'HIGHEST_PRICE', 'REVIEWS', 'NEWEST'. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""page"": {""description"": ""Results page to return. Defaults to '1'."", ""type"": ""str, optional"", ""default"": ""1""}}}]"
318,46424,"Search for streets or postcodes in the UK with the query 'main street' and a limit of 8 results. Get town information for the ZIP code 3000 in Switzerland, and find address suggestions for '1 Hacker Way'.","[{""name"": ""search"", ""arguments"": {""q"": ""main street"", ""limit"": 8}}, {""name"": ""getzip"", ""arguments"": {""zip"": 3000}}, {""name"": ""address_autosuggest"", ""arguments"": {""query"": ""1 Hacker Way""}}]","[{""name"": ""search"", ""description"": ""Searches for a street or post code based on a query string."", ""parameters"": {""q"": {""description"": ""The query string used to search for a street or post code."", ""type"": ""str"", ""default"": ""Downing Street London""}, ""limit"": {""description"": ""The maximum number of results to return. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}}}, {""name"": ""getzip"", ""description"": ""Fetch town information based on a provided ZIP code (Postleitzahl) using the RapidAPI."", ""parameters"": {""zip"": {""description"": ""The ZIP code for which to fetch town information."", ""type"": ""int"", ""default"": ""3052""}}}, {""name"": ""address_autosuggest"", ""description"": ""Fetches address suggestions based on a partial or complete address query using the Address Autosuggest API."", ""parameters"": {""query"": {""description"": ""The partial or complete text of the address to search for suggestions."", ""type"": ""str"", ""default"": ""Bridge""}}}]"
319,46465,"Find links related to 'space exploration' and search for images using the query 'satellites'. Also, search for images of 'dogs' using the Google Search JSON API.","[{""name"": ""links_finder"", ""arguments"": {""query"": ""space exploration""}}, {""name"": ""search"", ""arguments"": {""q"": ""satellites""}}, {""name"": ""search_image"", ""arguments"": {""q"": ""dogs""}}]","[{""name"": ""pagesjaunes"", ""description"": ""This function extracts data from the \""Pages Jaunes\"" (Yellow Pages) for a given location and keyword."", ""parameters"": {""pjpage"": {""description"": ""The page number to retrieve."", ""type"": ""int"", ""default"": ""1""}, ""pjlocation"": {""description"": ""The location to search within \""Pages Jaunes\""."", ""type"": ""str"", ""default"": ""Paris""}, ""pjkeyword"": {""description"": ""The keyword to search for in \""Pages Jaunes\""."", ""type"": ""str"", ""default"": ""Restaurant""}}}, {""name"": ""links_finder"", ""description"": ""Fetches relevant links based on a given query using the ExplorArc's Link Finder API."", ""parameters"": {""query"": {""description"": ""The search query to find relevant links. Defaults to 'roadmap'."", ""type"": ""str"", ""default"": ""roadmap""}}}, {""name"": ""search"", ""description"": ""Search for images using the Webit Image Search API."", ""parameters"": {""q"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": ""pizza""}, ""number"": {""description"": ""The number of search results to return. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}, ""search_filter"": {""description"": ""Additional search filters for more specific results. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""search_image"", ""description"": ""Performs an image search using the Google Search JSON API and returns a JSON response containing information about images that match the search query."", ""parameters"": {""q"": {""description"": ""The search query for finding images."", ""type"": ""str"", ""default"": ""Newyork City""}, ""num"": {""description"": ""Number of search results to return. Valid values are between 1 and 20, inclusive. Default is 10."", ""type"": ""int, optional"", ""default"": ""10""}, ""lr"": {""description"": ""Restricts the search to documents written in a particular language. Default is 'lang_en'."", ""type"": ""str, optional"", ""default"": ""lang_en""}, ""start"": {""description"": ""The index of the first result to return. Default is 0."", ""type"": ""int, optional"", ""default"": ""0""}, ""gl"": {""description"": ""A two-letter country code that boosts search results whose country of origin matches the parameter value. Default is 'US'."", ""type"": ""str, optional"", ""default"": ""US""}}}]"
320,46493,"Can you simulate a query for the 'fish' table with conditions: {'color': 'blue', 'weight': {'$gte': 1000}}? Also, what is the predicted evolution rate for 'sharks' over the next 10000 years using the Darwin model?","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""fish"", ""conditions"": [{""color"": ""blue"", ""weight"": {""$gte"": 1000}}]}}, {""name"": ""predict_evolution_rate"", ""arguments"": {""species"": ""sharks"", ""years"": 10000, ""model"": ""Darwin""}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""predict_evolution_rate"", ""description"": ""Predict the evolutionary rate for a specific species for a given timeframe."", ""parameters"": {""species"": {""description"": ""The species that the evolution rate will be predicted for."", ""type"": ""str"", ""default"": ""Darwin""}, ""years"": {""description"": ""Number of years for the prediction."", ""type"": ""int"", ""default"": ""Darwin""}, ""model"": {""description"": ""The model used to make the prediction, options: 'Darwin', 'Lamarck', default is 'Darwin'."", ""type"": ""str""}}}]"
321,46505,"Simulate a query on the 'customers' table with conditions: {'age': 25, 'country': 'USA'} and {'age': 30, 'country': 'Canada'}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""customers"", ""conditions"": [{""age"": 25, ""country"": ""USA""}, {""age"": 30, ""country"": ""Canada""}]}}]","[{""name"": ""whole_foods_order"", ""description"": ""Places an order at Whole Foods."", ""parameters"": {""store_location"": {""description"": ""The location of the Whole Foods store."", ""type"": ""str""}, ""item_list"": {""description"": ""A list of items to order."", ""type"": ""list""}, ""order_size"": {""description"": ""The size of the order. Allowed values: \""small\"", \""medium\"", or \""large\""."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
322,46610,Provide the balance sheet data for the stock symbol 'TSLA' and find auto-complete suggestions for the search query 'Microsoft' in the stock market.,"[{""name"": ""stock_balance_sheet"", ""arguments"": {""symbol"": ""TSLA""}}, {""name"": ""market_auto_complete"", ""arguments"": {""query"": ""Microsoft""}}]","[{""name"": ""market_auto_complete"", ""description"": ""Fetch auto-complete suggestions for stock market queries."", ""parameters"": {""query"": {""description"": ""The search query for which auto-complete suggestions are needed."", ""type"": ""str"", ""default"": ""nasdaq""}}}, {""name"": ""stock_balance_sheet"", ""description"": ""Retrieves the balance sheet data for a specified stock symbol using the Yahoo Finance API."", ""parameters"": {""symbol"": {""description"": ""The stock symbol for which to retrieve the balance sheet data."", ""type"": ""str"", ""default"": ""AAPL""}}}, {""name"": ""v3_auto_complete"", ""description"": ""Fetches auto-suggestions based on a given symbol or company name using the RapidAPI Fidelity Investments endpoint."", ""parameters"": {""q"": {""description"": ""Symbol or company name for which to fetch auto-suggestions."", ""type"": ""str"", ""default"": ""apple""}}}, {""name"": ""straddle"", ""description"": ""This function retrieves the straddle data for a given stock ticker from the RapidAPI stock and options trading data provider."", ""parameters"": {""ticker"": {""description"": ""The stock ticker symbol for which to retrieve straddle data."", ""type"": ""str"", ""default"": ""intc""}}}]"
323,46711,"Validate the given IP addresses '192.168.1.1' and '256.256.256.256' to check if they are valid IPv4 addresses. Also, simulate querying the 'users' table with conditions { 'ip_address': '192.168.1.1' } and { 'ip_address': '256.256.256.256' }.","[{""name"": ""is_valid_ip_address"", ""arguments"": {""ip"": ""192.168.1.1""}}, {""name"": ""is_valid_ip_address"", ""arguments"": {""ip"": ""256.256.256.256""}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""ip_address"": ""192.168.1.1""}]}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""ip_address"": ""256.256.256.256""}]}}]","[{""name"": ""is_valid_ip_address"", ""description"": ""Checks if a string is a valid IP address (IPv4)."", ""parameters"": {""ip"": {""description"": ""The string to check."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
324,46810,"Simulate a query to the 'orders' table with conditions {'status': 'pending', 'date': '2022-01-01'}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""orders"", ""conditions"": [{""status"": ""pending"", ""date"": ""2022-01-01""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""predict_forest_area"", ""description"": ""Predicts the change in forest area over a specified number of years."", ""parameters"": {""location"": {""description"": ""The geographic location for the prediction."", ""type"": ""str""}, ""num_years"": {""description"": ""The number of years into the future to make the prediction."", ""type"": ""int""}, ""include_humans"": {""description"": ""Whether to include the impact of human activities in the prediction. Defaults to False."", ""type"": ""bool, optional""}}}, {""name"": ""place_safeway_order"", ""description"": ""Order specified items from a Safeway location."", ""parameters"": {""location"": {""description"": ""The location of the Safeway store, e.g., 'Palo Alto, CA'."", ""type"": ""str""}, ""items"": {""description"": ""List of items to order."", ""type"": ""list""}, ""quantity"": {""description"": ""Quantity of each item in the order list."", ""type"": ""list""}}}, {""name"": ""get_holidays_by_year"", ""description"": ""Retrieves the list of public holidays for a given year and country using the Nager.Date API."", ""parameters"": {""year"": {""description"": ""The year for which to retrieve the holidays."", ""type"": ""int""}, ""country_code"": {""description"": ""The two-letter ISO 3166-1 alpha-2 country code."", ""type"": ""str""}}}, {""name"": ""assess_diabetes_risk"", ""description"": ""Assesses the risk of developing type 2 diabetes based on body mass index (BMI) and physical activity level."", ""parameters"": {""weight_lbs"": {""description"": ""Body weight in pounds."", ""type"": ""int""}, ""height_inches"": {""description"": ""Height in inches."", ""type"": ""int""}, ""activity"": {""description"": ""Physical activity level. Allowed values: \""sedentary\"", \""lightly active\"", \""moderately active\"", or \""very active\""."", ""type"": ""str""}}}]"
325,46951,"Fetch comments for an idea post with the unique identifier 'ghijkl' in French. Also, find auto-complete suggestions for the stock market query 'Microsoft Corporation'.","[{""name"": ""ideas_get_comments"", ""arguments"": {""uuid"": ""ghijkl"", ""lang"": ""fr""}}, {""name"": ""market_auto_complete"", ""arguments"": {""query"": ""Microsoft Corporation""}}]","[{""name"": ""ideas_get_comments"", ""description"": ""Fetches comments related to an idea post from the TradingView API."", ""parameters"": {""uuid"": {""description"": ""The unique identifier of the idea post obtained from the `.../ideas/list` endpoint."", ""type"": ""str"", ""default"": ""CRK6Iv51""}, ""lang"": {""description"": ""The language code for the comments. Defaults to 'en'."", ""type"": ""str, optional"", ""default"": ""en""}}}, {""name"": ""market_auto_complete"", ""description"": ""Fetch auto-complete suggestions for stock market queries."", ""parameters"": {""query"": {""description"": ""The search query for which auto-complete suggestions are needed."", ""type"": ""str"", ""default"": ""nasdaq""}}}]"
326,46968,"Discover innovative recipes using 'chicken' as a search query and retrieve the menu, location, and ratings data for The Spice Room restaurant in San Francisco.","[{""name"": ""go"", ""arguments"": {""q"": ""chicken""}}, {""name"": ""fetch_restaurant_information"", ""arguments"": {""query"": ""The Spice Room San Francisco""}}]","[{""name"": ""fetch_restaurant_information"", ""description"": ""Fetches menu, location, and ratings data for a specific restaurant using the FoodieFetch API."", ""parameters"": {""query"": {""description"": ""The name of the restaurant, preferably including the full name and city."", ""type"": ""str"", ""default"": ""grandamas cafe pune""}}}, {""name"": ""explore"", ""description"": ""Fetches a list of recipes from the Worldwide Recipes API with optional pagination support."", ""parameters"": {""start"": {""description"": ""The starting point for pagination. Page 1 corresponds to start=0, Page 2 to start=20, and so on."", ""type"": ""int, optional"", ""default"": """"}}}, {""name"": ""go"", ""description"": ""Retrieves creative recipes based on a search query using the Recipe64 RapidAPI."", ""parameters"": {""q"": {""description"": ""Search query for the recipes."", ""type"": ""str"", ""default"": ""taco""}}}]"
327,46986,"Extract data from 'Pages Jaunes' for the keyword 'bakeries' in the location 'Lyon'. Also, find links related to 'music festivals' and search for images using the query 'concerts'.","[{""name"": ""pagesjaunes"", ""arguments"": {""pjpage"": 1, ""pjlocation"": ""Lyon"", ""pjkeyword"": ""bakeries""}}, {""name"": ""links_finder"", ""arguments"": {""query"": ""music festivals""}}, {""name"": ""search"", ""arguments"": {""q"": ""concerts""}}]","[{""name"": ""pagesjaunes"", ""description"": ""This function extracts data from the \""Pages Jaunes\"" (Yellow Pages) for a given location and keyword."", ""parameters"": {""pjpage"": {""description"": ""The page number to retrieve."", ""type"": ""int"", ""default"": ""1""}, ""pjlocation"": {""description"": ""The location to search within \""Pages Jaunes\""."", ""type"": ""str"", ""default"": ""Paris""}, ""pjkeyword"": {""description"": ""The keyword to search for in \""Pages Jaunes\""."", ""type"": ""str"", ""default"": ""Restaurant""}}}, {""name"": ""links_finder"", ""description"": ""Fetches relevant links based on a given query using the ExplorArc's Link Finder API."", ""parameters"": {""query"": {""description"": ""The search query to find relevant links. Defaults to 'roadmap'."", ""type"": ""str"", ""default"": ""roadmap""}}}, {""name"": ""search"", ""description"": ""Search for images using the Webit Image Search API."", ""parameters"": {""q"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": ""pizza""}, ""number"": {""description"": ""The number of search results to return. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}, ""search_filter"": {""description"": ""Additional search filters for more specific results. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""search_image"", ""description"": ""Performs an image search using the Google Search JSON API and returns a JSON response containing information about images that match the search query."", ""parameters"": {""q"": {""description"": ""The search query for finding images."", ""type"": ""str"", ""default"": ""Newyork City""}, ""num"": {""description"": ""Number of search results to return. Valid values are between 1 and 20, inclusive. Default is 10."", ""type"": ""int, optional"", ""default"": ""10""}, ""lr"": {""description"": ""Restricts the search to documents written in a particular language. Default is 'lang_en'."", ""type"": ""str, optional"", ""default"": ""lang_en""}, ""start"": {""description"": ""The index of the first result to return. Default is 0."", ""type"": ""int, optional"", ""default"": ""0""}, ""gl"": {""description"": ""A two-letter country code that boosts search results whose country of origin matches the parameter value. Default is 'US'."", ""type"": ""str, optional"", ""default"": ""US""}}}]"
328,47086,"Simulate a database query on a table named 'employees' with conditions [{'position': 'manager'}, {'salary': {'$gt': 50000}}] and calculate the recommended daily calorie intake for a 30-year-old female with a weight of 60 kg, a height of 160 cm, an activity level of 2, and a goal of losing weight.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""employees"", ""conditions"": [{""position"": ""manager""}, {""salary"": {""$gt"": 50000}}]}}, {""name"": ""calculate_calorie_intake"", ""arguments"": {""weight_kg"": 60, ""height_cm"": 160, ""age"": 30, ""sex"": ""female"", ""activity_level"": 2, ""goal"": ""lose""}}]","[{""name"": ""get_ip_zipcode"", ""description"": ""Retrieves the ZIP code of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}, {""name"": ""calculate_calorie_intake"", ""description"": ""Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals."", ""parameters"": {""weight_kg"": {""description"": ""Body weight in kilograms."", ""type"": ""float""}, ""height_cm"": {""description"": ""Height in centimeters."", ""type"": ""float""}, ""age"": {""description"": ""Age in years."", ""type"": ""int""}, ""sex"": {""description"": ""Biological sex, either 'male' or 'female'."", ""type"": ""str""}, ""activity_level"": {""description"": ""Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active)."", ""type"": ""int""}, ""goal"": {""description"": ""Fitness goal, either 'lose', 'maintain', or 'gain'."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}]"
329,47139,"What are the auto-complete suggestions for the query 'tech' in the stock market? Furthermore, fetch the cash flow statement for Amazon Inc.","[{""name"": ""market_auto_complete"", ""arguments"": {""query"": ""tech""}}, {""name"": ""cash_flow_statement"", ""arguments"": {""ticker"": ""AMZN""}}]","[{""name"": ""market_auto_complete"", ""description"": ""Fetch auto-complete suggestions for stock market queries."", ""parameters"": {""query"": {""description"": ""The search query for which auto-complete suggestions are needed."", ""type"": ""str"", ""default"": ""nasdaq""}}}, {""name"": ""cash_flow_statement"", ""description"": ""Fetches the company cash flow statement by year, with data in thousands of dollars."", ""parameters"": {""ticker"": {""description"": ""The stock ticker symbol of the company."", ""type"": ""str"", ""default"": ""AAPL""}}}]"
330,47204,"Find product offers with a maximum price of $100, a minimum rating of 4, and with free returns. The search query should be 'bluetooth speaker'.","[{""name"": ""search"", ""arguments"": {""q"": ""bluetooth speaker"", ""max_price"": 100, ""min_rating"": ""4"", ""free_returns"": true}}]","[{""name"": ""aliexpress_item_description"", ""description"": ""Fetches the detailed description of an AliExpress item using its item ID."", ""parameters"": {""itemid"": {""description"": ""The ID of the AliExpress item."", ""type"": ""int"", ""default"": ""3256804591426248""}, ""locale"": {""description"": ""The locale for displaying titles and content in the selected language. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""search_by_keyword"", ""description"": ""Searches for products using a specified keyword on the 1688 platform through the Taobao-Tmall Product Detail API."", ""parameters"": {""keyword"": {""description"": ""The search keyword to look for products."", ""type"": ""str"", ""default"": ""\u6d77\u4e45\u6c34\u74f6""}, ""page"": {""description"": ""The page number for paginated results."", ""type"": ""int"", ""default"": ""1""}}}, {""name"": ""tmall_search_by_keyword"", ""description"": ""Searches for products on Tmall by keyword."", ""parameters"": {""page"": {""description"": ""The page number of the search results to retrieve."", ""type"": ""int"", ""default"": ""1""}, ""keyword"": {""description"": ""The keyword to search for products."", ""type"": ""str"", ""default"": ""\u6d77\u4e45\u6c34\u74f6""}}}, {""name"": ""search"", ""description"": ""Search for product offers using various filtering parameters such as rating, condition, shipping speed, price, and more. Supports both free-form queries and GTIN/EAN identifiers with infinite pagination."", ""parameters"": {""q"": {""description"": ""Free-form search query or a GTIN/EAN (e.g., '0194252014233')."", ""type"": ""str"", ""default"": ""Nike shoes""}, ""min_rating"": {""description"": ""Return products with rating greater than the specified value. Possible values: '1', '2', '3', '4'."", ""type"": ""str, optional"", ""default"": """"}, ""product_condition"": {""description"": ""Only return products with a specific condition. Possible values: 'NEW', 'USED', 'REFURBISHED'."", ""type"": ""str, optional"", ""default"": """"}, ""max_shipping_days"": {""description"": ""Only return product offers that offer shipping/delivery within a specified number of days."", ""type"": ""int, optional"", ""default"": """"}, ""store_id"": {""description"": ""Only return product offers from specific stores (comma-separated list of store IDs). Store IDs can be obtained from the Google Shopping URL after using the Seller filter."", ""type"": ""str, optional"", ""default"": """"}, ""on_sale"": {""description"": ""Only return product offers that are currently on sale. Default is None."", ""type"": ""bool, optional"", ""default"": """"}, ""free_returns"": {""description"": ""Only return product offers that offer free returns. Default is None."", ""type"": ""bool, optional"", ""default"": """"}, ""free_shipping"": {""description"": ""Only return product offers that offer free shipping/delivery. Default is None."", ""type"": ""bool, optional"", ""default"": """"}, ""max_price"": {""description"": ""Only return product offers with price lower than a certain value."", ""type"": ""int, optional"", ""default"": """"}, ""language"": {""description"": ""The language of the results. Default is 'en'. Valid values: see https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes."", ""type"": ""str, optional"", ""default"": ""en""}, ""sort_by"": {""description"": ""Sort product offers by best match, top rated, lowest or highest price. Possible values: 'BEST_MATCH', 'TOP_RATED', 'LOWEST_PRICE', 'HIGHEST_PRICE'."", ""type"": ""str, optional"", ""default"": """"}, ""country"": {""description"": ""Country code of the region/country to return offers for. Default is 'us'. Valid values: see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2."", ""type"": ""str, optional"", ""default"": ""us""}, ""min_price"": {""description"": ""Only return product offers with price greater than a certain value."", ""type"": ""int, optional"", ""default"": """"}, ""page"": {""description"": ""Results page to return. Default is 1."", ""type"": ""int, optional"", ""default"": """"}}}]"
331,47443,"What are the top categories for the website 'https://www.pinterest.com'? Moreover, retrieve the entity data for UID 654321 from the OFAC service. Furthermore, fetch location suggestions based on the query 'Boston' from the Bayut API.","[{""name"": ""categorize_website"", ""arguments"": {""url"": ""https://www.pinterest.com""}}, {""name"": ""get_data_entity_uid"", ""arguments"": {""uid"": 654321}}, {""name"": ""auto_complete"", ""arguments"": {""query"": ""Boston""}}]","[{""name"": ""get_data_entity_uid"", ""description"": ""Fetches an entity record from the OFAC service using a unique identifier (UID)."", ""parameters"": {""uid"": {""description"": ""The unique identifier of the entity to retrieve."", ""type"": ""int"", ""default"": ""7178""}}}, {""name"": ""categorize_website"", ""description"": ""Fetches and returns the top categories for a given website using the Website Categorization API."", ""parameters"": {""url"": {""description"": ""The URL of the website to be categorized."", ""type"": ""str"", ""default"": ""vercel.com""}}}, {""name"": ""auto_complete"", ""description"": ""Fetches location suggestions based on a given search term or phrase from the Bayut API."", ""parameters"": {""query"": {""description"": ""The term or phrase to search for location suggestions."", ""type"": ""str"", ""default"": ""abu dhabi""}, ""hitsperpage"": {""description"": ""The number of results to return per page. Default is 25."", ""type"": ""int, optional"", ""default"": ""25""}, ""lang"": {""description"": ""The language of the results. Options are 'en' or 'ar'. Default is 'en'."", ""type"": ""str, optional"", ""default"": ""en""}, ""page"": {""description"": ""The number of results to return per page. Default is 25."", ""type"": ""int, optional"", ""default"": ""0""}}}]"
332,47458,I want to know the location of the IP address '172.217.160.110' and also simulate a query to a database named 'employees' with conditions: 'salary' > 50000 and 'position' == 'Manager'.,"[{""name"": ""get_ip_location"", ""arguments"": {""ip"": ""172.217.160.110""}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""employees"", ""conditions"": [{""salary"": {""$gt"": 50000}}, {""position"": ""Manager""}]}}]","[{""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}]"
333,47586,"Perform a search query for 'station road' in the UK and limit the results to 6. Obtain town information for the ZIP code 1000 in Switzerland, and retrieve address suggestions for '343 Sansome Street'.","[{""name"": ""search"", ""arguments"": {""q"": ""station road"", ""limit"": 6}}, {""name"": ""getzip"", ""arguments"": {""zip"": 1000}}, {""name"": ""address_autosuggest"", ""arguments"": {""query"": ""343 Sansome Street""}}]","[{""name"": ""search"", ""description"": ""Searches for a street or post code based on a query string."", ""parameters"": {""q"": {""description"": ""The query string used to search for a street or post code."", ""type"": ""str"", ""default"": ""Downing Street London""}, ""limit"": {""description"": ""The maximum number of results to return. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}}}, {""name"": ""getzip"", ""description"": ""Fetch town information based on a provided ZIP code (Postleitzahl) using the RapidAPI."", ""parameters"": {""zip"": {""description"": ""The ZIP code for which to fetch town information."", ""type"": ""int"", ""default"": ""3052""}}}, {""name"": ""address_autosuggest"", ""description"": ""Fetches address suggestions based on a partial or complete address query using the Address Autosuggest API."", ""parameters"": {""query"": {""description"": ""The partial or complete text of the address to search for suggestions."", ""type"": ""str"", ""default"": ""Bridge""}}}]"
334,47611,"Simulate querying a 'products' table with conditions: {'price': {'>': 50}, 'category': 'electronics'} and {'stock': {'>': 10}}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""products"", ""conditions"": [{""price"": {"">"": 50}, ""category"": ""electronics""}, {""stock"": {"">"": 10}}]}}]","[{""name"": ""analyze_social_group_dynamics"", ""description"": ""Analyzes the social dynamics within a group based on the personality traits and group size."", ""parameters"": {""total"": {""description"": ""The total group size."", ""type"": ""int""}, ""extroverts"": {""description"": ""The number of extroverted members in the group."", ""type"": ""int""}, ""introverts"": {""description"": ""The number of introverted members in the group."", ""type"": ""int""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""is_valid_email"", ""description"": ""Checks if an email address is valid."", ""parameters"": {""email"": {""description"": ""The email address to validate."", ""type"": ""str""}}}, {""name"": ""is_hotel_available"", ""description"": ""Checks the availability of a hotel for a given date range."", ""parameters"": {""hotel"": {""description"": ""The name of the hotel."", ""type"": ""str""}, ""city"": {""description"": ""The city where the hotel is located."", ""type"": ""str""}, ""checkin"": {""description"": ""The check-in date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}, ""checkout"": {""description"": ""The check-out date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}}}]"
335,47614,"Can you simulate a query for the 'microorganisms' table with conditions: {'type': 'bacteria', 'size': {'$lt': 0.001}}? Also, what is the predicted evolution rate for 'E. coli' over the next 100 years using the Darwin model?","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""microorganisms"", ""conditions"": [{""type"": ""bacteria"", ""size"": {""$lt"": 0.001}}]}}, {""name"": ""predict_evolution_rate"", ""arguments"": {""species"": ""E. coli"", ""years"": 100, ""model"": ""Darwin""}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""predict_evolution_rate"", ""description"": ""Predict the evolutionary rate for a specific species for a given timeframe."", ""parameters"": {""species"": {""description"": ""The species that the evolution rate will be predicted for."", ""type"": ""str"", ""default"": ""Darwin""}, ""years"": {""description"": ""Number of years for the prediction."", ""type"": ""int"", ""default"": ""Darwin""}, ""model"": {""description"": ""The model used to make the prediction, options: 'Darwin', 'Lamarck', default is 'Darwin'."", ""type"": ""str""}}}]"
336,47760,What are the search results for the query 'pizza' at the coordinate point with latitude 40.7128 and longitude -74.0060?,"[{""name"": ""keyword_search_at_coordinate_point"", ""arguments"": {""lat"": ""40.7128"", ""lng"": ""-74.0060"", ""query"": ""pizza""}}]","[{""name"": ""get_zip_code_info"", ""description"": ""Fetches information about a given postal code in a specified country using the Zippopotamus API."", ""parameters"": {""country"": {""description"": ""The country code (e.g., 'us' for the United States)."", ""type"": ""str"", ""default"": ""us""}, ""postal_code"": {""description"": ""The postal code for which information is being fetched."", ""type"": ""str"", ""default"": ""90210""}}}, {""name"": ""get_country_details"", ""description"": ""Fetch detailed information about a country using its 2-letter country code."", ""parameters"": {""country_code"": {""description"": ""The 2-letter code representing the country."", ""type"": ""str"", ""default"": ""ph""}}}, {""name"": ""top_grossing_ipad_apps"", ""description"": ""Fetch a list of the top-grossing iPad apps from the RapidAPI App Store."", ""parameters"": {""country"": {""description"": ""The country code (e.g., 'us' for the United States). Default is 'us'."", ""type"": ""str"", ""default"": ""us""}, ""lang"": {""description"": ""The language code (e.g., 'en' for English). Default is 'en'."", ""type"": ""str"", ""default"": ""en""}, ""category"": {""description"": ""The category ID for the apps. Default is '6016'."", ""type"": ""str"", ""default"": ""6016""}, ""num"": {""description"": ""The number of top-grossing apps to retrieve. Default is 100."", ""type"": ""int"", ""default"": ""100""}}}, {""name"": ""keyword_search_at_coordinate_point"", ""description"": ""Fetch search results for a given query at a specified geographic coordinate point using the RapidAPI Local Rank Tracker service."", ""parameters"": {""lat"": {""description"": ""Latitude of the coordinate point."", ""type"": ""str"", ""default"": ""37.341759""}, ""lng"": {""description"": ""Longitude of the coordinate point."", ""type"": ""str"", ""default"": ""-121.938314""}, ""query"": {""description"": ""The search query or keyword."", ""type"": ""str"", ""default"": ""web design""}, ""x_user_agent"": {""description"": ""Device type for the search. Default is None."", ""type"": ""str, optional"", ""default"": """"}, ""zoom"": {""description"": ""Google Maps zoom level, ranging from 0 to 18. Default is '13'."", ""type"": ""str, optional"", ""default"": ""13""}}}]"
337,47863,"Get the first 20 products from the 'Furniture' category in the store and retrieve the product details for the product with ID 24680. Also, search for creators on Patreon using the search query 'photography' and retrieve products from the 'Toys' category using the Toolbench RapidAPI.","[{""name"": ""get_products_in_category"", ""arguments"": {""skip"": 0, ""limit"": 20, ""category"": ""Furniture""}}, {""name"": ""get_product"", ""arguments"": {""is_id"": 24680}}, {""name"": ""search_for_creators"", ""arguments"": {""search_query"": ""photography""}}, {""name"": ""getproductbycategory"", ""arguments"": {""category"": ""Toys""}}]","[{""name"": ""get_products_in_category"", ""description"": ""Fetches a list of products from a specified category in a store with pagination."", ""parameters"": {""skip"": {""description"": ""The number of items to skip before starting to collect the result set."", ""type"": ""int"", ""default"": """"}, ""limit"": {""description"": ""The number of items to return in the result set."", ""type"": ""int"", ""default"": """"}, ""category"": {""description"": ""The category from which to fetch products."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""getproductbycategory"", ""description"": ""Retrieves products from a given category using the Toolbench RapidAPI."", ""parameters"": {""category"": {""description"": ""The category of the product to search for."", ""type"": ""str"", ""default"": ""Phones""}}}, {""name"": ""get_product"", ""description"": ""Fetches product details from an API using the given product ID."", ""parameters"": {""is_id"": {""description"": ""The product ID for which to retrieve details."", ""type"": ""int"", ""default"": """"}}}, {""name"": ""search_for_creators"", ""description"": ""Search for creators on Patreon using the given search query."", ""parameters"": {""search_query"": {""description"": ""The search term used to query creators on Patreon."", ""type"": ""str"", ""default"": ""adnr studios""}}}]"
338,47910,"Perform a search query for 'college road' in the UK and limit the results to 7. Obtain town information for the ZIP code 6003 in Switzerland, and retrieve address suggestions for '77 Massachusetts Avenue'.","[{""name"": ""search"", ""arguments"": {""q"": ""college road"", ""limit"": 7}}, {""name"": ""getzip"", ""arguments"": {""zip"": 6003}}, {""name"": ""address_autosuggest"", ""arguments"": {""query"": ""77 Massachusetts Avenue""}}]","[{""name"": ""search"", ""description"": ""Searches for a street or post code based on a query string."", ""parameters"": {""q"": {""description"": ""The query string used to search for a street or post code."", ""type"": ""str"", ""default"": ""Downing Street London""}, ""limit"": {""description"": ""The maximum number of results to return. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}}}, {""name"": ""getzip"", ""description"": ""Fetch town information based on a provided ZIP code (Postleitzahl) using the RapidAPI."", ""parameters"": {""zip"": {""description"": ""The ZIP code for which to fetch town information."", ""type"": ""int"", ""default"": ""3052""}}}, {""name"": ""address_autosuggest"", ""description"": ""Fetches address suggestions based on a partial or complete address query using the Address Autosuggest API."", ""parameters"": {""query"": {""description"": ""The partial or complete text of the address to search for suggestions."", ""type"": ""str"", ""default"": ""Bridge""}}}]"
339,47912,"Scrape the top 7 links from https://www.reddit.com, including query parameters. Additionally, find a photo associated with the phone number +1-678-901-2345 and convert 1000000 milligrams to kilograms.","[{""name"": ""scrape_links"", ""arguments"": {""url"": ""https://www.reddit.com"", ""maxlinks"": 7, ""includequery"": true}}, {""name"": ""photo_from_given_number"", ""arguments"": {""phone"": ""+1-678-901-2345""}}, {""name"": ""convert_from_one_unit_to_another"", ""arguments"": {""to"": ""kg"", ""is_from"": ""mg"", ""value"": 1000000, ""measure"": ""mass""}}]","[{""name"": ""scrape_links"", ""description"": ""Scrapes a specified number of links from the provided URL using the Scrapey Link Scraper API."", ""parameters"": {""url"": {""description"": ""The target URL from which to scrape links."", ""type"": ""str"", ""default"": ""amazon.com""}, ""maxlinks"": {""description"": ""The maximum number of links to scrape. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}, ""includequery"": {""description"": ""Whether to include query parameters in the links. Defaults to None."", ""type"": ""bool, optional"", ""default"": ""true""}}}, {""name"": ""photo_from_given_number"", ""description"": ""Searches for a photo on the internet using the provided phone number and returns the photo in bytes if a match is found."", ""parameters"": {""phone"": {""description"": ""The phone number to search for."", ""type"": ""str"", ""default"": ""+79999999999""}}}, {""name"": ""convert_from_one_unit_to_another"", ""description"": ""Converts a given quantity from one unit to another using the RapidAPI measurement unit converter."", ""parameters"": {""to"": {""description"": ""The target unit for conversion. Can be specified in abbreviation, singular, or plural forms (e.g., 'km', 'kilometer', 'kilometers')."", ""type"": ""str"", ""default"": ""km""}, ""is_from"": {""description"": ""The source unit for conversion. Can be specified in abbreviation, singular, or plural forms (e.g., 'm', 'meter', 'meters')."", ""type"": ""str"", ""default"": ""m""}, ""value"": {""description"": ""The numeric value to be converted."", ""type"": ""int"", ""default"": ""1200""}, ""measure"": {""description"": ""The type of measurement (e.g., 'length', 'mass')."", ""type"": ""str"", ""default"": ""length""}}}]"
340,47999,Determine if the year 1900 is a leap year and query the 'employees' table for employees with a salary greater than 50000.,"[{""name"": ""is_leap_year"", ""arguments"": {""year"": 1900}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""employees"", ""conditions"": [{""field"": ""salary"", ""operator"": "">"", ""value"": 50000}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}]"
341,48107,"Simulate querying the 'employees' table with conditions, such as 'age > 30' and 'salary < 50000', and check if the IP address '192.168.1.1' is valid.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""employees"", ""conditions"": [{""age"": {""$gt"": 30}}, {""salary"": {""$lt"": 50000}}]}}, {""name"": ""is_valid_ip_address"", ""arguments"": {""ip"": ""192.168.1.1""}}]","[{""name"": ""analyze_social_group_dynamics"", ""description"": ""Analyzes the social dynamics within a group based on the personality traits and group size."", ""parameters"": {""total"": {""description"": ""The total group size."", ""type"": ""int""}, ""extroverts"": {""description"": ""The number of extroverted members in the group."", ""type"": ""int""}, ""introverts"": {""description"": ""The number of introverted members in the group."", ""type"": ""int""}}}, {""name"": ""structural_analysis"", ""description"": ""Performs structural analysis on a building based on its ID, floor numbers, and analysis mode."", ""parameters"": {""building_id"": {""description"": ""The unique identifier of the building."", ""type"": ""str"", ""default"": ""static""}, ""floor_numbers"": {""description"": ""The list of floor numbers to be analyzed."", ""type"": ""List[int]"", ""default"": ""static""}, ""analysis_mode"": {""description"": ""The mode of analysis, either \""static\"" or \""dynamic\"". Defaults to \""static\""."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_valid_ip_address"", ""description"": ""Checks if a string is a valid IP address (IPv4)."", ""parameters"": {""ip"": {""description"": ""The string to check."", ""type"": ""str""}}}]"
342,48136,What are the search results for the query 'coffee' at the coordinate point with latitude 37.7749 and longitude -122.4194?,"[{""name"": ""keyword_search_at_coordinate_point"", ""arguments"": {""lat"": ""37.7749"", ""lng"": ""-122.4194"", ""query"": ""coffee""}}]","[{""name"": ""get_zip_code_info"", ""description"": ""Fetches information about a given postal code in a specified country using the Zippopotamus API."", ""parameters"": {""country"": {""description"": ""The country code (e.g., 'us' for the United States)."", ""type"": ""str"", ""default"": ""us""}, ""postal_code"": {""description"": ""The postal code for which information is being fetched."", ""type"": ""str"", ""default"": ""90210""}}}, {""name"": ""get_country_details"", ""description"": ""Fetch detailed information about a country using its 2-letter country code."", ""parameters"": {""country_code"": {""description"": ""The 2-letter code representing the country."", ""type"": ""str"", ""default"": ""ph""}}}, {""name"": ""top_grossing_ipad_apps"", ""description"": ""Fetch a list of the top-grossing iPad apps from the RapidAPI App Store."", ""parameters"": {""country"": {""description"": ""The country code (e.g., 'us' for the United States). Default is 'us'."", ""type"": ""str"", ""default"": ""us""}, ""lang"": {""description"": ""The language code (e.g., 'en' for English). Default is 'en'."", ""type"": ""str"", ""default"": ""en""}, ""category"": {""description"": ""The category ID for the apps. Default is '6016'."", ""type"": ""str"", ""default"": ""6016""}, ""num"": {""description"": ""The number of top-grossing apps to retrieve. Default is 100."", ""type"": ""int"", ""default"": ""100""}}}, {""name"": ""keyword_search_at_coordinate_point"", ""description"": ""Fetch search results for a given query at a specified geographic coordinate point using the RapidAPI Local Rank Tracker service."", ""parameters"": {""lat"": {""description"": ""Latitude of the coordinate point."", ""type"": ""str"", ""default"": ""37.341759""}, ""lng"": {""description"": ""Longitude of the coordinate point."", ""type"": ""str"", ""default"": ""-121.938314""}, ""query"": {""description"": ""The search query or keyword."", ""type"": ""str"", ""default"": ""web design""}, ""x_user_agent"": {""description"": ""Device type for the search. Default is None."", ""type"": ""str, optional"", ""default"": """"}, ""zoom"": {""description"": ""Google Maps zoom level, ranging from 0 to 18. Default is '13'."", ""type"": ""str, optional"", ""default"": ""13""}}}]"
343,48233,Search for related locations and suggestions based on the query string 'New York'.,"[{""name"": ""locations_v3_search"", ""arguments"": {""q"": ""New York""}}]","[{""name"": ""amenities"", ""description"": ""Retrieves amenities IDs and descriptions from the Airbnb Listings API, returning up to 50 results starting from the specified offset."", ""parameters"": {""offset"": {""description"": ""The index to start retrieving the amenities from."", ""type"": ""int"", ""default"": ""0""}}}, {""name"": ""locations_v3_search"", ""description"": ""Search for related locations and suggestions based on the provided query string using the RapidAPI 'locations/v3/search' endpoint."", ""parameters"": {""q"": {""description"": ""The query string representing names of countries, cities, districts, places, etc."", ""type"": ""str"", ""default"": ""new york""}, ""langid"": {""description"": ""The language identifier. Default is 1033."", ""type"": ""int, optional"", ""default"": ""1033""}, ""siteid"": {""description"": ""The site identifier. Default is 300000001."", ""type"": ""int, optional"", ""default"": ""300000001""}, ""locale"": {""description"": ""The locale code. Default is 'en_US'."", ""type"": ""str, optional"", ""default"": ""en_US""}}}]"
344,48291,"Generate a QR code image for the URL 'https://www.example.com' and retrieve a QR code for the link 'http://www.python.org' using the RapidAPI service. Then, convert 100 meters to kilometers using the measurement unit converter API. Lastly, send a GET request to the Echo API with the first header as 'header1' and the second query parameter as 'query2'.","[{""name"": ""qr_code_image_generator"", ""arguments"": {""url"": ""https://www.example.com""}}, {""name"": ""get"", ""arguments"": {""link"": ""http://www.python.org""}}, {""name"": ""convert_from_one_unit_to_another"", ""arguments"": {""to"": ""kilometer"", ""is_from"": ""meter"", ""value"": 100, ""measure"": ""length""}}, {""name"": ""echo"", ""arguments"": {""header1"": ""header1"", ""query2"": ""query2""}}]","[{""name"": ""get"", ""description"": ""Retrieves a QR code as a JPEG file from the provided URL link using the RapidAPI service."", ""parameters"": {""link"": {""description"": ""The URL link to be converted into a QR code."", ""type"": ""str"", ""default"": ""https://rapidapi.com""}}}, {""name"": ""qr_code_image_generator"", ""description"": ""Generates a QR code image for a given URL using the RapidAPI QR code generation service."", ""parameters"": {""url"": {""description"": ""The URL to be encoded in the QR code. Defaults to 'www.google.com'."", ""type"": ""str"", ""default"": ""www.google.com""}}}, {""name"": ""convert_from_one_unit_to_another"", ""description"": ""Converts a given quantity from one unit to another using the RapidAPI measurement unit converter."", ""parameters"": {""to"": {""description"": ""The target unit for conversion. Can be specified in abbreviation, singular, or plural forms (e.g., 'km', 'kilometer', 'kilometers')."", ""type"": ""str"", ""default"": ""km""}, ""is_from"": {""description"": ""The source unit for conversion. Can be specified in abbreviation, singular, or plural forms (e.g., 'm', 'meter', 'meters')."", ""type"": ""str"", ""default"": ""m""}, ""value"": {""description"": ""The numeric value to be converted."", ""type"": ""int"", ""default"": ""1200""}, ""measure"": {""description"": ""The type of measurement (e.g., 'length', 'mass')."", ""type"": ""str"", ""default"": ""length""}}}, {""name"": ""echo"", ""description"": ""Sends a GET request to the Echo API with specific headers and query parameters."", ""parameters"": {""header1"": {""description"": ""The first header to include in the request. Defaults to '1'."", ""type"": ""str, optional"", ""default"": ""1""}, ""query2"": {""description"": ""The second query parameter to include in the request. Defaults to '2'."", ""type"": ""str, optional"", ""default"": ""2""}}}, {""name"": ""countpages"", ""description"": ""Counts the number of website pages indexed by Google for a given URL using the specified RapidAPI service."", ""parameters"": {""url"": {""description"": ""The URL of the website to check the number of indexed pages."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""checker"", ""description"": ""Checks the domain details for a given URL using the Toolbench RapidAPI."", ""parameters"": {""url"": {""description"": ""The URL of the domain to be checked."", ""type"": ""str"", ""default"": ""https://rapidapi.com/""}}}, {""name"": ""whois"", ""description"": ""Fetches WHOIS data for a given domain."", ""parameters"": {""q"": {""description"": ""The domain name to query for WHOIS information."", ""type"": ""str"", ""default"": ""google.com""}}}]"
345,48353,Simulate a query to find all the customers from 'New York' who ordered more than 100 items in the 'Orders' table.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""Orders"", ""conditions"": [{""column"": ""customer_location"", ""operator"": ""="", ""value"": ""New York""}, {""column"": ""order_quantity"", ""operator"": "">"", ""value"": 100}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
346,48423,"What would be the simulated response if I query the 'insects' table with conditions: {'wings': True, 'size': {'$lt': 0.5}}? And what is the predicted evolution rate for 'butterflies' over the next 50 years using the Lamarck model?","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""insects"", ""conditions"": [{""wings"": true, ""size"": {""$lt"": 0.5}}]}}, {""name"": ""predict_evolution_rate"", ""arguments"": {""species"": ""butterflies"", ""years"": 50, ""model"": ""Lamarck""}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""predict_evolution_rate"", ""description"": ""Predict the evolutionary rate for a specific species for a given timeframe."", ""parameters"": {""species"": {""description"": ""The species that the evolution rate will be predicted for."", ""type"": ""str"", ""default"": ""Darwin""}, ""years"": {""description"": ""Number of years for the prediction."", ""type"": ""int"", ""default"": ""Darwin""}, ""model"": {""description"": ""The model used to make the prediction, options: 'Darwin', 'Lamarck', default is 'Darwin'."", ""type"": ""str""}}}]"
347,48520,"Fetch the channel panels for the Twitch channel 'ludwig'. After that, search for animated stickers on Giphy with the search query 'music' and limit the results to 100.","[{""name"": ""get_channel_panels"", ""arguments"": {""channel"": ""ludwig""}}, {""name"": ""sticker_search"", ""arguments"": {""q"": ""music"", ""limit"": ""100""}}]","[{""name"": ""get_channel_panels"", ""description"": ""Fetches the channel panels for a specified Twitch channel using the Twitch API."", ""parameters"": {""channel"": {""description"": ""The name of the Twitch channel to retrieve panels for."", ""type"": ""str"", ""default"": ""xQc""}}}, {""name"": ""sticker_search"", ""description"": ""Searches for animated stickers on Giphy using a search query and optional parameters."", ""parameters"": {""q"": {""description"": ""Search query term or phrase."", ""type"": ""str"", ""default"": ""cat""}, ""limit"": {""description"": ""Number of results to return, with a maximum of 100. Defaults to 25."", ""type"": ""str, optional"", ""default"": """"}, ""offset"": {""description"": ""Results offset, defaults to 0."", ""type"": ""str, optional"", ""default"": """"}, ""rating"": {""description"": ""Limit results to those rated (y, g, pg, pg-13, or r)."", ""type"": ""str, optional"", ""default"": """"}}}]"
348,48591,Simulate querying the 'employees' table with conditions: department='HR' and salary>50000.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""employees"", ""conditions"": [{""department"": ""HR""}, {""salary"": {""$gt"": 50000}}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
349,48610,"Fetch reply comments for TikTok video with comment ID '123' and video ID '456'. Retrieve metadata for music track 'https://www.tiktok.com/music/Kiss-it-better-7090403288818584348'. List expired OnlyFans users with the given parameters. Lastly, search for followers of Instagram user '654321' with the query 'los angeles' and return the results.","[{""name"": ""get_reply_comment_by_id"", ""arguments"": {""cid"": ""123"", ""aweme_id"": ""456""}}, {""name"": ""music_metadata"", ""arguments"": {""music"": ""https://www.tiktok.com/music/Kiss-it-better-7090403288818584348""}}, {""name"": ""list"", ""arguments"": {""sort"": ""asc"", ""signend"": ""abc123"", ""signstart"": ""def456"", ""apptoken"": ""xyz789"", ""xbc"": ""123xyz"", ""timezone"": ""America/Los_Angeles"", ""useragent"": ""my_user_agent"", ""field"": ""username"", ""offset"": ""0"", ""sess"": ""987zyx"", ""auth_id"": ""456def""}}, {""name"": ""searchfollowers"", ""arguments"": {""user_id"": ""654321"", ""query"": ""los angeles""}}]","[{""name"": ""feeds_by_secuid"", ""description"": ""Fetches feeds from TikTok using a given secUid."", ""parameters"": {""schematype"": {""description"": ""The schema type for the feeds request."", ""type"": ""str"", ""default"": ""1""}, ""username"": {""description"": ""The username of the TikTok account."", ""type"": ""str"", ""default"": ""therock""}, ""secuid"": {""description"": ""The security UID of the TikTok account."", ""type"": ""str"", ""default"": ""MS4wLjABAAAAM3R2BtjzVT-uAtstkl2iugMzC6AtnpkojJbjiOdDDrdsTiTR75-8lyWJCY5VvDrZ""}}}, {""name"": ""music_metadata"", ""description"": ""Fetch metadata for a given music track from TikTok."", ""parameters"": {""music"": {""description"": ""The TikTok music URL. For example: 'https://www.tiktok.com/music/Streets-x-Kiss-it-better-7090403288818584347'."", ""type"": ""str"", ""default"": ""https://www.tiktok.com/music/Streets-x-Kiss-it-better-7090403288818584347""}, ""fresh"": {""description"": ""Set to 1 to force the API to return fresh data instead of cached data. Defaults to 0."", ""type"": ""int, optional"", ""default"": ""0""}}}, {""name"": ""list"", ""description"": ""Fetches a full list of expired user details from the OnlyFans API."", ""parameters"": {""sort"": {""description"": ""Sorting order for the results."", ""type"": ""str"", ""default"": """"}, ""signend"": {""description"": ""End signature for authentication."", ""type"": ""str"", ""default"": """"}, ""signstart"": {""description"": ""Start signature for authentication."", ""type"": ""str"", ""default"": """"}, ""apptoken"": {""description"": ""Application token for API access."", ""type"": ""str"", ""default"": """"}, ""xbc"": {""description"": ""XBC token for API access."", ""type"": ""str"", ""default"": """"}, ""timezone"": {""description"": ""Timezone used for the query."", ""type"": ""str"", ""default"": ""America/Los_Angeles""}, ""useragent"": {""description"": ""User agent string for the API request."", ""type"": ""str"", ""default"": """"}, ""field"": {""description"": ""Specific field to query for information."", ""type"": ""str"", ""default"": """"}, ""offset"": {""description"": ""Offset for pagination, must be divisible by 200."", ""type"": ""str"", ""default"": """"}, ""sess"": {""description"": ""Session identifier for the request."", ""type"": ""str"", ""default"": """"}, ""auth_id"": {""description"": ""Authentication ID for the user."", ""type"": ""str"", ""default"": ""729369""}}}, {""name"": ""get_reply_comment_by_id"", ""description"": ""Fetch a list of reply comments from TikTok for a given comment and video ID."", ""parameters"": {""cid"": {""description"": ""The ID of the comment for which to fetch reply comments."", ""type"": ""int"", ""default"": ""7178309240628658970""}, ""aweme_id"": {""description"": ""The ID of the TikTok video associated with the comment."", ""type"": ""int"", ""default"": ""7178094165614464282""}, ""count"": {""description"": ""The number of reply comments to retrieve, with a maximum value of 30. Default is 5."", ""type"": ""int, optional"", ""default"": ""5""}, ""cursor"": {""description"": ""The cursor position for paginating through the comments. Default is 0."", ""type"": ""int, optional"", ""default"": ""0""}}}, {""name"": ""searchfollowers"", ""description"": ""Search the followers of a specific Instagram user based on a query."", ""parameters"": {""user_id"": {""description"": ""The ID of the Instagram user whose followers will be searched."", ""type"": ""str"", ""default"": ""25025320""}, ""query"": {""description"": ""The search query to filter the followers."", ""type"": ""str"", ""default"": ""fake""}}}]"
350,48660,"Could you help me find out who is behind the email 'jim.doe@example.com'? I also want to look up some user information from Hacker News using the ID 'qwe456'. Lastly, I'd like to get some autocomplete suggestions for the query 'Brisbane real estate' from the Realty-in-AU API.","[{""name"": ""email"", ""arguments"": {""email"": ""jim.doe@example.com""}}, {""name"": ""user_by_id"", ""arguments"": {""is_id"": ""qwe456""}}, {""name"": ""auto_complete"", ""arguments"": {""query"": ""Brisbane real estate""}}]","[{""name"": ""email"", ""description"": ""Retrieve detailed information about a person using their email address via the RapidAPI enrichment tool."", ""parameters"": {""email"": {""description"": ""The email address of the person to be enriched."", ""type"": ""str"", ""default"": ""carynburns83@gmail.com""}}}, {""name"": ""user_by_id"", ""description"": ""Retrieves user information from the Hacker News API given a user ID."", ""parameters"": {""is_id"": {""description"": ""Case-sensitive user ID."", ""type"": ""str"", ""default"": ""wing328hk""}}}, {""name"": ""auto_complete"", ""description"": ""Get autocomplete suggestions for a given query using the Realty-in-AU API."", ""parameters"": {""query"": {""description"": ""Any term or phrase you are familiar with. It can be an address or a keyword for which you want autocomplete suggestions."", ""type"": ""str"", ""default"": ""sydney""}}}]"
351,48707,"Fetch Power BI communities data for page 3, and get related questions for the query 'What is Quantum Computing?'.","[{""name"": ""getcommunities"", ""arguments"": {""page"": 3}}, {""name"": ""get_related_questions"", ""arguments"": {""query"": ""What is Quantum Computing?""}}]","[{""name"": ""getbookbyid"", ""description"": ""Retrieve details of a specific book using its unique ID."", ""parameters"": {""is_id"": {""description"": ""The unique identifier for the book to retrieve."", ""type"": ""str"", ""default"": ""1""}}}, {""name"": ""getcommunities"", ""description"": ""Fetches Power BI communities data for a given page using the RapidAPI service."", ""parameters"": {""page"": {""description"": ""The page number of communities to retrieve."", ""type"": ""int"", ""default"": ""1""}}}, {""name"": ""get_related_questions"", ""description"": ""Fetches related questions from Google SERP \""People Also Ask\"" boxes based on a provided query."", ""parameters"": {""query"": {""description"": ""The search query for which to find related questions."", ""type"": ""str"", ""default"": ""prenatal vitamins""}, ""location"": {""description"": ""Specify the proxy location for the search. Defaults to 'us'. Supported countries include 'US', 'CA', 'IE', 'GB', 'FR', 'DE', 'SE', 'IN', 'JP', 'KR', 'SG', 'AU', 'BR'."", ""type"": ""str, optional"", ""default"": ""us""}, ""max_results"": {""description"": ""The maximum number of related questions to fetch. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}}}]"
352,48807,"Simulate querying a 'users' table with conditions: {'age': {'>': 18}, 'city': 'New York'} and {'age': {'<': 30}}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": {"">"": 18}, ""city"": ""New York""}, {""age"": {""<"": 30}}]}}]","[{""name"": ""analyze_social_group_dynamics"", ""description"": ""Analyzes the social dynamics within a group based on the personality traits and group size."", ""parameters"": {""total"": {""description"": ""The total group size."", ""type"": ""int""}, ""extroverts"": {""description"": ""The number of extroverted members in the group."", ""type"": ""int""}, ""introverts"": {""description"": ""The number of introverted members in the group."", ""type"": ""int""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""is_valid_email"", ""description"": ""Checks if an email address is valid."", ""parameters"": {""email"": {""description"": ""The email address to validate."", ""type"": ""str""}}}, {""name"": ""is_hotel_available"", ""description"": ""Checks the availability of a hotel for a given date range."", ""parameters"": {""hotel"": {""description"": ""The name of the hotel."", ""type"": ""str""}, ""city"": {""description"": ""The city where the hotel is located."", ""type"": ""str""}, ""checkin"": {""description"": ""The check-in date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}, ""checkout"": {""description"": ""The check-out date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}}}]"
353,48927,"Is the year 2400 a leap year? Furthermore, simulate a database query on a table called 'products' with conditions {'category': 'electronics', 'price': {'$lte': 1000}}.","[{""name"": ""is_leap_year"", ""arguments"": {""year"": 2400}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""products"", ""conditions"": [{""category"": ""electronics"", ""price"": {""$lte"": 1000}}]}}]","[{""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""is_hotel_available"", ""description"": ""Checks the availability of a hotel for a given date range."", ""parameters"": {""hotel"": {""description"": ""The name of the hotel."", ""type"": ""str""}, ""city"": {""description"": ""The city where the hotel is located."", ""type"": ""str""}, ""checkin"": {""description"": ""The check-in date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}, ""checkout"": {""description"": ""The check-out date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
354,48958,"Simulate a query on the 'customers' table with conditions: {'age': 30, 'city': 'New York'}","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""customers"", ""conditions"": [{""age"": 30, ""city"": ""New York""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""geocode_city"", ""description"": ""Retrieves the latitude and longitude coordinates of a given city using the Maps.co Geocoding API."", ""parameters"": {""city"": {""description"": ""The name of the city."", ""type"": ""str""}}}, {""name"": ""place_safeway_order"", ""description"": ""Order specified items from a Safeway location."", ""parameters"": {""location"": {""description"": ""The location of the Safeway store, e.g., 'Palo Alto, CA'."", ""type"": ""str""}, ""items"": {""description"": ""List of items to order."", ""type"": ""list""}, ""quantity"": {""description"": ""Quantity of each item in the order list."", ""type"": ""list""}}}, {""name"": ""analyze_social_group_dynamics"", ""description"": ""Analyzes the social dynamics within a group based on the personality traits and group size."", ""parameters"": {""total"": {""description"": ""The total group size."", ""type"": ""int""}, ""extroverts"": {""description"": ""The number of extroverted members in the group."", ""type"": ""int""}, ""introverts"": {""description"": ""The number of introverted members in the group."", ""type"": ""int""}}}, {""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}]"
355,48976,"Please search for a product on Tokopedia using the query 'headphones' and the action 'search'. Also, perform another search using the query 'camera' and the action 'search'. Lastly, repeat the search using the query 'smartwatch' and the action 'search'. For all three searches, could you use the custom API key 'stu901'?","[{""name"": ""search_product"", ""arguments"": {""query"": ""headphones"", ""act"": ""search""}}, {""name"": ""search_product"", ""arguments"": {""query"": ""camera"", ""act"": ""search""}}, {""name"": ""search_product"", ""arguments"": {""query"": ""smartwatch"", ""act"": ""search""}}]","[{""name"": ""search_product"", ""description"": ""This function searches for a product using the Tokopedia API based on the given query and act parameters."", ""parameters"": {""query"": {""description"": ""The search query string for the product to be searched."", ""type"": ""str"", ""default"": ""Celana Jeans""}, ""act"": {""description"": ""The action parameter to specify the type of search."", ""type"": ""str"", ""default"": ""search""}}}]"
356,49024,"Retrieve comments for an idea post identified by 'klmnoq' in Portuguese. Furthermore, find auto-complete suggestions for the stock market query 'Exxon Mobil Corporation'.","[{""name"": ""ideas_get_comments"", ""arguments"": {""uuid"": ""klmnoq"", ""lang"": ""pt""}}, {""name"": ""market_auto_complete"", ""arguments"": {""query"": ""Exxon Mobil Corporation""}}]","[{""name"": ""ideas_get_comments"", ""description"": ""Fetches comments related to an idea post from the TradingView API."", ""parameters"": {""uuid"": {""description"": ""The unique identifier of the idea post obtained from the `.../ideas/list` endpoint."", ""type"": ""str"", ""default"": ""CRK6Iv51""}, ""lang"": {""description"": ""The language code for the comments. Defaults to 'en'."", ""type"": ""str, optional"", ""default"": ""en""}}}, {""name"": ""market_auto_complete"", ""description"": ""Fetch auto-complete suggestions for stock market queries."", ""parameters"": {""query"": {""description"": ""The search query for which auto-complete suggestions are needed."", ""type"": ""str"", ""default"": ""nasdaq""}}}]"
357,49028,"What are the supported label brands for 'A4' format on the Ecardify platform? After that, perform a search query for companies related to 'renewable energy' and 'sustainability'. What are the search results for the first page?","[{""name"": ""label_template_brands"", ""arguments"": {""format"": ""A4""}}, {""name"": ""search"", ""arguments"": {""terms"": ""renewable energy,sustainability""}}]","[{""name"": ""loginuser"", ""description"": ""Logs in a user to the specified toolbench API by making a GET request to the login endpoint with the provided username and password."", ""parameters"": {""username"": {""description"": ""The username for login."", ""type"": ""str"", ""default"": """"}, ""password"": {""description"": ""The password for login in clear text."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""label_template_brands"", ""description"": ""Returns the list of blank label sheet brands supported by Ecardify on the given date."", ""parameters"": {""format"": {""description"": ""The paper size format, which can be either \""Letter\"" (8.5 inch by 11 inch) or \""A4\"" (210 mm by 297 mm)."", ""type"": ""str"", ""default"": ""a4""}}}, {""name"": ""search"", ""description"": ""This function performs a search query using the Market Intelligence by Automata API, returning information about related companies based on the provided search terms."", ""parameters"": {""terms"": {""description"": ""Search terms separated by commas, which are used to filter the companies. Example: 'cloud computing,enterprise,security'."", ""type"": ""str"", ""default"": """"}, ""page"": {""description"": ""Page number for paginated search results. Default is '0'. Example: '0', '1', '2', etc."", ""type"": ""str, optional"", ""default"": ""0""}}}]"
358,49054,Simulate a query on the 'inventory' table with the conditions that the quantity of an item is less than 10 and its category is 'books'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""inventory"", ""conditions"": [{""quantity"": {""$lt"": 10}, ""category"": ""books""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
359,49073,"Perform a search query on Bing for the term 'JavaScript frameworks' in English, localized for the UK, and return the results for page 3 with 20 results per page.","[{""name"": ""search"", ""arguments"": {""pageno"": 3, ""country"": ""UK"", ""lang"": ""en"", ""search"": ""JavaScript frameworks"", ""perpage"": 20}}]","[{""name"": ""search_wikipedia"", ""description"": ""Searches Wikipedia and returns the top K summarized information along with similar items. Additionally, images and coordinates with map links are provided when available."", ""parameters"": {""q"": {""description"": ""Query string to search for on Wikipedia."", ""type"": ""str"", ""default"": ""Messi""}, ""topk"": {""description"": ""Number of top summarized items to return. Defaults to 3. Must be greater than 0."", ""type"": ""int, optional"", ""default"": ""3""}}}, {""name"": ""search"", ""description"": ""Performs a search query on the specified search engine using given parameters and returns the response as JSON or text."", ""parameters"": {""pageno"": {""description"": ""The page number of the search results."", ""type"": ""int"", ""default"": ""1""}, ""country"": {""description"": ""The country code for the search localization."", ""type"": ""str"", ""default"": ""US""}, ""lang"": {""description"": ""The language code for the search localization."", ""type"": ""str"", ""default"": ""en""}, ""search"": {""description"": ""The search string to query."", ""type"": ""str"", ""default"": ""Hello""}, ""perpage"": {""description"": ""The number of results per page. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}}}, {""name"": ""get_d_tails_image"", ""description"": ""Fetch detailed information about a specific image using the Toolbench RapidAPI."", ""parameters"": {""image"": {""description"": ""The identifier or name of the image to retrieve details for."", ""type"": ""str"", ""default"": ""domaine-nc-api""}}}]"
360,49080,Autocomplete the brewery query 'Stone' and retrieve the rental data overview statistics for Berlin in EUR.,"[{""name"": ""autocomplete"", ""arguments"": {""query"": ""Stone""}}, {""name"": ""overview"", ""arguments"": {""location"": ""Berlin"", ""currency"": ""EUR""}}]","[{""name"": ""world_coordinate_to_income"", ""description"": ""Fetches per capita income data for a given set of geographic coordinates (longitude and latitude) using the provided API key."", ""parameters"": {""lon"": {""description"": ""Longitude of the geographic coordinate."", ""type"": ""int"", ""default"": ""0""}, ""lat"": {""description"": ""Latitude of the geographic coordinate."", ""type"": ""int"", ""default"": ""0""}}}, {""name"": ""estimated_salary"", ""description"": ""Fetch the estimated salary for a given job title within a specified radius around a particular location."", ""parameters"": {""location"": {""description"": ""The geographic location to search within for the salary estimation."", ""type"": ""str"", ""default"": ""New-York, NY, USA""}, ""job_title"": {""description"": ""The job title for which the salary estimation is to be fetched."", ""type"": ""str"", ""default"": ""NodeJS Developer""}, ""radius"": {""description"": ""The radius in kilometers within which to search from the provided location. Default is 100 km."", ""type"": ""int, optional"", ""default"": ""100""}}}, {""name"": ""autocomplete"", ""description"": ""Autocomplete a brewery query using the Open Brewery DB API."", ""parameters"": {""query"": {""description"": ""The query string to autocomplete."", ""type"": ""str"", ""default"": ""dog""}}}, {""name"": ""overview"", ""description"": ""Fetches overview statistics such as ADR, OCC, and Revenue for rental data at a given location."", ""parameters"": {""location"": {""description"": ""The location for which to retrieve the rental data overview."", ""type"": ""str"", ""default"": ""santa monica""}, ""currency"": {""description"": ""The currency in which to return the financial data. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}]"
361,49313,"Find links related to 'machine learning' and search for images using the query 'data science'. Also, search for images of 'flowers' using the Google Search JSON API.","[{""name"": ""links_finder"", ""arguments"": {""query"": ""machine learning""}}, {""name"": ""search"", ""arguments"": {""q"": ""data science""}}, {""name"": ""search_image"", ""arguments"": {""q"": ""flowers""}}]","[{""name"": ""pagesjaunes"", ""description"": ""This function extracts data from the \""Pages Jaunes\"" (Yellow Pages) for a given location and keyword."", ""parameters"": {""pjpage"": {""description"": ""The page number to retrieve."", ""type"": ""int"", ""default"": ""1""}, ""pjlocation"": {""description"": ""The location to search within \""Pages Jaunes\""."", ""type"": ""str"", ""default"": ""Paris""}, ""pjkeyword"": {""description"": ""The keyword to search for in \""Pages Jaunes\""."", ""type"": ""str"", ""default"": ""Restaurant""}}}, {""name"": ""links_finder"", ""description"": ""Fetches relevant links based on a given query using the ExplorArc's Link Finder API."", ""parameters"": {""query"": {""description"": ""The search query to find relevant links. Defaults to 'roadmap'."", ""type"": ""str"", ""default"": ""roadmap""}}}, {""name"": ""search"", ""description"": ""Search for images using the Webit Image Search API."", ""parameters"": {""q"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": ""pizza""}, ""number"": {""description"": ""The number of search results to return. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}, ""search_filter"": {""description"": ""Additional search filters for more specific results. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""search_image"", ""description"": ""Performs an image search using the Google Search JSON API and returns a JSON response containing information about images that match the search query."", ""parameters"": {""q"": {""description"": ""The search query for finding images."", ""type"": ""str"", ""default"": ""Newyork City""}, ""num"": {""description"": ""Number of search results to return. Valid values are between 1 and 20, inclusive. Default is 10."", ""type"": ""int, optional"", ""default"": ""10""}, ""lr"": {""description"": ""Restricts the search to documents written in a particular language. Default is 'lang_en'."", ""type"": ""str, optional"", ""default"": ""lang_en""}, ""start"": {""description"": ""The index of the first result to return. Default is 0."", ""type"": ""int, optional"", ""default"": ""0""}, ""gl"": {""description"": ""A two-letter country code that boosts search results whose country of origin matches the parameter value. Default is 'US'."", ""type"": ""str, optional"", ""default"": ""US""}}}]"
362,49494,"Check if '123.45.67.890' and '0.0.0.0' are valid IPv4 addresses. Also, simulate querying the 'clients' table with conditions { 'ip_address': '123.45.67.890' } and { 'ip_address': '0.0.0.0' }.","[{""name"": ""is_valid_ip_address"", ""arguments"": {""ip"": ""123.45.67.890""}}, {""name"": ""is_valid_ip_address"", ""arguments"": {""ip"": ""0.0.0.0""}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""clients"", ""conditions"": [{""ip_address"": ""123.45.67.890""}]}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""clients"", ""conditions"": [{""ip_address"": ""0.0.0.0""}]}}]","[{""name"": ""is_valid_ip_address"", ""description"": ""Checks if a string is a valid IP address (IPv4)."", ""parameters"": {""ip"": {""description"": ""The string to check."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
363,49681,Decode the VIN 'WAUZZZ8V5JA022477' and find query suggestions for 'Toyota Corolla 2020'. Ignore the API key argument.,"[{""name"": ""vin_decoder_basic"", ""arguments"": {""vin"": ""WAUZZZ8V5JA022477""}}, {""name"": ""suggestqueries"", ""arguments"": {""query"": ""Toyota Corolla 2020""}}]","[{""name"": ""vin_decoder_basic"", ""description"": ""Decodes basic information from a Vehicle Identification Number (VIN) using the RapidAPI VIN decoder service."", ""parameters"": {""vin"": {""description"": ""The Vehicle Identification Number (VIN) to be decoded. Must be 17 characters long."", ""type"": ""str"", ""default"": ""5YJ3E1EA6PF384836""}}}, {""name"": ""suggestqueries"", ""description"": ""Fetches suggestions based on the given query using the specified RapidAPI key."", ""parameters"": {""query"": {""description"": ""The search query for which suggestions are to be fetched."", ""type"": ""str"", ""default"": ""How to""}}}]"
364,49698,"Calculate the total cost of an order containing 2 water bottles at $1.50 each, 1 protein bar at $2.50 each, and 1 energy drink at $3.00 each. Simulate querying a database table called 'snacks' with conditions {'category': 'drinks'} and {'price': {'$gt': 1.00}}.","[{""name"": ""calculate_order_total"", ""arguments"": {""items"": [""water bottle"", ""protein bar"", ""energy drink""], ""quantities"": [2, 1, 1], ""prices"": [1.5, 2.5, 3.0]}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""snacks"", ""conditions"": [{""category"": ""drinks""}, {""price"": {""$gt"": 1.0}}]}}]","[{""name"": ""calculate_order_total"", ""description"": ""Calculates the total cost of an order based on the items, quantities, and prices."", ""parameters"": {""items"": {""description"": ""A list of item names."", ""type"": ""List[str]""}, ""quantities"": {""description"": ""A list of corresponding quantities for each item."", ""type"": ""List[int]""}, ""prices"": {""description"": ""A list of corresponding prices for each item."", ""type"": ""List[float]""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
365,49950,"Search for streets or postcodes in the UK with the query 'market street' and a limit of 4 results. Get town information for the ZIP code 5000 in Switzerland, and find address suggestions for '26110 Research Blvd'.","[{""name"": ""search"", ""arguments"": {""q"": ""market street"", ""limit"": 4}}, {""name"": ""getzip"", ""arguments"": {""zip"": 5000}}, {""name"": ""address_autosuggest"", ""arguments"": {""query"": ""26110 Research Blvd""}}]","[{""name"": ""search"", ""description"": ""Searches for a street or post code based on a query string."", ""parameters"": {""q"": {""description"": ""The query string used to search for a street or post code."", ""type"": ""str"", ""default"": ""Downing Street London""}, ""limit"": {""description"": ""The maximum number of results to return. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}}}, {""name"": ""getzip"", ""description"": ""Fetch town information based on a provided ZIP code (Postleitzahl) using the RapidAPI."", ""parameters"": {""zip"": {""description"": ""The ZIP code for which to fetch town information."", ""type"": ""int"", ""default"": ""3052""}}}, {""name"": ""address_autosuggest"", ""description"": ""Fetches address suggestions based on a partial or complete address query using the Address Autosuggest API."", ""parameters"": {""query"": {""description"": ""The partial or complete text of the address to search for suggestions."", ""type"": ""str"", ""default"": ""Bridge""}}}]"
366,50402,"Perform a search query for companies related to 'healthcare' and 'biotechnology', and return the results from page '3'. Then, update the data on the endpoint with the following information: info1='Seven', info2='Eight', info3='Nine'.","[{""name"": ""search"", ""arguments"": {""terms"": ""healthcare,biotechnology"", ""page"": ""3""}}, {""name"": ""update"", ""arguments"": {""info3"": ""Nine"", ""info1"": ""Seven"", ""info2"": ""Eight""}}]","[{""name"": ""update"", ""description"": ""Updates data on a specified endpoint using the provided information and RapidAPI key."", ""parameters"": {""info3"": {""description"": ""The third piece of information to be sent as a query parameter."", ""type"": ""str"", ""default"": ""333""}, ""info1"": {""description"": ""The first piece of information to be sent as a query parameter."", ""type"": ""str"", ""default"": ""111""}, ""info2"": {""description"": ""The second piece of information to be sent as a query parameter."", ""type"": ""str"", ""default"": ""222""}}}, {""name"": ""search"", ""description"": ""This function performs a search query using the Market Intelligence by Automata API, returning information about related companies based on the provided search terms."", ""parameters"": {""terms"": {""description"": ""Search terms separated by commas, which are used to filter the companies. Example: 'cloud computing,enterprise,security'."", ""type"": ""str"", ""default"": """"}, ""page"": {""description"": ""Page number for paginated search results. Default is '0'. Example: '0', '1', '2', etc."", ""type"": ""str, optional"", ""default"": ""0""}}}]"
367,50655,"What are the auto-complete suggestions for the query 'ener' in the stock market? Moreover, fetch the cash flow statement for Tesla Inc.","[{""name"": ""market_auto_complete"", ""arguments"": {""query"": ""ener""}}, {""name"": ""cash_flow_statement"", ""arguments"": {""ticker"": ""TSLA""}}]","[{""name"": ""market_auto_complete"", ""description"": ""Fetch auto-complete suggestions for stock market queries."", ""parameters"": {""query"": {""description"": ""The search query for which auto-complete suggestions are needed."", ""type"": ""str"", ""default"": ""nasdaq""}}}, {""name"": ""cash_flow_statement"", ""description"": ""Fetches the company cash flow statement by year, with data in thousands of dollars."", ""parameters"": {""ticker"": {""description"": ""The stock ticker symbol of the company."", ""type"": ""str"", ""default"": ""AAPL""}}}]"
368,50985,"Find product offers that are currently on sale, have a minimum rating of 4, and are in used condition. The search query should be 'DSLR camera'.","[{""name"": ""search"", ""arguments"": {""q"": ""DSLR camera"", ""on_sale"": true, ""min_rating"": ""4"", ""product_condition"": ""USED""}}]","[{""name"": ""aliexpress_item_description"", ""description"": ""Fetches the detailed description of an AliExpress item using its item ID."", ""parameters"": {""itemid"": {""description"": ""The ID of the AliExpress item."", ""type"": ""int"", ""default"": ""3256804591426248""}, ""locale"": {""description"": ""The locale for displaying titles and content in the selected language. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""search_by_keyword"", ""description"": ""Searches for products using a specified keyword on the 1688 platform through the Taobao-Tmall Product Detail API."", ""parameters"": {""keyword"": {""description"": ""The search keyword to look for products."", ""type"": ""str"", ""default"": ""\u6d77\u4e45\u6c34\u74f6""}, ""page"": {""description"": ""The page number for paginated results."", ""type"": ""int"", ""default"": ""1""}}}, {""name"": ""tmall_search_by_keyword"", ""description"": ""Searches for products on Tmall by keyword."", ""parameters"": {""page"": {""description"": ""The page number of the search results to retrieve."", ""type"": ""int"", ""default"": ""1""}, ""keyword"": {""description"": ""The keyword to search for products."", ""type"": ""str"", ""default"": ""\u6d77\u4e45\u6c34\u74f6""}}}, {""name"": ""search"", ""description"": ""Search for product offers using various filtering parameters such as rating, condition, shipping speed, price, and more. Supports both free-form queries and GTIN/EAN identifiers with infinite pagination."", ""parameters"": {""q"": {""description"": ""Free-form search query or a GTIN/EAN (e.g., '0194252014233')."", ""type"": ""str"", ""default"": ""Nike shoes""}, ""min_rating"": {""description"": ""Return products with rating greater than the specified value. Possible values: '1', '2', '3', '4'."", ""type"": ""str, optional"", ""default"": """"}, ""product_condition"": {""description"": ""Only return products with a specific condition. Possible values: 'NEW', 'USED', 'REFURBISHED'."", ""type"": ""str, optional"", ""default"": """"}, ""max_shipping_days"": {""description"": ""Only return product offers that offer shipping/delivery within a specified number of days."", ""type"": ""int, optional"", ""default"": """"}, ""store_id"": {""description"": ""Only return product offers from specific stores (comma-separated list of store IDs). Store IDs can be obtained from the Google Shopping URL after using the Seller filter."", ""type"": ""str, optional"", ""default"": """"}, ""on_sale"": {""description"": ""Only return product offers that are currently on sale. Default is None."", ""type"": ""bool, optional"", ""default"": """"}, ""free_returns"": {""description"": ""Only return product offers that offer free returns. Default is None."", ""type"": ""bool, optional"", ""default"": """"}, ""free_shipping"": {""description"": ""Only return product offers that offer free shipping/delivery. Default is None."", ""type"": ""bool, optional"", ""default"": """"}, ""max_price"": {""description"": ""Only return product offers with price lower than a certain value."", ""type"": ""int, optional"", ""default"": """"}, ""language"": {""description"": ""The language of the results. Default is 'en'. Valid values: see https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes."", ""type"": ""str, optional"", ""default"": ""en""}, ""sort_by"": {""description"": ""Sort product offers by best match, top rated, lowest or highest price. Possible values: 'BEST_MATCH', 'TOP_RATED', 'LOWEST_PRICE', 'HIGHEST_PRICE'."", ""type"": ""str, optional"", ""default"": """"}, ""country"": {""description"": ""Country code of the region/country to return offers for. Default is 'us'. Valid values: see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2."", ""type"": ""str, optional"", ""default"": ""us""}, ""min_price"": {""description"": ""Only return product offers with price greater than a certain value."", ""type"": ""int, optional"", ""default"": """"}, ""page"": {""description"": ""Results page to return. Default is 1."", ""type"": ""int, optional"", ""default"": """"}}}]"
369,51327,Find the top backlinks for the domain 'example.com' and retrieve the top 22 YouTube search results for the query 'data science tutorials'.,"[{""name"": ""top_backlinks"", ""arguments"": {""domain"": ""example.com""}}, {""name"": ""search_results"", ""arguments"": {""query"": ""data science tutorials""}}]","[{""name"": ""replies"", ""description"": ""Fetch replies for a given Instagram comment."", ""parameters"": {""after"": {""description"": ""The cursor value after which to fetch the replies. This can be obtained from the `edge_threaded_comments.page_info.end_cursor` field in the response from the comments endpoint."", ""type"": ""str"", ""default"": """"}, ""commentid"": {""description"": ""The unique identifier for the comment. This can be obtained from the `node.id` field in the response from the comments endpoint."", ""type"": ""str"", ""default"": ""17898559397187730""}}}, {""name"": ""find_zip_codes_by_city_and_district"", ""description"": ""Fetch the zip codes for a specified city and district in Poland."", ""parameters"": {""accept"": {""description"": ""Requested content type."", ""type"": ""str"", ""default"": ""application/json""}, ""city"": {""description"": ""The name of the city to search for zip codes."", ""type"": ""str"", ""default"": ""Wroc\u0142aw""}, ""district"": {""description"": ""The district within the specified city to search for zip codes."", ""type"": ""str"", ""default"": ""Opor\u00f3w""}, ""x_traceid"": {""description"": ""A trace ID that is copied to the API response header. Default is 'optional_abc123'."", ""type"": ""str, optional"", ""default"": ""optional_abc123""}}}, {""name"": ""top_backlinks"", ""description"": ""Fetches the list of top backlinks for a given domain using the Best Backlink Checker API."", ""parameters"": {""domain"": {""description"": ""The domain for which to retrieve the top backlinks."", ""type"": ""str"", ""default"": ""getecz.com""}}}, {""name"": ""search_results"", ""description"": ""Fetches the top 22 YouTube search results based on a provided query."", ""parameters"": {""query"": {""description"": ""The search query string to use for retrieving YouTube search results."", ""type"": ""str"", ""default"": ""interview preparation""}}}]"
370,51396,"Conduct a geocoding search for 'Taj Mahal, Agra' within a viewbox of '77.997619,27.071726,78.064977,27.135379' and include only the results from India. Then, query for the LDU boundary by H3 index 60825887352768767.","[{""name"": ""geocodingsearch"", ""arguments"": {""q"": ""Taj Mahal, Agra"", ""viewbox"": ""77.997619,27.071726,78.064977,27.135379"", ""countrycodes"": ""IN""}}, {""name"": ""query_for_ldu_boundary_by_h3index"", ""arguments"": {""h3ndex"": 60825887352768767}}]","[{""name"": ""geocodingsearch"", ""description"": ""Performs a forward geocoding search using a free-form query string and optional parameters to specify query filters and output format."", ""parameters"": {""q"": {""description"": ""Free-form query string for the geocoding search."", ""type"": ""str"", ""default"": ""New York City NY USA""}, ""countrycodes"": {""description"": ""Two-letter country code as defined in ISO 3166-1 alpha2 to restrict search to a specific country."", ""type"": ""str, optional"", ""default"": """"}, ""json_callback"": {""description"": ""Name of JSON callback function for JSONP calls; use this when the format is set to JSON."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_text"": {""description"": ""Include a textual representation of the polygon geometry in the output."", ""type"": ""str, optional"", ""default"": """"}, ""namedetails"": {""description"": ""Include detailed naming information in the output."", ""type"": ""str, optional"", ""default"": """"}, ""limit"": {""description"": ""Limit the number of search results."", ""type"": ""str, optional"", ""default"": """"}, ""viewbox"": {""description"": ""Specify a bounding box for the search area in the format 'x1,y1,x2,y2', where x is longitude and y is latitude."", ""type"": ""str, optional"", ""default"": """"}, ""format"": {""description"": ""Output format of the response (e.g., JSON)."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_geojson"": {""description"": ""Include GeoJSON representation of the polygon geometry in the output."", ""type"": ""str, optional"", ""default"": """"}, ""bounded"": {""description"": ""Use '1' to restrict the search area to the specified viewbox."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_svg"": {""description"": ""Include SVG representation of the polygon geometry in the output."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_kml"": {""description"": ""Include KML representation of the polygon geometry in the output."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_threshold"": {""description"": ""Simplification threshold for the polygon geometry."", ""type"": ""int, optional"", ""default"": ""0.0""}, ""accept_language"": {""description"": ""Set the query and response language using two-letter language codes (e.g., 'en' or 'es') or a combination of language and region code (e.g., 'en-GB' or 'es-AR'). Default is 'en'."", ""type"": ""str, optional"", ""default"": ""en""}, ""addressdetails"": {""description"": ""Include detailed address information in the output."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""query_for_ldu_boundary_by_h3index"", ""description"": ""Queries for a Local Delivery Unit (LDU) boundary by its H3 index."", ""parameters"": {""h3ndex"": {""description"": ""The H3 index used to query the LDU boundary."", ""type"": ""int"", ""default"": ""635775751926485631""}}}]"
371,51589,"What are the suggested locations for a search query 'Paris' with the language identifier set to 1036, site identifier set to 300000002, and locale set to 'fr_FR'?","[{""name"": ""locations_v3_search"", ""arguments"": {""q"": ""Paris"", ""langid"": 1036, ""siteid"": 300000002, ""locale"": ""fr_FR""}}]","[{""name"": ""locations_v3_search"", ""description"": ""Search for related locations and suggestions based on the provided query string using the RapidAPI 'locations/v3/search' endpoint."", ""parameters"": {""q"": {""description"": ""The query string representing names of countries, cities, districts, places, etc."", ""type"": ""str"", ""default"": ""new york""}, ""langid"": {""description"": ""The language identifier. Default is 1033."", ""type"": ""int, optional"", ""default"": ""1033""}, ""siteid"": {""description"": ""The site identifier. Default is 300000001."", ""type"": ""int, optional"", ""default"": ""300000001""}, ""locale"": {""description"": ""The locale code. Default is 'en_US'."", ""type"": ""str, optional"", ""default"": ""en_US""}}}]"
372,51732,"Place an order at the Whole Foods store in New York with a small order size for items: ['apples', 'bananas', 'bread']. Simulate a query to the database with conditions: [{'item': 'apples'}, {'item': 'bananas'}, {'item': 'bread'}].","[{""name"": ""whole_foods_order"", ""arguments"": {""store_location"": ""New York"", ""item_list"": [""apples"", ""bananas"", ""bread""], ""order_size"": ""small""}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""orders"", ""conditions"": [{""item"": ""apples""}, {""item"": ""bananas""}, {""item"": ""bread""}]}}]","[{""name"": ""whole_foods_order"", ""description"": ""Places an order at Whole Foods."", ""parameters"": {""store_location"": {""description"": ""The location of the Whole Foods store."", ""type"": ""str""}, ""item_list"": {""description"": ""A list of items to order."", ""type"": ""list""}, ""order_size"": {""description"": ""The size of the order. Allowed values: \""small\"", \""medium\"", or \""large\""."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""calculate_calorie_intake"", ""description"": ""Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals."", ""parameters"": {""weight_kg"": {""description"": ""Body weight in kilograms."", ""type"": ""float""}, ""height_cm"": {""description"": ""Height in centimeters."", ""type"": ""float""}, ""age"": {""description"": ""Age in years."", ""type"": ""int""}, ""sex"": {""description"": ""Biological sex, either 'male' or 'female'."", ""type"": ""str""}, ""activity_level"": {""description"": ""Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active)."", ""type"": ""int""}, ""goal"": {""description"": ""Fitness goal, either 'lose', 'maintain', or 'gain'."", ""type"": ""str""}}}]"
373,51765,"Simulate a query on the 'users' table with conditions {'age': 25, 'city': 'New York'} and {'age': 30, 'city': 'Los Angeles'}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": 25, ""city"": ""New York""}, {""age"": 30, ""city"": ""Los Angeles""}]}}]","[{""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_hotel_available"", ""description"": ""Checks the availability of a hotel for a given date range."", ""parameters"": {""hotel"": {""description"": ""The name of the hotel."", ""type"": ""str""}, ""city"": {""description"": ""The city where the hotel is located."", ""type"": ""str""}, ""checkin"": {""description"": ""The check-in date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}, ""checkout"": {""description"": ""The check-out date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}}}]"
374,51791,Query the 'customers' table for customers who have made a purchase within the last month and live in California.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""customers"", ""conditions"": [{""last_purchase"": {""$gt"": ""2022-01-01""}}, {""state"": ""California""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
375,51810,Search for videos with the query 'funny dogs' on page 2 and only include videos of '4K' quality.,"[{""name"": ""video_search"", ""arguments"": {""query"": ""funny dogs"", ""page"": 2, ""quality"": ""4K""}}]","[{""name"": ""test_app_deepfry_get"", ""description"": ""Sends a GET request to the deepfry endpoint of the RapidAPI Image Processing service with the specified URL and API key."", ""parameters"": {""url"": {""description"": ""The URL of the image that you want to deepfry. Defaults to 'https://dagbot-is.the-be.st/logo.png'."", ""type"": ""str"", ""default"": ""https://dagbot-is.the-be.st/logo.png""}}}, {""name"": ""gen_image"", ""description"": ""Generates an image based on specified parameters by making a request to the Thai Lottery Result Image API."", ""parameters"": {""date"": {""description"": ""The date for which to generate the image. Defaults to '01062564'."", ""type"": ""str"", ""default"": ""01062564""}, ""bgimg"": {""description"": ""The background image to use. Optional."", ""type"": ""str"", ""default"": """"}, ""rmber"": {""description"": ""A flag indicating whether certain elements (like numbers) should be removed. Optional."", ""type"": ""bool"", ""default"": ""1""}}}, {""name"": ""video_search"", ""description"": ""Search for videos based on the specified criteria and return the list of matching videos."", ""parameters"": {""query"": {""description"": ""The search term to be used for finding videos."", ""type"": ""str"", ""default"": ""amateur""}, ""site"": {""description"": ""The specific site to search for videos. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""timeout"": {""description"": ""Timeout duration in milliseconds for the request. Defaults to 5000."", ""type"": ""int, optional"", ""default"": ""5000""}, ""page"": {""description"": ""The page number for pagination. Defaults to 1."", ""type"": ""int, optional"", ""default"": ""1""}, ""filter"": {""description"": ""Filter criteria for the search results. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""quality"": {""description"": ""Minimum quality of the videos to be searched. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}]"
376,51925,Simulate a query on the 'products' table with the conditions that the product's price is less than or equal to 50 and its category is 'electronics'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""products"", ""conditions"": [{""price"": {""$lte"": 50}, ""category"": ""electronics""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
377,52102,Get search suggestions for the query 'Python programming' using the Cheap YouTube API.,"[{""name"": ""search_suggestions"", ""arguments"": {""q"": ""Python programming""}}]","[{""name"": ""get_user_posts"", ""description"": ""Fetches posts for a specified user from the 9gag API."", ""parameters"": {""username"": {""description"": ""The username of the 9gag user whose posts are to be fetched."", ""type"": ""str"", ""default"": ""kleido007""}, ""counter"": {""description"": ""The pagination counter for subsequent requests. Defaults to None for the first request."", ""type"": ""str, optional"", ""default"": """"}, ""after"": {""description"": ""The pagination marker for subsequent requests. Defaults to None for the first request."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""search_suggestions"", ""description"": ""Fetches search suggestions for a given query using the Cheap YouTube API through RapidAPI."", ""parameters"": {""q"": {""description"": ""The search query for which to fetch suggestions."", ""type"": ""str"", ""default"": ""crypto""}}}]"
378,52219,"Place an order at the Whole Foods store in Los Angeles with a large order size for items: ['grapes', 'oranges', 'milk']. Simulate a query to the database with conditions: [{'item': 'grapes'}, {'item': 'oranges'}, {'item': 'milk'}].","[{""name"": ""whole_foods_order"", ""arguments"": {""store_location"": ""Los Angeles"", ""item_list"": [""grapes"", ""oranges"", ""milk""], ""order_size"": ""large""}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""orders"", ""conditions"": [{""item"": ""grapes""}, {""item"": ""oranges""}, {""item"": ""milk""}]}}]","[{""name"": ""whole_foods_order"", ""description"": ""Places an order at Whole Foods."", ""parameters"": {""store_location"": {""description"": ""The location of the Whole Foods store."", ""type"": ""str""}, ""item_list"": {""description"": ""A list of items to order."", ""type"": ""list""}, ""order_size"": {""description"": ""The size of the order. Allowed values: \""small\"", \""medium\"", or \""large\""."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""calculate_calorie_intake"", ""description"": ""Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals."", ""parameters"": {""weight_kg"": {""description"": ""Body weight in kilograms."", ""type"": ""float""}, ""height_cm"": {""description"": ""Height in centimeters."", ""type"": ""float""}, ""age"": {""description"": ""Age in years."", ""type"": ""int""}, ""sex"": {""description"": ""Biological sex, either 'male' or 'female'."", ""type"": ""str""}, ""activity_level"": {""description"": ""Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active)."", ""type"": ""int""}, ""goal"": {""description"": ""Fitness goal, either 'lose', 'maintain', or 'gain'."", ""type"": ""str""}}}]"
379,52411,"Simulate a query on the 'employees' table with conditions: {'salary': 50000, 'department': 'IT'} and {'salary': 60000, 'department': 'HR'}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""employees"", ""conditions"": [{""salary"": 50000, ""department"": ""IT""}, {""salary"": 60000, ""department"": ""HR""}]}}]","[{""name"": ""whole_foods_order"", ""description"": ""Places an order at Whole Foods."", ""parameters"": {""store_location"": {""description"": ""The location of the Whole Foods store."", ""type"": ""str""}, ""item_list"": {""description"": ""A list of items to order."", ""type"": ""list""}, ""order_size"": {""description"": ""The size of the order. Allowed values: \""small\"", \""medium\"", or \""large\""."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
380,52913,"Simulate a query on the 'employees' table with conditions, such as 'age > 40' and 'salary > 70000', and check if the IP address '127.0.0.1' is valid.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""employees"", ""conditions"": [{""age"": {""$gt"": 40}}, {""salary"": {""$gt"": 70000}}]}}, {""name"": ""is_valid_ip_address"", ""arguments"": {""ip"": ""127.0.0.1""}}]","[{""name"": ""analyze_social_group_dynamics"", ""description"": ""Analyzes the social dynamics within a group based on the personality traits and group size."", ""parameters"": {""total"": {""description"": ""The total group size."", ""type"": ""int""}, ""extroverts"": {""description"": ""The number of extroverted members in the group."", ""type"": ""int""}, ""introverts"": {""description"": ""The number of introverted members in the group."", ""type"": ""int""}}}, {""name"": ""structural_analysis"", ""description"": ""Performs structural analysis on a building based on its ID, floor numbers, and analysis mode."", ""parameters"": {""building_id"": {""description"": ""The unique identifier of the building."", ""type"": ""str"", ""default"": ""static""}, ""floor_numbers"": {""description"": ""The list of floor numbers to be analyzed."", ""type"": ""List[int]"", ""default"": ""static""}, ""analysis_mode"": {""description"": ""The mode of analysis, either \""static\"" or \""dynamic\"". Defaults to \""static\""."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_valid_ip_address"", ""description"": ""Checks if a string is a valid IP address (IPv4)."", ""parameters"": {""ip"": {""description"": ""The string to check."", ""type"": ""str""}}}]"
381,52929,"Simulate a query on the 'employees' table with conditions {'age': 30, 'salary': 50000}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""employees"", ""conditions"": [{""age"": 30, ""salary"": 50000}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""analyze_social_group_dynamics"", ""description"": ""Analyzes the social dynamics within a group based on the personality traits and group size."", ""parameters"": {""total"": {""description"": ""The total group size."", ""type"": ""int""}, ""extroverts"": {""description"": ""The number of extroverted members in the group."", ""type"": ""int""}, ""introverts"": {""description"": ""The number of introverted members in the group."", ""type"": ""int""}}}, {""name"": ""structural_analysis"", ""description"": ""Performs structural analysis on a building based on its ID, floor numbers, and analysis mode."", ""parameters"": {""building_id"": {""description"": ""The unique identifier of the building."", ""type"": ""str"", ""default"": ""static""}, ""floor_numbers"": {""description"": ""The list of floor numbers to be analyzed."", ""type"": ""List[int]"", ""default"": ""static""}, ""analysis_mode"": {""description"": ""The mode of analysis, either \""static\"" or \""dynamic\"". Defaults to \""static\""."", ""type"": ""str, optional""}}}, {""name"": ""predict_evolution_rate"", ""description"": ""Predict the evolutionary rate for a specific species for a given timeframe."", ""parameters"": {""species"": {""description"": ""The species that the evolution rate will be predicted for."", ""type"": ""str"", ""default"": ""Darwin""}, ""years"": {""description"": ""Number of years for the prediction."", ""type"": ""int"", ""default"": ""Darwin""}, ""model"": {""description"": ""The model used to make the prediction, options: 'Darwin', 'Lamarck', default is 'Darwin'."", ""type"": ""str""}}}]"
382,52962,"Please search for a product on Tokopedia using the query 'smartphone' and the action 'search'. Also, repeat the search using the query 'tablet' and the action 'search'.","[{""name"": ""search_product"", ""arguments"": {""query"": ""smartphone"", ""act"": ""search""}}, {""name"": ""search_product"", ""arguments"": {""query"": ""tablet"", ""act"": ""search""}}]","[{""name"": ""search_product"", ""description"": ""This function searches for a product using the Tokopedia API based on the given query and act parameters."", ""parameters"": {""query"": {""description"": ""The search query string for the product to be searched."", ""type"": ""str"", ""default"": ""Celana Jeans""}, ""act"": {""description"": ""The action parameter to specify the type of search."", ""type"": ""str"", ""default"": ""search""}}}]"
383,53063,"Look for streets or postcodes in the UK that match the query 'church street' and limit the results to 1. Fetch town information for the ZIP code 2000 in Switzerland, and provide address suggestions for '555 California Street'.","[{""name"": ""search"", ""arguments"": {""q"": ""church street"", ""limit"": 1}}, {""name"": ""getzip"", ""arguments"": {""zip"": 2000}}, {""name"": ""address_autosuggest"", ""arguments"": {""query"": ""555 California Street""}}]","[{""name"": ""search"", ""description"": ""Searches for a street or post code based on a query string."", ""parameters"": {""q"": {""description"": ""The query string used to search for a street or post code."", ""type"": ""str"", ""default"": ""Downing Street London""}, ""limit"": {""description"": ""The maximum number of results to return. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}}}, {""name"": ""getzip"", ""description"": ""Fetch town information based on a provided ZIP code (Postleitzahl) using the RapidAPI."", ""parameters"": {""zip"": {""description"": ""The ZIP code for which to fetch town information."", ""type"": ""int"", ""default"": ""3052""}}}, {""name"": ""address_autosuggest"", ""description"": ""Fetches address suggestions based on a partial or complete address query using the Address Autosuggest API."", ""parameters"": {""query"": {""description"": ""The partial or complete text of the address to search for suggestions."", ""type"": ""str"", ""default"": ""Bridge""}}}]"
384,53098,"Show me all the KFC locations in both Los Angeles and San Diego, California, and tell me how to structure the query for multiple cities.","[{""name"": ""get_all_kfc_locations_by_state_and_city"", ""arguments"": {""state"": ""CA"", ""city"": ""Los Angeles"", ""page"": 1}}, {""name"": ""get_all_kfc_locations_by_state_and_city"", ""arguments"": {""state"": ""CA"", ""city"": ""San Diego"", ""page"": 1}}]","[{""name"": ""get_all_kfc_locations_by_state_and_city"", ""description"": ""Retrieve KFC locations for a given state and city with pagination support."", ""parameters"": {""state"": {""description"": ""The state where KFC locations are being queried."", ""type"": ""str"", ""default"": ""CA""}, ""city"": {""description"": ""The city where KFC locations are being queried."", ""type"": ""str"", ""default"": ""San Jose""}, ""page"": {""description"": ""The page number for the results, with each page containing 10 results."", ""type"": ""int"", ""default"": ""0""}}}]"
385,53104,"Check if the year 2008 is a leap year. Additionally, simulate a database query on a table called 'employees' with conditions {'age': 30, 'department': 'HR'}.","[{""name"": ""is_leap_year"", ""arguments"": {""year"": 2008}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""employees"", ""conditions"": [{""age"": 30, ""department"": ""HR""}]}}]","[{""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""is_hotel_available"", ""description"": ""Checks the availability of a hotel for a given date range."", ""parameters"": {""hotel"": {""description"": ""The name of the hotel."", ""type"": ""str""}, ""city"": {""description"": ""The city where the hotel is located."", ""type"": ""str""}, ""checkin"": {""description"": ""The check-in date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}, ""checkout"": {""description"": ""The check-out date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
386,53140,"Simulate a query for the 'employees' table with conditions: { 'age': { '$gte': 30 }, 'salary': { '$lte': 5000 } }.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""employees"", ""conditions"": [{""age"": {""$gte"": 30}}, {""salary"": {""$lte"": 5000}}]}}]","[{""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""analyze_social_group_dynamics"", ""description"": ""Analyzes the social dynamics within a group based on the personality traits and group size."", ""parameters"": {""total"": {""description"": ""The total group size."", ""type"": ""int""}, ""extroverts"": {""description"": ""The number of extroverted members in the group."", ""type"": ""int""}, ""introverts"": {""description"": ""The number of introverted members in the group."", ""type"": ""int""}}}, {""name"": ""predict_evolution_rate"", ""description"": ""Predict the evolutionary rate for a specific species for a given timeframe."", ""parameters"": {""species"": {""description"": ""The species that the evolution rate will be predicted for."", ""type"": ""str"", ""default"": ""Darwin""}, ""years"": {""description"": ""Number of years for the prediction."", ""type"": ""int"", ""default"": ""Darwin""}, ""model"": {""description"": ""The model used to make the prediction, options: 'Darwin', 'Lamarck', default is 'Darwin'."", ""type"": ""str""}}}, {""name"": ""calculate_calorie_intake"", ""description"": ""Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals."", ""parameters"": {""weight_kg"": {""description"": ""Body weight in kilograms."", ""type"": ""float""}, ""height_cm"": {""description"": ""Height in centimeters."", ""type"": ""float""}, ""age"": {""description"": ""Age in years."", ""type"": ""int""}, ""sex"": {""description"": ""Biological sex, either 'male' or 'female'."", ""type"": ""str""}, ""activity_level"": {""description"": ""Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active)."", ""type"": ""int""}, ""goal"": {""description"": ""Fitness goal, either 'lose', 'maintain', or 'gain'."", ""type"": ""str""}}}, {""name"": ""get_holidays_by_year"", ""description"": ""Retrieves the list of public holidays for a given year and country using the Nager.Date API."", ""parameters"": {""year"": {""description"": ""The year for which to retrieve the holidays."", ""type"": ""int""}, ""country_code"": {""description"": ""The two-letter ISO 3166-1 alpha-2 country code."", ""type"": ""str""}}}, {""name"": ""predict_forest_area"", ""description"": ""Predicts the change in forest area over a specified number of years."", ""parameters"": {""location"": {""description"": ""The geographic location for the prediction."", ""type"": ""str""}, ""num_years"": {""description"": ""The number of years into the future to make the prediction."", ""type"": ""int""}, ""include_humans"": {""description"": ""Whether to include the impact of human activities in the prediction. Defaults to False."", ""type"": ""bool, optional""}}}]"
387,53179,"What are the auto-complete suggestions for the stock market query 'Nvidia', 'AMD', and 'Qualcomm'?","[{""name"": ""market_auto_complete"", ""arguments"": {""query"": ""Nvidia""}}, {""name"": ""market_auto_complete"", ""arguments"": {""query"": ""AMD""}}, {""name"": ""market_auto_complete"", ""arguments"": {""query"": ""Qualcomm""}}]","[{""name"": ""market_auto_complete"", ""description"": ""Fetch auto-complete suggestions for stock market queries."", ""parameters"": {""query"": {""description"": ""The search query for which auto-complete suggestions are needed."", ""type"": ""str"", ""default"": ""nasdaq""}}}]"
388,53193,"Find EV charging stations near the coordinates 47.6062° N, 122.3321° W with a minimum power of 20 kW, a maximum power of 80 kW, and a query for 'ChargePoint' stations.","[{""name"": ""search_by_coordinates_point"", ""arguments"": {""lng"": ""-122.3321"", ""lat"": ""47.6062"", ""min_kw"": ""20"", ""max_kw"": ""80"", ""query"": ""ChargePoint""}}]","[{""name"": ""get_a_specific_employee_by_employee_id"", ""description"": ""Fetches details of a specific employee by their unique employee ID."", ""parameters"": {""is_id"": {""description"": ""The unique ID of the employee whose details are to be fetched."", ""type"": ""int"", ""default"": ""715505""}}}, {""name"": ""document"", ""description"": ""Fetches the authorized blob URI for a court document using the provided document ID and RapidAPI key."", ""parameters"": {""documentid"": {""description"": ""The ID of the document to fetch. Defaults to '41aac429-40dd-ea11-a813-000d3a79365a'."", ""type"": ""str, optional"", ""default"": ""41aac429-40dd-ea11-a813-000d3a79365a""}}}, {""name"": ""search_by_coordinates_point"", ""description"": ""Search for EV charging stations near specific geographic coordinates."", ""parameters"": {""lng"": {""description"": ""Longitude of the geographic coordinates point to search nearby."", ""type"": ""str"", ""default"": ""-121.925337""}, ""lat"": {""description"": ""Latitude of the geographic coordinates point to search nearby."", ""type"": ""str"", ""default"": ""37.359428""}, ""query"": {""description"": ""Keyword to filter the search results by a specific query, such as 'evgo', 'tesla', or 'chargepoint'."", ""type"": ""str, optional"", ""default"": """"}, ""min_kw"": {""description"": ""Minimum power in kilowatts to filter the availability of connectors."", ""type"": ""str, optional"", ""default"": """"}, ""max_kw"": {""description"": ""Maximum power in kilowatts to filter the availability of connectors."", ""type"": ""str, optional"", ""default"": """"}, ""limit"": {""description"": ""Maximum number of results to return. Allowed values range from 1 to 500."", ""type"": ""str, optional, default='20'"", ""default"": ""20""}, ""available"": {""description"": ""Filter to find EV charging stations with an available connector."", ""type"": ""str, optional"", ""default"": """"}, ""type"": {""description"": ""Filter to return EV charging stations with connectors of specified types, provided as a comma-delimited list, e.g., 'CHAdeMO', 'J1772,CCS'."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""getuserbyid"", ""description"": ""Fetches and returns user information by user ID from a specified API."", ""parameters"": {""is_id"": {""description"": ""The ID of the user to fetch information for."", ""type"": ""str"", ""default"": ""1""}}}]"
389,53206,"Is the year 2100 a leap year? Also, simulate a database query on a table called 'users' with conditions {'account_status': 'active', 'last_login': {'$gte': '2022-01-01'}}.","[{""name"": ""is_leap_year"", ""arguments"": {""year"": 2100}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""account_status"": ""active"", ""last_login"": {""$gte"": ""2022-01-01""}}]}}]","[{""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""is_hotel_available"", ""description"": ""Checks the availability of a hotel for a given date range."", ""parameters"": {""hotel"": {""description"": ""The name of the hotel."", ""type"": ""str""}, ""city"": {""description"": ""The city where the hotel is located."", ""type"": ""str""}, ""checkin"": {""description"": ""The check-in date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}, ""checkout"": {""description"": ""The check-out date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
390,53209,"Search for a product with the query 'headphones' and action 'search' on the Tokopedia API, and get the posts of a creator with ID 99999 from the Patreon API, starting from the second page of results.","[{""name"": ""search_product"", ""arguments"": {""query"": ""headphones"", ""act"": ""search""}}, {""name"": ""posts"", ""arguments"": {""creator_id"": 99999, ""cursor"": ""2""}}]","[{""name"": ""get_call"", ""description"": ""Fetches the API result using the given request ID."", ""parameters"": {""request_id"": {""description"": ""The unique identifier for the API request."", ""type"": ""str"", ""default"": ""76d1c748-51ed-435b-bcd8-3d9c9d3eb68a""}}}, {""name"": ""search_product"", ""description"": ""This function searches for a product using the Tokopedia API based on the given query and act parameters."", ""parameters"": {""query"": {""description"": ""The search query string for the product to be searched."", ""type"": ""str"", ""default"": ""Celana Jeans""}, ""act"": {""description"": ""The action parameter to specify the type of search."", ""type"": ""str"", ""default"": ""search""}}}, {""name"": ""posts"", ""description"": ""Fetches posts of a creator from the Patreon API using the given parameters."", ""parameters"": {""creator_id"": {""description"": ""The ID of the creator whose posts are to be fetched."", ""type"": ""int"", ""default"": ""2416483""}, ""cursor"": {""description"": ""The cursor for pagination to the next page of results. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""amount"": {""description"": ""The number of posts to return. Defaults to 10. Maximum is 500."", ""type"": ""int, optional"", ""default"": ""10""}}}]"
391,53238,"What are the trending topics related to 'quantum computing'? Also, find suggestions for the search query 'IBM quantum computers'.","[{""name"": ""search_suggestions"", ""arguments"": {""query"": ""quantum computing""}}, {""name"": ""search_suggestions"", ""arguments"": {""query"": ""IBM quantum computers""}}]","[{""name"": ""search_suggestions"", ""description"": ""Fetches search suggestions from the Twitter API using specified query parameters."", ""parameters"": {""query"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": ""elonmusk""}, ""twttr_session"": {""description"": ""The Twitter session ID for authenticated requests. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""twttr_proxy"": {""description"": ""The Twitter proxy server address. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""cursor"": {""description"": ""The cursor for paginated results. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}]"
392,53249,"Update the data on the endpoint with the following information: info1='dog', info2='cat', info3='mouse'. Then, perform a search query for companies related to 'pet care' and 'animal welfare', and return the results from page '0'.","[{""name"": ""update"", ""arguments"": {""info3"": ""mouse"", ""info1"": ""dog"", ""info2"": ""cat""}}, {""name"": ""search"", ""arguments"": {""terms"": ""pet care,animal welfare""}}]","[{""name"": ""update"", ""description"": ""Updates data on a specified endpoint using the provided information and RapidAPI key."", ""parameters"": {""info3"": {""description"": ""The third piece of information to be sent as a query parameter."", ""type"": ""str"", ""default"": ""333""}, ""info1"": {""description"": ""The first piece of information to be sent as a query parameter."", ""type"": ""str"", ""default"": ""111""}, ""info2"": {""description"": ""The second piece of information to be sent as a query parameter."", ""type"": ""str"", ""default"": ""222""}}}, {""name"": ""search"", ""description"": ""This function performs a search query using the Market Intelligence by Automata API, returning information about related companies based on the provided search terms."", ""parameters"": {""terms"": {""description"": ""Search terms separated by commas, which are used to filter the companies. Example: 'cloud computing,enterprise,security'."", ""type"": ""str"", ""default"": """"}, ""page"": {""description"": ""Page number for paginated search results. Default is '0'. Example: '0', '1', '2', etc."", ""type"": ""str, optional"", ""default"": ""0""}}}]"
393,53262,What is the latest news for the stock symbol 'MSFT:NASDAQ' and what are the market auto-complete suggestions for the query term 'technology stocks'?,"[{""name"": ""stock_news"", ""arguments"": {""symbol"": ""MSFT:NASDAQ""}}, {""name"": ""market_auto_complete"", ""arguments"": {""query"": ""technology stocks""}}]","[{""name"": ""ideas_get_view_count"", ""description"": ""Fetches the view count for a specific idea post from the Trading View API."", ""parameters"": {""uuid"": {""description"": ""The unique identifier for an idea, as returned by the /ideas/list endpoint."", ""type"": ""str"", ""default"": ""CRK6Iv51""}, ""lang"": {""description"": ""The language code for the response. Default is 'en'."", ""type"": ""str, optional"", ""default"": ""en""}}}, {""name"": ""list_of_available_currencies"", ""description"": ""Retrieve the list of available currencies from the API, with optional filters for fixed-rate and active currencies."", ""parameters"": {""fixedrate"": {""description"": ""Set to 'true' to return only currencies available on a fixed-rate flow. Defaults to 'true'."", ""type"": ""str, optional"", ""default"": ""true""}, ""active"": {""description"": ""Set to 'true' to return only active currencies. Defaults to 'true'."", ""type"": ""str, optional"", ""default"": ""true""}}}, {""name"": ""stock_news"", ""description"": ""Fetches the latest news related to a specific stock symbol/ticker."", ""parameters"": {""symbol"": {""description"": ""The stock symbol or ticker for which to fetch news. Examples include 'MSFT:NASDAQ', 'MSFT', '^DJI', and 'VTSAX'."", ""type"": ""str"", ""default"": ""AAPL:NASDAQ""}, ""language"": {""description"": ""The language in which to return the results, specified as a 2-letter ISO 639-1 code. Default is 'en'."", ""type"": ""str, optional"", ""default"": ""en""}}}, {""name"": ""market_auto_complete"", ""description"": ""Fetches market auto-complete suggestions based on a query term or phrase."", ""parameters"": {""query"": {""description"": ""The query term or phrase for which to get auto-complete suggestions."", ""type"": ""str"", ""default"": ""apple""}}}]"
394,53295,Query the 'flights' table for flights that are departing from London and arriving in Paris.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""flights"", ""conditions"": [{""departure_city"": ""London""}, {""arrival_city"": ""Paris""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
395,53310,"Please provide the US Presidential Election results for all states in the year 2016. Furthermore, can you find news articles for the search query 'artificial intelligence' from the last 14 days?","[{""name"": ""asoy"", ""arguments"": {""year"": 2016}}, {""name"": ""search"", ""arguments"": {""q"": ""artificial intelligence""}}]","[{""name"": ""actors_get_interesting_jobs"", ""description"": ""Retrieves interesting jobs for a specified actor or actress using the RapidAPI service."", ""parameters"": {""nconst"": {""description"": ""The unique identifier for the actor/actress, which should start with \""nm\"" (e.g., \""nm0001667\""). This can typically be found using the /actors/list-born-today or /actors/list-most-popular-celebs endpoints."", ""type"": ""str"", ""default"": ""nm0001667""}}}, {""name"": ""getprojectsbytopic"", ""description"": ""Fetches artificial intelligence projects based on the specified topic and page number."", ""parameters"": {""topic"": {""description"": ""The topic to filter AI projects."", ""type"": ""str"", ""default"": ""machine-learning""}, ""page"": {""description"": ""The page number of the results to fetch."", ""type"": ""int"", ""default"": ""1""}}}, {""name"": ""asoy"", ""description"": ""Fetches JSON results for All States, One Year (ASOY) for the specified US Presidential Election year."", ""parameters"": {""year"": {""description"": ""The election year to retrieve results for (e.g., 2008)."", ""type"": ""int"", ""default"": ""2000""}}}, {""name"": ""search"", ""description"": ""Searches across the entire news index from the last 14 days using the BizToc API."", ""parameters"": {""q"": {""description"": ""The search query string. All provided terms are considered required by the API."", ""type"": ""str"", ""default"": ""apple""}}}]"
396,53330,I'm looking for search suggestions on Twitter for the query 'artificial intelligence'. Can you help me with that?,"[{""name"": ""search_suggestions"", ""arguments"": {""query"": ""artificial intelligence""}}]","[{""name"": ""sign_info"", ""description"": ""Fetches and returns the sign information from the OnlyFans API using the provided user agent and RapidAPI key."", ""parameters"": {""useragent"": {""description"": ""The user agent string to be used in the API request."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""get_image"", ""description"": ""Retrieve an image by its file ID using the specified RapidAPI key."", ""parameters"": {""fileid"": {""description"": ""The ID of the image file to retrieve."", ""type"": ""str"", ""default"": ""639f7fda5ec4b33ef2e476b8""}}}, {""name"": ""search_suggestions"", ""description"": ""Fetches search suggestions from the Twitter API using specified query parameters."", ""parameters"": {""query"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": ""elonmusk""}, ""twttr_session"": {""description"": ""The Twitter session ID for authenticated requests. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""twttr_proxy"": {""description"": ""The Twitter proxy server address. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""cursor"": {""description"": ""The cursor for paginated results. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""video_post_metadata"", ""description"": ""Fetch metadata for a single TikTok video post."", ""parameters"": {""video"": {""description"": ""The URL of the TikTok video post. For example: 'https://www.tiktok.com/@charlidamelio/video/7137423965982592302'."", ""type"": ""str"", ""default"": ""https://www.tiktok.com/@charlidamelio/video/7010108194051640582""}, ""fresh"": {""description"": ""If set to 1, force the return of fresh data (not cached). Defaults to 0."", ""type"": ""int, optional"", ""default"": ""0""}}}]"
397,53362,What are the latest discussions about data science? Can you find suggestions for the search query '#machinelearning'?,"[{""name"": ""search_suggestions"", ""arguments"": {""query"": ""data science""}}, {""name"": ""search_suggestions"", ""arguments"": {""query"": ""#machinelearning""}}]","[{""name"": ""search_suggestions"", ""description"": ""Fetches search suggestions from the Twitter API using specified query parameters."", ""parameters"": {""query"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": ""elonmusk""}, ""twttr_session"": {""description"": ""The Twitter session ID for authenticated requests. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""twttr_proxy"": {""description"": ""The Twitter proxy server address. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""cursor"": {""description"": ""The cursor for paginated results. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}]"
398,53370,What are the autocomplete suggestions for the query 'Sydney property'?,"[{""name"": ""auto_complete"", ""arguments"": {""query"": ""Sydney property""}}]","[{""name"": ""house_prices_get_points_of_interest"", ""description"": ""Fetches the nearest points of interest for a given property using the Zoopla API."", ""parameters"": {""property_id"": {""description"": ""The ID of the property for which to retrieve points of interest. This is usually obtained from the `/house-prices/estimate` endpoint."", ""type"": ""int"", ""default"": ""27175510""}}}, {""name"": ""get_domaine"", ""description"": ""Retrieves the details of a domain using an API, specific to domains registered in New Caledonia."", ""parameters"": {""ext"": {""description"": ""The domain extension, which can be one of the following:"", ""type"": ""str"", ""default"": ""NC""}, ""nom"": {""description"": ""The domain name to look up."", ""type"": ""str"", ""default"": ""1012""}}}, {""name"": ""getwebsite"", ""description"": ""Fetch the website URL for a given company name using RapidAPI."", ""parameters"": {""name"": {""description"": ""The company name for which to retrieve the website URL."", ""type"": ""str"", ""default"": ""github""}}}, {""name"": ""auto_complete"", ""description"": ""Get autocomplete suggestions for a given query using the Realty-in-AU API."", ""parameters"": {""query"": {""description"": ""Any term or phrase you are familiar with. It can be an address or a keyword for which you want autocomplete suggestions."", ""type"": ""str"", ""default"": ""sydney""}}}, {""name"": ""get_device_asset_by_identifier"", ""description"": ""Fetches device asset information using a specified identifier from an external system via RapidAPI."", ""parameters"": {""identifier"": {""description"": ""The unique identifier for the device asset."", ""type"": ""str"", ""default"": ""71491234-A""}}}]"
399,53487,Find Flixbus stations in the locale of 'de' with the query string 'Hamburg'.,"[{""name"": ""autocomplete"", ""arguments"": {""query"": ""Hamburg"", ""locale"": ""de""}}]","[{""name"": ""africa"", ""description"": ""Fetch a list of African cities sorted by the given criteria from the Nomad List API."", ""parameters"": {""sort"": {""description"": ""Sort order, either 'asc' for ascending or 'desc' for descending. Defaults to 'desc'."", ""type"": ""str"", ""default"": ""desc""}, ""sort_by"": {""description"": ""The attribute to sort by, such as 'overall_score', 'internet_speed', 'temperatureC', 'cost_for_family_in_usd', etc. Defaults to 'overall_score'."", ""type"": ""str"", ""default"": ""overall_score""}, ""page"": {""description"": ""Page number for pagination. Defaults to '1'."", ""type"": ""str"", ""default"": ""1""}, ""size"": {""description"": ""Number of results per page. Defaults to '20'."", ""type"": ""str"", ""default"": ""20""}}}, {""name"": ""autocomplete"", ""description"": ""Autocomplete function to search for Flixbus stations based on a query string and optionally a locale."", ""parameters"": {""query"": {""description"": ""The search query string for the Flixbus station."", ""type"": ""str"", ""default"": ""ljubljana""}, ""locale"": {""description"": ""The language of the query and results. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""get_locations"", ""description"": ""Fetches geographical locations within a specified radius of the given longitude and latitude coordinates, optionally filtered by type."", ""parameters"": {""lon"": {""description"": ""Longitude coordinate of the center point."", ""type"": ""int"", ""default"": ""-75.33299748""}, ""lat"": {""description"": ""Latitude coordinate of the center point."", ""type"": ""int"", ""default"": ""40.11043326""}, ""radius"": {""description"": ""Radius in miles from the center point within which to search for locations. Defaults to 3."", ""type"": ""int, optional"", ""default"": ""3""}, ""type"": {""description"": ""Type of locations to filter; one of ['bus_stops', 'rail_stations', 'perk_locations', 'trolley_stops', 'sales_locations']. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""middle_east"", ""description"": ""Retrieves a list of Middle Eastern cities sorted based on specified criteria."", ""parameters"": {""page"": {""description"": ""The page number for pagination. Default is '1'."", ""type"": ""str"", ""default"": ""1""}, ""sort"": {""description"": ""The sort order, either 'asc' for ascending or 'desc' for descending. Default is 'desc'."", ""type"": ""str"", ""default"": ""desc""}, ""sort_by"": {""description"": ""The parameter by which to sort results, such as 'overall_score', 'internet_speed', 'temperatureC', or 'cost_for_family_in_usd'. Default is 'overall_score'."", ""type"": ""str"", ""default"": ""overall_score""}, ""size"": {""description"": ""The number of entries per page. Default is '20'."", ""type"": ""str"", ""default"": ""20""}}}]"
400,53503,"I want to simulate querying the 'products' table with conditions: {'category': 'electronics', 'price': {'$lt': 100}}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""products"", ""conditions"": [{""category"": ""electronics""}, {""price"": {""$lt"": 100}}]}}]","[{""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
401,53544,"What are the suggested locations for a search query 'New York' with the language identifier set to 1033, site identifier set to 300000001, and locale set to 'en_US'?","[{""name"": ""locations_v3_search"", ""arguments"": {""q"": ""New York"", ""langid"": 1033, ""siteid"": 300000001, ""locale"": ""en_US""}}]","[{""name"": ""locations_v3_search"", ""description"": ""Search for related locations and suggestions based on the provided query string using the RapidAPI 'locations/v3/search' endpoint."", ""parameters"": {""q"": {""description"": ""The query string representing names of countries, cities, districts, places, etc."", ""type"": ""str"", ""default"": ""new york""}, ""langid"": {""description"": ""The language identifier. Default is 1033."", ""type"": ""int, optional"", ""default"": ""1033""}, ""siteid"": {""description"": ""The site identifier. Default is 300000001."", ""type"": ""int, optional"", ""default"": ""300000001""}, ""locale"": {""description"": ""The locale code. Default is 'en_US'."", ""type"": ""str, optional"", ""default"": ""en_US""}}}]"
402,53639,"For the Twitch channel 'xqcow', retrieve the channel panels. Then, search for animated stickers on Giphy with the search query 'gaming' and limit the results to 25 with a result offset of 25.","[{""name"": ""get_channel_panels"", ""arguments"": {""channel"": ""xqcow""}}, {""name"": ""sticker_search"", ""arguments"": {""q"": ""gaming"", ""limit"": ""25"", ""offset"": ""25""}}]","[{""name"": ""get_channel_panels"", ""description"": ""Fetches the channel panels for a specified Twitch channel using the Twitch API."", ""parameters"": {""channel"": {""description"": ""The name of the Twitch channel to retrieve panels for."", ""type"": ""str"", ""default"": ""xQc""}}}, {""name"": ""sticker_search"", ""description"": ""Searches for animated stickers on Giphy using a search query and optional parameters."", ""parameters"": {""q"": {""description"": ""Search query term or phrase."", ""type"": ""str"", ""default"": ""cat""}, ""limit"": {""description"": ""Number of results to return, with a maximum of 100. Defaults to 25."", ""type"": ""str, optional"", ""default"": """"}, ""offset"": {""description"": ""Results offset, defaults to 0."", ""type"": ""str, optional"", ""default"": """"}, ""rating"": {""description"": ""Limit results to those rated (y, g, pg, pg-13, or r)."", ""type"": ""str, optional"", ""default"": """"}}}]"
403,53651,Query the 'products' table for products that cost less than $50 and are in stock.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""products"", ""conditions"": [{""price"": {""$lt"": 50}}, {""in_stock"": true}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
404,53835,Find breweries matching the query 'Belgian' and locate the nearest alternative fuel stations with 'Level 2' charging capability within a 15-mile radius of the location with latitude '40.7128' and longitude '-74.0060'.,"[{""name"": ""autocomplete"", ""arguments"": {""query"": ""Belgian""}}, {""name"": ""nearest_stations"", ""arguments"": {""format"": ""json"", ""latitude"": ""40.7128"", ""longitude"": ""-74.0060"", ""radius"": ""15"", ""ev_charging_level"": ""2""}}]","[{""name"": ""autocomplete"", ""description"": ""Autocomplete a brewery query using the Open Brewery DB API."", ""parameters"": {""query"": {""description"": ""The query string to autocomplete."", ""type"": ""str"", ""default"": ""dog""}}}, {""name"": ""nearest_stations"", ""description"": ""Return the nearest alternative fuel stations within a specified location or coordinates."", ""parameters"": {""format"": {""description"": ""The response format (json, xml, etc.)."", ""type"": ""str"", ""default"": ""json""}, ""location"": {""description"": ""A free-form input describing the address of the location. Default is '433 Bryant St., San Francisco'."", ""type"": ""str, optional"", ""default"": ""433 Bryant St., San Francisco""}, ""latitude"": {""description"": ""The latitude of the desired location."", ""type"": ""str, optional"", ""default"": """"}, ""longitude"": {""description"": ""The longitude of the desired location."", ""type"": ""str, optional"", ""default"": """"}, ""radius"": {""description"": ""The radius (in miles) around the search location to search for stations within."", ""type"": ""str, optional"", ""default"": """"}, ""status"": {""description"": ""Return stations that match the given status. Options are 'all', 'E', 'P'."", ""type"": ""str, optional"", ""default"": """"}, ""access"": {""description"": ""The accessibility type of the stations. Options are 'all', 'public', 'private'."", ""type"": ""str, optional"", ""default"": """"}, ""fuel_type"": {""description"": ""The type of fuel provided by the stations. Options are 'all', 'BD', 'CNG', 'E85', 'ELEC', 'HY', 'LNG', 'LPG'. Default is 'ELEC'."", ""type"": ""str, optional"", ""default"": ""ELEC""}, ""cards_accepted"": {""description"": ""Payment methods accepted by the stations."", ""type"": ""str, optional"", ""default"": """"}, ""owner_type"": {""description"": ""Type of ownership of the stations. Options include 'all', 'FG', 'LG', 'P', 'SG', 'T'."", ""type"": ""str, optional"", ""default"": """"}, ""federal_agency_id"": {""description"": ""Filter stations by the federal agency owner IDs."", ""type"": ""str, optional"", ""default"": """"}, ""ev_network"": {""description"": ""Electric charging stations belonging to specified networks."", ""type"": ""str, optional"", ""default"": """"}, ""ev_charging_level"": {""description"": ""Levels of electric vehicle supply equipment. Options include 'all', '1', '2', 'dc_fast'."", ""type"": ""str, optional"", ""default"": """"}, ""state"": {""description"": ""Return only stations within the given state. Must be provided as a two-character state code."", ""type"": ""str, optional"", ""default"": """"}, ""zip"": {""description"": ""Return only stations within the given ZIP code."", ""type"": ""str, optional"", ""default"": """"}, ""limit"": {""description"": ""The maximum number of results to return. Default is '1'."", ""type"": ""str, optional"", ""default"": ""1""}, ""offset"": {""description"": ""Offset the results found to paginate the results."", ""type"": ""str, optional"", ""default"": """"}}}]"
405,53856,"Fetch the Polish car averages for a 2018 Audi A4 and a 2019 Mercedes-Benz C-Class. Also, search for devices on the mobile phones database that match the query 'Samsung Galaxy S21'. Finally, fetch videos related to the video with ID '3Bv53IqPcZo', bypassing the cache, in the US region, and in English language.","[{""name"": ""pl_car_averages"", ""arguments"": {""year"": ""2018"", ""make"": ""Audi"", ""model"": ""A4""}}, {""name"": ""pl_car_averages"", ""arguments"": {""year"": ""2019"", ""make"": ""Mercedes-Benz"", ""model"": ""C-Class""}}, {""name"": ""search_devices"", ""arguments"": {""query"": ""Samsung Galaxy S21""}}, {""name"": ""related_videos"", ""arguments"": {""is_id"": ""3Bv53IqPcZo"", ""x_cachebypass"": ""1"", ""geo"": ""US"", ""lang"": ""en""}}]","[{""name"": ""pl_car_averages"", ""description"": ""Fetches and returns Polish car averages for a given vehicle's year, make, and model."", ""parameters"": {""year"": {""description"": ""The year of the car."", ""type"": ""str"", ""default"": ""2012""}, ""make"": {""description"": ""The make of the car."", ""type"": ""str"", ""default"": ""bmw""}, ""model"": {""description"": ""The model of the car."", ""type"": ""str"", ""default"": ""5 series""}}}, {""name"": ""search_devices"", ""description"": ""Searches for devices using the given query string on the RapidAPI's mobile phones database and returns the results."", ""parameters"": {""query"": {""description"": ""The search query string to find matching devices."", ""type"": ""str"", ""default"": ""iphone 14""}}}, {""name"": ""related_videos"", ""description"": ""Fetches videos related to a specified video using the YouTube V3 API."", ""parameters"": {""is_id"": {""description"": ""The ID of the video for which to fetch related videos."", ""type"": ""str"", ""default"": ""dQw4w9WgXcQ""}, ""x_cachebypass"": {""description"": ""Cache bypass parameter; pass '1' to bypass the cache. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""geo"": {""description"": ""ISO 3166-2 country code of the region (e.g., 'US', 'UK', 'CA'). Defaults to 'US'."", ""type"": ""str, optional"", ""default"": ""US""}, ""lang"": {""description"": ""Locale/language for the request (e.g., 'en', 'gb', 'hi'). Defaults to 'en'."", ""type"": ""str, optional"", ""default"": ""en""}, ""token"": {""description"": ""Pagination token for fetching additional results. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}]"
406,53942,"Generate a QR code image for the URL 'https://www.microsoft.com' and retrieve a QR code for the link 'https://www.apple.com' using the RapidAPI service. Then, convert 500 grams to kilograms using the measurement unit converter API. Lastly, send a GET request to the Echo API with the first header as 'header3' and the second query parameter as 'query4'.","[{""name"": ""qr_code_image_generator"", ""arguments"": {""url"": ""https://www.microsoft.com""}}, {""name"": ""get"", ""arguments"": {""link"": ""https://www.apple.com""}}, {""name"": ""convert_from_one_unit_to_another"", ""arguments"": {""to"": ""kilogram"", ""is_from"": ""gram"", ""value"": 500, ""measure"": ""mass""}}, {""name"": ""echo"", ""arguments"": {""header1"": ""header3"", ""query2"": ""query4""}}]","[{""name"": ""get"", ""description"": ""Retrieves a QR code as a JPEG file from the provided URL link using the RapidAPI service."", ""parameters"": {""link"": {""description"": ""The URL link to be converted into a QR code."", ""type"": ""str"", ""default"": ""https://rapidapi.com""}}}, {""name"": ""qr_code_image_generator"", ""description"": ""Generates a QR code image for a given URL using the RapidAPI QR code generation service."", ""parameters"": {""url"": {""description"": ""The URL to be encoded in the QR code. Defaults to 'www.google.com'."", ""type"": ""str"", ""default"": ""www.google.com""}}}, {""name"": ""convert_from_one_unit_to_another"", ""description"": ""Converts a given quantity from one unit to another using the RapidAPI measurement unit converter."", ""parameters"": {""to"": {""description"": ""The target unit for conversion. Can be specified in abbreviation, singular, or plural forms (e.g., 'km', 'kilometer', 'kilometers')."", ""type"": ""str"", ""default"": ""km""}, ""is_from"": {""description"": ""The source unit for conversion. Can be specified in abbreviation, singular, or plural forms (e.g., 'm', 'meter', 'meters')."", ""type"": ""str"", ""default"": ""m""}, ""value"": {""description"": ""The numeric value to be converted."", ""type"": ""int"", ""default"": ""1200""}, ""measure"": {""description"": ""The type of measurement (e.g., 'length', 'mass')."", ""type"": ""str"", ""default"": ""length""}}}, {""name"": ""echo"", ""description"": ""Sends a GET request to the Echo API with specific headers and query parameters."", ""parameters"": {""header1"": {""description"": ""The first header to include in the request. Defaults to '1'."", ""type"": ""str, optional"", ""default"": ""1""}, ""query2"": {""description"": ""The second query parameter to include in the request. Defaults to '2'."", ""type"": ""str, optional"", ""default"": ""2""}}}, {""name"": ""countpages"", ""description"": ""Counts the number of website pages indexed by Google for a given URL using the specified RapidAPI service."", ""parameters"": {""url"": {""description"": ""The URL of the website to check the number of indexed pages."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""checker"", ""description"": ""Checks the domain details for a given URL using the Toolbench RapidAPI."", ""parameters"": {""url"": {""description"": ""The URL of the domain to be checked."", ""type"": ""str"", ""default"": ""https://rapidapi.com/""}}}, {""name"": ""whois"", ""description"": ""Fetches WHOIS data for a given domain."", ""parameters"": {""q"": {""description"": ""The domain name to query for WHOIS information."", ""type"": ""str"", ""default"": ""google.com""}}}]"
407,53943,Simulate a query to get all the products in the 'Products' table that have a 'price' less than $50 and a 'rating' greater than 4.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""Products"", ""conditions"": [{""column"": ""price"", ""operator"": ""<"", ""value"": 50}, {""column"": ""rating"", ""operator"": "">"", ""value"": 4}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
408,53947,"Can you find the company information for the businesses with CNPJ IDs '12345678' and '87654321', and then search for the hosts file for the game Minecraft? Also, search for the query 'SEO techniques' on a secondary search engine.","[{""name"": ""consulta_empresa"", ""arguments"": {""is_id"": ""12345678""}}, {""name"": ""consulta_empresa"", ""arguments"": {""is_id"": ""87654321""}}, {""name"": ""hosts_txt"", ""arguments"": {""game"": ""minecraft""}}, {""name"": ""search_b"", ""arguments"": {""query"": ""SEO techniques""}}]","[{""name"": ""consulta_empresa"", ""description"": ""Fetches company information based on the given CNPJ ID using the RapidAPI service."", ""parameters"": {""is_id"": {""description"": ""The first 8 digits of the CNPJ used to identify the company."", ""type"": ""str"", ""default"": ""37335118""}}}, {""name"": ""hosts_txt"", ""description"": ""Fetches the hosts file for a specific game using the StopModReposts Blocklist API."", ""parameters"": {""game"": {""description"": ""The name of the game for which to fetch the hosts file. Defaults to 'minecraft'."", ""type"": ""str, optional"", ""default"": ""minecraft""}}}, {""name"": ""search_b"", ""description"": ""Performs a search query using the SEO API on a secondary search engine."", ""parameters"": {""query"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": ""q=coffee+shop""}}}, {""name"": ""emailfinder"", ""description"": ""Finds the most likely email address based on the provided domain name, first name, and last name using the Tomba RapidAPI."", ""parameters"": {""domain"": {""description"": ""The domain name to search for the email address (e.g., \""stripe.com\"")."", ""type"": ""str"", ""default"": ""stripe.com""}, ""first_name"": {""description"": ""The first name of the person."", ""type"": ""str"", ""default"": ""Moskoz""}, ""last_name"": {""description"": ""The last name of the person."", ""type"": ""str"", ""default"": ""Dustin""}}}]"
409,53949,"What is the information about the flower with ID '7-W'? Also, fetch Twitter mentions for the query 'carnation' for the last 49 days.","[{""name"": ""get_by_id"", ""arguments"": {""is_id"": ""7-W""}}, {""name"": ""getmentions"", ""arguments"": {""query"": ""carnation"", ""period"": 49}}]","[{""name"": ""get_by_id"", ""description"": ""Fetches information about a flower specified by its ID from the Flower API."", ""parameters"": {""is_id"": {""description"": ""The ID of the flower to retrieve information about."", ""type"": ""str"", ""default"": ""6383808bff3dde72b0fc34ab""}}}, {""name"": ""getmentions"", ""description"": ""Fetches Twitter mentions for a given query using the specified parameters."", ""parameters"": {""query"": {""description"": ""The search query to find mentions for (e.g., brand name, competitor)."", ""type"": ""str"", ""default"": """"}, ""period"": {""description"": ""The time period for mentions, in days. Defaults to None."", ""type"": ""int, optional"", ""default"": """"}, ""page"": {""description"": ""The page number of results to retrieve. Defaults to 1."", ""type"": ""int, optional"", ""default"": ""1""}}}]"
410,54024,What cities and towns match the query 'Paris'? What astronomical data is available for Paris on September 15th?,"[{""name"": ""search_autocomplete_api"", ""arguments"": {""q"": ""Paris""}}, {""name"": ""astronomy_api"", ""arguments"": {""q"": ""Paris"", ""dt"": ""2022-09-15""}}]","[{""name"": ""search_autocomplete_api"", ""description"": ""Search or Autocomplete API returns matching cities and towns based on the query."", ""parameters"": {""q"": {""description"": ""Query parameter used to obtain matching locations. Supported formats include:"", ""type"": ""str"", ""default"": """"}}}, {""name"": ""astronomy_api"", ""description"": ""Fetches astronomical data including sunrise, sunset, moonrise, moonset, moon phase, and illumination in JSON format based on the provided query parameters."", ""parameters"": {""q"": {""description"": ""The query parameter for retrieving data. It supports various formats such as:"", ""type"": ""str"", ""default"": ""London""}, ""dt"": {""description"": ""The date for which to retrieve the astronomical data. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""zones_type_zoneid_forecast"", ""description"": ""Fetches the forecast data for a given zone type and zone ID using the National Weather Service API."", ""parameters"": {""type"": {""description"": ""A valid zone type (e.g., public, coastal, fire)."", ""type"": ""str"", ""default"": """"}, ""zoneid"": {""description"": ""The ID of the zone for which to fetch the forecast."", ""type"": ""str"", ""default"": """"}}}]"
411,54111,"Fetch items based on the query 'toys' and retrieve the air quality data for Vienna and Athens. Also, fetch the first 35 lines of data from the 'environment' subset in the 'nature' dataset.","[{""name"": ""items"", ""arguments"": {""q"": ""toys""}}, {""name"": ""v1_airquality"", ""arguments"": {""city"": ""Vienna""}}, {""name"": ""v1_airquality"", ""arguments"": {""city"": ""Athens""}}, {""name"": ""tsv2"", ""arguments"": {""subset"": ""environment"", ""dataset"": ""nature"", ""limit"": 35}}]","[{""name"": ""items"", ""description"": ""Fetches an array of items based on a query string from the specified RapidAPI endpoint."", ""parameters"": {""q"": {""description"": ""The query string to filter items. Defaults to 'a'."", ""type"": ""str"", ""default"": ""a""}}}, {""name"": ""tsv2"", ""description"": ""Fetches values from a specified data subset within a dataset using the ODAM RapidAPI."", ""parameters"": {""subset"": {""description"": ""Identifier for the data subset."", ""type"": ""str"", ""default"": ""samples""}, ""dataset"": {""description"": ""Identifier for the dataset."", ""type"": ""str"", ""default"": ""frim1""}, ""limit"": {""description"": ""Limits the number of lines in the output table. Defaults to 10. A value of 0 means no limit."", ""type"": ""int, optional"", ""default"": 10}, ""debug"": {""description"": ""Debug status. When set to a non-zero value, debug mode is enabled. Defaults to 0."", ""type"": ""int, optional"", ""default"": 0}, ""format"": {""description"": ""Output format. Defaults to 'tsv'."", ""type"": ""str, optional"", ""default"": ""tsv""}}}, {""name"": ""v1_airquality"", ""description"": ""Retrieves air quality information for a specified city using the RapidAPI service."", ""parameters"": {""x_rapidapi_key"": {""description"": ""The API key for RapidAPI. Defaults to '2f918523acmsh6d5836c8338f131p1b2d83jsn251d1fe71e9c'."", ""type"": ""str, optional"", ""default"": ""2f918523acmsh6d5836c8338f131p1b2d83jsn251d1fe71e9c""}, ""x_rapidapi_host"": {""description"": ""The host for the RapidAPI service. Defaults to 'air-quality-by-api-ninjas.p.rapidapi.com'."", ""type"": ""str, optional"", ""default"": ""air-quality-by-api-ninjas.p.rapidapi.com""}, ""city"": {""description"": ""The city for which to retrieve air quality information. Defaults to 'Berlin'."", ""type"": ""str, optional"", ""default"": ""Berlin""}}}]"
412,54126,"Perform a search query on Google for the term 'Python programming' in English, localized for the US, and return the results for page 2 with 15 results per page.","[{""name"": ""search"", ""arguments"": {""pageno"": 2, ""country"": ""US"", ""lang"": ""en"", ""search"": ""Python programming"", ""perpage"": 15}}]","[{""name"": ""search_wikipedia"", ""description"": ""Searches Wikipedia and returns the top K summarized information along with similar items. Additionally, images and coordinates with map links are provided when available."", ""parameters"": {""q"": {""description"": ""Query string to search for on Wikipedia."", ""type"": ""str"", ""default"": ""Messi""}, ""topk"": {""description"": ""Number of top summarized items to return. Defaults to 3. Must be greater than 0."", ""type"": ""int, optional"", ""default"": ""3""}}}, {""name"": ""search"", ""description"": ""Performs a search query on the specified search engine using given parameters and returns the response as JSON or text."", ""parameters"": {""pageno"": {""description"": ""The page number of the search results."", ""type"": ""int"", ""default"": ""1""}, ""country"": {""description"": ""The country code for the search localization."", ""type"": ""str"", ""default"": ""US""}, ""lang"": {""description"": ""The language code for the search localization."", ""type"": ""str"", ""default"": ""en""}, ""search"": {""description"": ""The search string to query."", ""type"": ""str"", ""default"": ""Hello""}, ""perpage"": {""description"": ""The number of results per page. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}}}, {""name"": ""get_d_tails_image"", ""description"": ""Fetch detailed information about a specific image using the Toolbench RapidAPI."", ""parameters"": {""image"": {""description"": ""The identifier or name of the image to retrieve details for."", ""type"": ""str"", ""default"": ""domaine-nc-api""}}}]"
413,54132,"Search for product offers that are currently on sale, have free shipping, and are in refurbished condition. The search query should be 'smartwatch'.","[{""name"": ""search"", ""arguments"": {""q"": ""smartwatch"", ""on_sale"": true, ""free_shipping"": true, ""product_condition"": ""REFURBISHED""}}]","[{""name"": ""aliexpress_item_description"", ""description"": ""Fetches the detailed description of an AliExpress item using its item ID."", ""parameters"": {""itemid"": {""description"": ""The ID of the AliExpress item."", ""type"": ""int"", ""default"": ""3256804591426248""}, ""locale"": {""description"": ""The locale for displaying titles and content in the selected language. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""search_by_keyword"", ""description"": ""Searches for products using a specified keyword on the 1688 platform through the Taobao-Tmall Product Detail API."", ""parameters"": {""keyword"": {""description"": ""The search keyword to look for products."", ""type"": ""str"", ""default"": ""\u6d77\u4e45\u6c34\u74f6""}, ""page"": {""description"": ""The page number for paginated results."", ""type"": ""int"", ""default"": ""1""}}}, {""name"": ""tmall_search_by_keyword"", ""description"": ""Searches for products on Tmall by keyword."", ""parameters"": {""page"": {""description"": ""The page number of the search results to retrieve."", ""type"": ""int"", ""default"": ""1""}, ""keyword"": {""description"": ""The keyword to search for products."", ""type"": ""str"", ""default"": ""\u6d77\u4e45\u6c34\u74f6""}}}, {""name"": ""search"", ""description"": ""Search for product offers using various filtering parameters such as rating, condition, shipping speed, price, and more. Supports both free-form queries and GTIN/EAN identifiers with infinite pagination."", ""parameters"": {""q"": {""description"": ""Free-form search query or a GTIN/EAN (e.g., '0194252014233')."", ""type"": ""str"", ""default"": ""Nike shoes""}, ""min_rating"": {""description"": ""Return products with rating greater than the specified value. Possible values: '1', '2', '3', '4'."", ""type"": ""str, optional"", ""default"": """"}, ""product_condition"": {""description"": ""Only return products with a specific condition. Possible values: 'NEW', 'USED', 'REFURBISHED'."", ""type"": ""str, optional"", ""default"": """"}, ""max_shipping_days"": {""description"": ""Only return product offers that offer shipping/delivery within a specified number of days."", ""type"": ""int, optional"", ""default"": """"}, ""store_id"": {""description"": ""Only return product offers from specific stores (comma-separated list of store IDs). Store IDs can be obtained from the Google Shopping URL after using the Seller filter."", ""type"": ""str, optional"", ""default"": """"}, ""on_sale"": {""description"": ""Only return product offers that are currently on sale. Default is None."", ""type"": ""bool, optional"", ""default"": """"}, ""free_returns"": {""description"": ""Only return product offers that offer free returns. Default is None."", ""type"": ""bool, optional"", ""default"": """"}, ""free_shipping"": {""description"": ""Only return product offers that offer free shipping/delivery. Default is None."", ""type"": ""bool, optional"", ""default"": """"}, ""max_price"": {""description"": ""Only return product offers with price lower than a certain value."", ""type"": ""int, optional"", ""default"": """"}, ""language"": {""description"": ""The language of the results. Default is 'en'. Valid values: see https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes."", ""type"": ""str, optional"", ""default"": ""en""}, ""sort_by"": {""description"": ""Sort product offers by best match, top rated, lowest or highest price. Possible values: 'BEST_MATCH', 'TOP_RATED', 'LOWEST_PRICE', 'HIGHEST_PRICE'."", ""type"": ""str, optional"", ""default"": """"}, ""country"": {""description"": ""Country code of the region/country to return offers for. Default is 'us'. Valid values: see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2."", ""type"": ""str, optional"", ""default"": ""us""}, ""min_price"": {""description"": ""Only return product offers with price greater than a certain value."", ""type"": ""int, optional"", ""default"": """"}, ""page"": {""description"": ""Results page to return. Default is 1."", ""type"": ""int, optional"", ""default"": """"}}}]"
414,54319,"Query for the boundary information of Vancouver, Canada, and generate a static map image for the location (49.2827, -123.1207) with a width of 600, height of 600, and zoom level of 14.","[{""name"": ""query_for_city_boundary_by_city_name"", ""arguments"": {""name"": ""Vancouver""}}, {""name"": ""map_image_get"", ""arguments"": {""width"": 600, ""center"": ""49.2827,-123.1207"", ""zoom"": 14, ""height"": 600}}]","[{""name"": ""query_for_city_boundary_by_city_name"", ""description"": ""Queries the boundary information for a given city name from a specified API."", ""parameters"": {""name"": {""description"": ""The name of the city for which the boundary information is to be queried."", ""type"": ""str"", ""default"": ""toronto""}}}, {""name"": ""query_by_fsa_code"", ""description"": ""Fetches geographical boundary information for a given Canadian Forward Sortation Area (FSA) code using the VanitySoft API."", ""parameters"": {""postal_fsa"": {""description"": ""A Canadian Forward Sortation Area (FSA) code, e.g., \""T6H\"" or \""A0A\""."", ""type"": ""str"", ""default"": ""T6H""}}}, {""name"": ""planet_vector_tiles"", ""description"": ""Retrieves global planet vector tiles in Protocolbuffer Binary Format (PBF) from the specified map service."", ""parameters"": {""y"": {""description"": ""The y coordinate (tile row) of the map tile."", ""type"": ""str"", ""default"": ""1""}, ""x"": {""description"": ""The x coordinate (tile column) of the map tile."", ""type"": ""str"", ""default"": ""1""}, ""z"": {""description"": ""The zoom level of the map tile."", ""type"": ""str"", ""default"": ""1""}}}, {""name"": ""map_image_get"", ""description"": ""Fetches a static map image for a specified location with given parameters such as width, height, center, and zoom level."", ""parameters"": {""width"": {""description"": ""Width of the map image. Must be between 1 and 999."", ""type"": ""int"", ""default"": ""500""}, ""center"": {""description"": ""The center coordinates of the map (latitude,longitude)."", ""type"": ""str"", ""default"": ""35.681236,139.767125""}, ""zoom"": {""description"": ""The zoom level of the map. Must be between 6 and 19."", ""type"": ""int"", ""default"": ""15""}, ""height"": {""description"": ""Height of the map image. Must be between 1 and 999."", ""type"": ""int"", ""default"": ""500""}, ""datum"": {""description"": ""The geodetic system to use. Defaults to 'wgs84'. Options are:"", ""type"": ""str, optional"", ""default"": ""wgs84""}, ""coord_unit"": {""description"": ""The unit of latitude and longitude in the output data. Defaults to 'degree'. Options are:"", ""type"": ""str, optional"", ""default"": ""degree""}}}, {""name"": ""reverse"", ""description"": ""Performs reverse geocoding to obtain location details from longitude and latitude coordinates."", ""parameters"": {""lon"": {""description"": ""The longitude of the location to be reverse geocoded."", ""type"": ""str"", ""default"": ""16.3523667""}, ""lat"": {""description"": ""The latitude of the location to be reverse geocoded."", ""type"": ""str"", ""default"": ""48.200702""}, ""polygon"": {""description"": ""If specified, includes polygon details in the response."", ""type"": ""str, optional"", ""default"": """"}, ""language"": {""description"": ""Language for the response data. Must be a valid ISO 639-1 language code."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""staticmaps"", ""description"": ""Generates a static map image URL based on the given parameters."", ""parameters"": {""size"": {""description"": ""Size of the map. Format is usually `{width}x{height}`."", ""type"": ""str"", ""default"": ""640x480""}, ""center"": {""description"": ""Center coordinates of the map. Format is `{latitude},{longitude}`."", ""type"": ""str"", ""default"": ""48.20835,16.3725""}, ""zoom"": {""description"": ""Zoom level of the map."", ""type"": ""int"", ""default"": ""11""}, ""bounds"": {""description"": ""Bounding box to define the map area instead of `center` and `zoom`. Format is `{north},{east},{south},{west}`."", ""type"": ""str, optional"", ""default"": """"}, ""geojson"": {""description"": ""GeoJSON geometry to include on the map. Format is `{attribute}:{value}[|{attribute}:{value} ...]`."", ""type"": ""str, optional"", ""default"": """"}, ""maptype"": {""description"": ""Type of the map, defining its appearance. Default is 'toursprung-terrain'."", ""type"": ""str, optional"", ""default"": ""toursprung-terrain""}, ""path"": {""description"": ""Path to include on the map. Format is `{attribute}:{value}[|{attribute}:{value} ...]`."", ""type"": ""str, optional"", ""default"": """"}, ""delta_zoom"": {""description"": ""Zoom level adjustment if zoom is calculated automatically."", ""type"": ""int, optional"", ""default"": """"}, ""kml"": {""description"": ""KML data to include on the map. Format is `{kml}?{attribute}={value}[&{attribute}={value} ...]`."", ""type"": ""str, optional"", ""default"": """"}, ""format"": {""description"": ""File format of the map image. Default is 'png'."", ""type"": ""str, optional"", ""default"": ""png""}, ""marker"": {""description"": ""Marker to include on the map. Format is `{attribute}:{value}[|{attribute}:{value} ...]`."", ""type"": ""str, optional"", ""default"": """"}, ""factor"": {""description"": ""Image scaling factor."", ""type"": ""str, optional"", ""default"": """"}}}]"
415,54565,"What would be the simulated response if I query the 'plants' table with conditions: {'type': 'trees', 'height': {'$gt': 10}}? And what is the predicted evolution rate for 'oak trees' over the next 1000 years using the Lamarck model?","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""plants"", ""conditions"": [{""type"": ""trees"", ""height"": {""$gt"": 10}}]}}, {""name"": ""predict_evolution_rate"", ""arguments"": {""species"": ""oak trees"", ""years"": 1000, ""model"": ""Lamarck""}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""predict_evolution_rate"", ""description"": ""Predict the evolutionary rate for a specific species for a given timeframe."", ""parameters"": {""species"": {""description"": ""The species that the evolution rate will be predicted for."", ""type"": ""str"", ""default"": ""Darwin""}, ""years"": {""description"": ""Number of years for the prediction."", ""type"": ""int"", ""default"": ""Darwin""}, ""model"": {""description"": ""The model used to make the prediction, options: 'Darwin', 'Lamarck', default is 'Darwin'."", ""type"": ""str""}}}]"
416,54595,"Can you simulate a query for the 'reptiles' table with conditions: {'habitat': 'desert', 'length': {'$gt': 5}}? Also, what is the predicted evolution rate for 'snakes' over the next 100 years using the Darwin model?","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""reptiles"", ""conditions"": [{""habitat"": ""desert"", ""length"": {""$gt"": 5}}]}}, {""name"": ""predict_evolution_rate"", ""arguments"": {""species"": ""snakes"", ""years"": 100, ""model"": ""Darwin""}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""predict_evolution_rate"", ""description"": ""Predict the evolutionary rate for a specific species for a given timeframe."", ""parameters"": {""species"": {""description"": ""The species that the evolution rate will be predicted for."", ""type"": ""str"", ""default"": ""Darwin""}, ""years"": {""description"": ""Number of years for the prediction."", ""type"": ""int"", ""default"": ""Darwin""}, ""model"": {""description"": ""The model used to make the prediction, options: 'Darwin', 'Lamarck', default is 'Darwin'."", ""type"": ""str""}}}]"
417,54755,"Fetch detailed information for a specific cryptocurrency transaction with the hash '0x8f7c161bb2a638bbd211f233d7badf631222368223206f37c3a1c9489451e767' and symbol 'BTC' using the crypto_whale_transactions API. Also, search for exchanges based on a query string 'Coinbase' and category 'Cryptocurrency' using the stock_cryptocurrency_forex_market_data API.","[{""name"": ""specific_transactions"", ""arguments"": {""hash"": ""0x8f7c161bb2a638bbd211f233d7badf631222368223206f37c3a1c9489451e767"", ""symbol"": ""BTC""}}, {""name"": ""search_exchange"", ""arguments"": {""q"": ""Coinbase"", ""category"": ""Cryptocurrency""}}]","[{""name"": ""symbols_get_peers"", ""description"": ""Fetches the peer symbols of a given stock symbol using the Seeking Alpha API."", ""parameters"": {""symbol"": {""description"": ""The stock symbol to query for peers. Multiple symbols can be queried by separating them with a comma (e.g. 'aapl,tsla')."", ""type"": ""str"", ""default"": ""aapl""}}}, {""name"": ""specific_transactions"", ""description"": ""Fetch detailed information about a specific cryptocurrency transaction using the provided hash and symbol."", ""parameters"": {""hash"": {""description"": ""The transaction hash used to uniquely identify the cryptocurrency transaction."", ""type"": ""str"", ""default"": ""ac6f1a0b388e2814f2e2036c7c81524cfae7e3432a8e503fe5d07ebb453ee310""}, ""symbol"": {""description"": ""The symbol of the cryptocurrency (e.g., BTC, ETH) for which the transaction information is to be retrieved."", ""type"": ""str"", ""default"": ""btc""}}}, {""name"": ""profile"", ""description"": ""Fetches company profile data such as sector, industry, location, and executives using the given stock symbol."", ""parameters"": {""symbol"": {""description"": ""The stock symbol for which to fetch company profile data."", ""type"": ""str"", ""default"": ""AAPL""}}}, {""name"": ""search_exchange"", ""description"": ""Search for exchanges based on a query string or category."", ""parameters"": {""q"": {""description"": ""A query string to search for specific exchanges. Defaults to 'B'."", ""type"": ""str, optional"", ""default"": ""B""}, ""category"": {""description"": ""The category to filter the exchanges, for example, 'Cryptocurrency'. Defaults to 'Cryptocurrency'."", ""type"": ""str, optional"", ""default"": ""Cryptocurrency""}}}, {""name"": ""free_access"", ""description"": ""Grant access to a unique URL for the Walnut Trading Dashboard using the provided API key."", ""parameters"": {""get_dash_url"": {""description"": ""The URL parameter required to get access to the dashboard."", ""type"": ""str"", ""default"": ""True""}}}]"
418,54919,"What are the coordinates of the address '1600 Pennsylvania Ave NW, Washington, DC 20500'? Also, can you find the geocoding search results for the query 'New York City' within the viewbox '40.7128,-74.0060,40.8781,-73.8392'?","[{""name"": ""forward_geocode"", ""arguments"": {""address"": ""1600 Pennsylvania Ave NW, Washington, DC 20500""}}, {""name"": ""geocodingsearch"", ""arguments"": {""q"": ""New York City"", ""viewbox"": ""40.7128,-74.0060,40.8781,-73.8392""}}]","[{""name"": ""geocodingsearch"", ""description"": ""Performs a forward geocoding search using a free-form query string and optional parameters to specify query filters and output format."", ""parameters"": {""q"": {""description"": ""Free-form query string for the geocoding search."", ""type"": ""str"", ""default"": ""New York City NY USA""}, ""countrycodes"": {""description"": ""Two-letter country code as defined in ISO 3166-1 alpha2 to restrict search to a specific country."", ""type"": ""str, optional"", ""default"": """"}, ""json_callback"": {""description"": ""Name of JSON callback function for JSONP calls; use this when the format is set to JSON."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_text"": {""description"": ""Include a textual representation of the polygon geometry in the output."", ""type"": ""str, optional"", ""default"": """"}, ""namedetails"": {""description"": ""Include detailed naming information in the output."", ""type"": ""str, optional"", ""default"": """"}, ""limit"": {""description"": ""Limit the number of search results."", ""type"": ""str, optional"", ""default"": """"}, ""viewbox"": {""description"": ""Specify a bounding box for the search area in the format 'x1,y1,x2,y2', where x is longitude and y is latitude."", ""type"": ""str, optional"", ""default"": """"}, ""format"": {""description"": ""Output format of the response (e.g., JSON)."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_geojson"": {""description"": ""Include GeoJSON representation of the polygon geometry in the output."", ""type"": ""str, optional"", ""default"": """"}, ""bounded"": {""description"": ""Use '1' to restrict the search area to the specified viewbox."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_svg"": {""description"": ""Include SVG representation of the polygon geometry in the output."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_kml"": {""description"": ""Include KML representation of the polygon geometry in the output."", ""type"": ""str, optional"", ""default"": """"}, ""polygon_threshold"": {""description"": ""Simplification threshold for the polygon geometry."", ""type"": ""int, optional"", ""default"": ""0.0""}, ""accept_language"": {""description"": ""Set the query and response language using two-letter language codes (e.g., 'en' or 'es') or a combination of language and region code (e.g., 'en-GB' or 'es-AR'). Default is 'en'."", ""type"": ""str, optional"", ""default"": ""en""}, ""addressdetails"": {""description"": ""Include detailed address information in the output."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""mapimage"", ""description"": ""Retrieves a map image with specified parameters such as coordinates, scale, size, and various display options."", ""parameters"": {""lonlat"": {""description"": ""The latitude and longitude in the format \""longitude,latitude\""."", ""type"": ""str"", ""default"": ""139.767231,35.681196""}, ""scale"": {""description"": ""The map scale. Valid range is from 6 to 21."", ""type"": ""int"", ""default"": ""16""}, ""size"": {""description"": ""The image size in the format \""width,height\"" in pixels."", ""type"": ""str"", ""default"": ""320,240""}, ""icon"": {""description"": ""Icon settings in the format \""[icon_type,longitude,latitude]|...\"". Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""centericon"": {""description"": ""Whether to display the center icon (on/off). Defaults to None (\""off\"")."", ""type"": ""str, optional"", ""default"": """"}, ""logo"": {""description"": ""Whether to display the brand logo (on/off). Defaults to None (\""off\"")."", ""type"": ""str, optional"", ""default"": """"}, ""landmarkicon"": {""description"": ""Whether to display landmark icons (on/off). Defaults to None (\""off\"")."", ""type"": ""str, optional"", ""default"": """"}, ""format"": {""description"": ""The output image format, either \""image/png\"" or \""image/jpeg\"". Defaults to \""image/png\""."", ""type"": ""str, optional"", ""default"": """"}, ""resolution"": {""description"": ""The image resolution. \""1\"" for standard size, \""2\"" for double size. Defaults to \""1\""."", ""type"": ""str, optional"", ""default"": """"}, ""rotationangle"": {""description"": ""The angle to rotate the map. Valid range is from 0 to 359 degrees. Defaults to 0."", ""type"": ""int, optional"", ""default"": """"}, ""routeresultid"": {""description"": ""The route result ID to display the route on the map. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""routeicon"": {""description"": ""Route icon settings, \""0\"" for none, \""1\"" for standard icons. Defaults to \""1\""."", ""type"": ""str, optional"", ""default"": """"}, ""scaler"": {""description"": ""Whether to display the scale (on/off). Defaults to \""off\""."", ""type"": ""str, optional"", ""default"": """"}, ""bldgname"": {""description"": ""Whether to display building names (on/off). Defaults to \""off\""."", ""type"": ""str, optional"", ""default"": """"}, ""contour"": {""description"": ""Whether to display contour lines (on/off). Defaults to \""on\""."", ""type"": ""str, optional"", ""default"": """"}, ""target"": {""description"": ""The map display content. \""1\"" for background, \""2\"" for notes, \""3\"" for both. Defaults to \""3\""."", ""type"": ""str, optional"", ""default"": """"}, ""mapstyle"": {""description"": ""Map design parameter in the format \""[design]_[note_size]\"". Defaults to \""std_pc\""."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""fetch_details_of_multiple_records"", ""description"": ""Fetches details of multiple records given their IDs using the Magical Taske API."", ""parameters"": {""is_id"": {""description"": ""A comma-separated string of record IDs for which to fetch details. Maximum 10 IDs allowed, no spaces between commas."", ""type"": ""str"", ""default"": ""b4180336-ef07-453d-b833-807161aedf36,7cf78e19-57d2-4bce-8999-63aad8f0e70c""}}}, {""name"": ""lookup_coordinates"", ""description"": ""Converts US latitude and longitude coordinates into local city information by querying the Reverse Geocode Locator API."", ""parameters"": {""lat"": {""description"": ""The latitude coordinate."", ""type"": ""int"", ""default"": ""40.785091""}, ""long"": {""description"": ""The longitude coordinate."", ""type"": ""str"", ""default"": ""-73.968285""}}}, {""name"": ""forward_geocode"", ""description"": ""Fetches latitude and longitude coordinates from a given address using the RapidAPI forward geocoding service."", ""parameters"": {""address"": {""description"": ""The address to be geocoded."", ""type"": ""str"", ""default"": ""2795 Hastings St, Vancouver, BC V5K 1Z8""}}}, {""name"": ""reversegeocode"", ""description"": ""Obtain the human-readable address for a given geographical location."", ""parameters"": {""location"": {""description"": ""The latitude and longitude coordinates (comma-separated) for which to obtain the address."", ""type"": ""str"", ""default"": ""37.7879493,-122.3961974""}, ""language"": {""description"": ""The language in which to return results. Defaults to 'en'."", ""type"": ""str, optional"", ""default"": ""en""}}}, {""name"": ""query_for_ldu_boundary_by_h3index"", ""description"": ""Queries for a Local Delivery Unit (LDU) boundary by its H3 index."", ""parameters"": {""h3ndex"": {""description"": ""The H3 index used to query the LDU boundary."", ""type"": ""int"", ""default"": ""635775751926485631""}}}, {""name"": ""map_image_get"", ""description"": ""Fetches a static map image for a specified location with given parameters such as width, height, center, and zoom level."", ""parameters"": {""width"": {""description"": ""Width of the map image. Must be between 1 and 999."", ""type"": ""int"", ""default"": ""500""}, ""center"": {""description"": ""The center coordinates of the map (latitude,longitude)."", ""type"": ""str"", ""default"": ""35.681236,139.767125""}, ""zoom"": {""description"": ""The zoom level of the map. Must be between 6 and 19."", ""type"": ""int"", ""default"": ""15""}, ""height"": {""description"": ""Height of the map image. Must be between 1 and 999."", ""type"": ""int"", ""default"": ""500""}, ""datum"": {""description"": ""The geodetic system to use. Defaults to 'wgs84'. Options are:"", ""type"": ""str, optional"", ""default"": ""wgs84""}, ""coord_unit"": {""description"": ""The unit of latitude and longitude in the output data. Defaults to 'degree'. Options are:"", ""type"": ""str, optional"", ""default"": ""degree""}}}]"
419,55035,Simulate querying the 'users' table where the user ID is greater than 100 and the status is 'active'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""field"": ""id"", ""operator"": "">"", ""value"": 100}, {""field"": ""status"", ""operator"": ""="", ""value"": ""active""}]}}]","[{""name"": ""analyze_social_group_dynamics"", ""description"": ""Analyzes the social dynamics within a group based on the personality traits and group size."", ""parameters"": {""total"": {""description"": ""The total group size."", ""type"": ""int""}, ""extroverts"": {""description"": ""The number of extroverted members in the group."", ""type"": ""int""}, ""introverts"": {""description"": ""The number of introverted members in the group."", ""type"": ""int""}}}, {""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_pokemon_move_info"", ""description"": ""Retrieves information about a Pok\u00e9mon's move using the Pok\u00e9API."", ""parameters"": {""pokemon_name"": {""description"": ""The name of the Pok\u00e9mon."", ""type"": ""str"", ""default"": ""run""}, ""move_name"": {""description"": ""The name of the move to check. Defaults to \""run\""."", ""type"": ""str, optional"", ""default"": ""run""}}}]"
420,55142,"Could you please retrieve items that match the query 'laptop'? Also, log in the user 'john' with the password 'doe123' and provide the response.","[{""name"": ""items"", ""arguments"": {""q"": ""laptop""}}, {""name"": ""loginuser"", ""arguments"": {""username"": ""john"", ""password"": ""doe123""}}]","[{""name"": ""items"", ""description"": ""Fetches an array of items based on a query string from the specified RapidAPI endpoint."", ""parameters"": {""q"": {""description"": ""The query string to filter items. Defaults to 'a'."", ""type"": ""str"", ""default"": ""a""}}}, {""name"": ""getuserbyname"", ""description"": ""Retrieves user information from the RapidAPI service based on the provided username."", ""parameters"": {""username"": {""description"": ""The name of the user to fetch. Use 'user1' for testing."", ""type"": ""str"", ""default"": ""string""}}}, {""name"": ""loginuser"", ""description"": ""Logs a user into the system using the given credentials and RapidAPI key."", ""parameters"": {""username"": {""description"": ""The username for login."", ""type"": ""str"", ""default"": ""string""}, ""password"": {""description"": ""The password for login in clear text."", ""type"": ""str"", ""default"": ""string""}}}, {""name"": ""tsv4"", ""description"": ""Retrieves the entry list of a specified subset from a dataset using the odem API."", ""parameters"": {""subset"": {""description"": ""The identifier of the data subset to retrieve."", ""type"": ""str"", ""default"": ""activome""}, ""dataset"": {""description"": ""The identifier of the dataset to query."", ""type"": ""str"", ""default"": ""frim1""}, ""format"": {""description"": ""The output format for the response. Defaults to 'tsv'."", ""type"": ""str, optional"", ""default"": ""tsv""}}}]"
421,55229,Query the 'students' table for students who have a GPA higher than 3.5 and are enrolled in the Computer Science program.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""students"", ""conditions"": [{""GPA"": {""$gt"": 3.5}}, {""program"": ""Computer Science""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
422,55339,"Simulate querying the 'users' table with conditions {'name': 'John', 'age': {'$gte': 18}}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""name"": ""John"", ""age"": {""$gte"": 18}}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""project_population"", ""description"": ""Projects the population size after a specified number of years."", ""parameters"": {""current_pop"": {""description"": ""The current population size."", ""type"": ""int"", ""default"": 1.2}, ""num_years"": {""description"": ""The number of years into the future to make the projection."", ""type"": ""int"", ""default"": 1.2}, ""annual_growth"": {""description"": ""The annual population growth rate as a percentage. Defaults to 1.2."", ""type"": ""float, optional""}}}, {""name"": ""calculate_order_total"", ""description"": ""Calculates the total cost of an order based on the items, quantities, and prices."", ""parameters"": {""items"": {""description"": ""A list of item names."", ""type"": ""List[str]""}, ""quantities"": {""description"": ""A list of corresponding quantities for each item."", ""type"": ""List[int]""}, ""prices"": {""description"": ""A list of corresponding prices for each item."", ""type"": ""List[float]""}}}, {""name"": ""project_investment_growth"", ""description"": ""Projects the growth of an investment over a specified number of years."", ""parameters"": {""principal"": {""description"": ""The initial investment amount."", ""type"": ""float"", ""default"": true}, ""annual_addition"": {""description"": ""The amount added to the investment annually."", ""type"": ""float"", ""default"": true}, ""years"": {""description"": ""The number of years to project the investment growth."", ""type"": ""int""}, ""return_rate"": {""description"": ""The annual return rate as a decimal (e.g., 0.07 for 7%)."", ""type"": ""float""}, ""inflation"": {""description"": ""A list of annual inflation rates as decimals."", ""type"": ""List[float]""}, ""inflation_adjusted"": {""description"": ""Whether to adjust the final value for inflation. Defaults to True."", ""type"": ""bool, optional""}}}]"
423,55565,Fetch the Osm-Bright style JSON and query LDU boundary for H3 index 321654987.,"[{""name"": ""get_style_json"", ""arguments"": {""style"": ""osm-bright""}}, {""name"": ""query_for_ldu_boundary_by_h3index"", ""arguments"": {""h3ndex"": 321654987}}]","[{""name"": ""get_style_json"", ""description"": ""Retrieves the style JSON for the specified map style."", ""parameters"": {""style"": {""description"": ""The style identifier to retrieve the corresponding style JSON."", ""type"": ""str"", ""default"": ""osm-bright""}}}, {""name"": ""query_for_ldu_boundary_by_h3index"", ""description"": ""Queries for a Local Delivery Unit (LDU) boundary by its H3 index."", ""parameters"": {""h3ndex"": {""description"": ""The H3 index used to query the LDU boundary."", ""type"": ""int"", ""default"": ""635775751926485631""}}}]"
424,55599,"For the Twitch channel 'LinusTech', fetch the channel panels. Then, search for animated stickers on Giphy with the search query 'gaming' and limit the results to 25 with a result offset of 50.","[{""name"": ""get_channel_panels"", ""arguments"": {""channel"": ""LinusTech""}}, {""name"": ""sticker_search"", ""arguments"": {""q"": ""gaming"", ""limit"": ""25"", ""offset"": ""50""}}]","[{""name"": ""get_channel_panels"", ""description"": ""Fetches the channel panels for a specified Twitch channel using the Twitch API."", ""parameters"": {""channel"": {""description"": ""The name of the Twitch channel to retrieve panels for."", ""type"": ""str"", ""default"": ""xQc""}}}, {""name"": ""sticker_search"", ""description"": ""Searches for animated stickers on Giphy using a search query and optional parameters."", ""parameters"": {""q"": {""description"": ""Search query term or phrase."", ""type"": ""str"", ""default"": ""cat""}, ""limit"": {""description"": ""Number of results to return, with a maximum of 100. Defaults to 25."", ""type"": ""str, optional"", ""default"": """"}, ""offset"": {""description"": ""Results offset, defaults to 0."", ""type"": ""str, optional"", ""default"": """"}, ""rating"": {""description"": ""Limit results to those rated (y, g, pg, pg-13, or r)."", ""type"": ""str, optional"", ""default"": """"}}}]"
425,55678,"Display the first 10 image results for the query 'cars' in English, boosting results from the United States.","[{""name"": ""search_image"", ""arguments"": {""q"": ""cars"", ""num"": 10, ""lr"": ""lang_en"", ""gl"": ""US""}}]","[{""name"": ""getcountrycode"", ""description"": ""Retrieves all available country codes using the specified API."", ""parameters"": {""getcountrycodes"": {""description"": ""A flag to specify whether to retrieve country codes. Defaults to 'true'."", ""type"": ""str"", ""default"": ""true""}}}, {""name"": ""search_image"", ""description"": ""Performs an image search using the Google Search JSON API and returns a JSON response containing information about images that match the search query."", ""parameters"": {""q"": {""description"": ""The search query for finding images."", ""type"": ""str"", ""default"": ""Newyork City""}, ""num"": {""description"": ""Number of search results to return. Valid values are between 1 and 20, inclusive. Default is 10."", ""type"": ""int, optional"", ""default"": ""10""}, ""lr"": {""description"": ""Restricts the search to documents written in a particular language. Default is 'lang_en'."", ""type"": ""str, optional"", ""default"": ""lang_en""}, ""start"": {""description"": ""The index of the first result to return. Default is 0."", ""type"": ""int, optional"", ""default"": ""0""}, ""gl"": {""description"": ""A two-letter country code that boosts search results whose country of origin matches the parameter value. Default is 'US'."", ""type"": ""str, optional"", ""default"": ""US""}}}]"
426,55794,"Simulate a query to the 'users' table with the conditions: {'age': 25, 'city': 'New York'} and {'age': 30, 'city': 'Los Angeles'}","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": 25, ""city"": ""New York""}, {""age"": 30, ""city"": ""Los Angeles""}]}}]","[{""name"": ""get_holidays_by_year"", ""description"": ""Retrieves the list of public holidays for a given year and country using the Nager.Date API."", ""parameters"": {""year"": {""description"": ""The year for which to retrieve the holidays."", ""type"": ""int""}, ""country_code"": {""description"": ""The two-letter ISO 3166-1 alpha-2 country code."", ""type"": ""str""}}}, {""name"": ""is_hotel_available"", ""description"": ""Checks the availability of a hotel for a given date range."", ""parameters"": {""hotel"": {""description"": ""The name of the hotel."", ""type"": ""str""}, ""city"": {""description"": ""The city where the hotel is located."", ""type"": ""str""}, ""checkin"": {""description"": ""The check-in date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}, ""checkout"": {""description"": ""The check-out date in the format \""YYYY-MM-DD\""."", ""type"": ""str""}}}, {""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}, {""name"": ""geocode_city"", ""description"": ""Retrieves the latitude and longitude coordinates of a given city using the Maps.co Geocoding API."", ""parameters"": {""city"": {""description"": ""The name of the city."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_valid_ip_address"", ""description"": ""Checks if a string is a valid IP address (IPv4)."", ""parameters"": {""ip"": {""description"": ""The string to check."", ""type"": ""str""}}}]"
427,55798,"Simulate a query on the 'products' table with conditions: {'price': 10, 'category': 'electronics'} and {'price': 20, 'category': 'clothing'}.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""products"", ""conditions"": [{""price"": 10, ""category"": ""electronics""}, {""price"": 20, ""category"": ""clothing""}]}}]","[{""name"": ""whole_foods_order"", ""description"": ""Places an order at Whole Foods."", ""parameters"": {""store_location"": {""description"": ""The location of the Whole Foods store."", ""type"": ""str""}, ""item_list"": {""description"": ""A list of items to order."", ""type"": ""list""}, ""order_size"": {""description"": ""The size of the order. Allowed values: \""small\"", \""medium\"", or \""large\""."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
428,55858,"Can you search for books on Open Library with the title '1984'? Also, I'd like to fetch search suggestions for the query 'machine learning' on YouTube.","[{""name"": ""search_title"", ""arguments"": {""title"": ""1984""}}, {""name"": ""search_suggestions"", ""arguments"": {""q"": ""machine learning""}}]","[{""name"": ""get_user_profile"", ""description"": ""Fetches the user profile from the 9GAG API using the provided username."", ""parameters"": {""username"": {""description"": ""The username of the user whose profile needs to be fetched."", ""type"": ""str"", ""default"": ""kleido007""}}}, {""name"": ""trending_gifs"", ""description"": ""Fetch currently trending GIFs from Giphy."", ""parameters"": {""limit"": {""description"": ""The maximum number of results to return. Defaults to 25 if not specified."", ""type"": ""str, optional"", ""default"": """"}, ""rating"": {""description"": ""Restricts results to the specified rating (y, g, pg, pg-13, or r)."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""get_chat_restrictions"", ""description"": ""Fetches chat restrictions for a given Twitch channel using the Toolbench RapidAPI."", ""parameters"": {""channel"": {""description"": ""The name of the Twitch channel to fetch chat restrictions for."", ""type"": ""str"", ""default"": ""xqc""}}}, {""name"": ""search_video_list_by_keywords"", ""description"": ""Search for videos on TikTok by specified keywords and additional filtering options."", ""parameters"": {""keywords"": {""description"": ""Keywords to search videos for."", ""type"": ""str"", ""default"": ""\u8e0a\u3063\u3066\u307f\u305f""}, ""sort_type"": {""description"": ""Criterion for sorting results. Defaults to '0'."", ""type"": ""str, optional"", ""default"": ""0""}, ""publish_time"": {""description"": ""Time filter for when videos were posted. Defaults to '0'."", ""type"": ""str, optional"", ""default"": ""0""}, ""cursor"": {""description"": ""Pagination cursor for navigating results. Defaults to '0'."", ""type"": ""str, optional"", ""default"": ""0""}, ""region"": {""description"": ""ISO region code to filter results by location. Defaults to 'US'."", ""type"": ""str, optional"", ""default"": ""US""}, ""count"": {""description"": ""Number of results to retrieve. Defaults to '10'."", ""type"": ""str, optional"", ""default"": ""10""}}}, {""name"": ""get_a_random_color"", ""description"": ""Fetches a random color or a specified number of random colors from the sRGB color space using the Toolbench RapidAPI."", ""parameters"": {""quantity"": {""description"": ""The number of colors to return. The maximum is 50. Defaults to 2. Values greater than 50 will default to 50, and values less than 1 will result in an empty array."", ""type"": ""int, optional"", ""default"": ""2""}}}, {""name"": ""search_title"", ""description"": ""Searches for books by a given title using the Open Library API."", ""parameters"": {""title"": {""description"": ""The title of the book to search for."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""search_suggestions"", ""description"": ""Fetches search suggestions for a given query using the Cheap YouTube API through RapidAPI."", ""parameters"": {""q"": {""description"": ""The search query for which to fetch suggestions."", ""type"": ""str"", ""default"": ""crypto""}}}, {""name"": ""sticker_search"", ""description"": ""Searches for animated stickers on Giphy using a search query and optional parameters."", ""parameters"": {""q"": {""description"": ""Search query term or phrase."", ""type"": ""str"", ""default"": ""cat""}, ""limit"": {""description"": ""Number of results to return, with a maximum of 100. Defaults to 25."", ""type"": ""str, optional"", ""default"": """"}, ""offset"": {""description"": ""Results offset, defaults to 0."", ""type"": ""str, optional"", ""default"": """"}, ""rating"": {""description"": ""Limit results to those rated (y, g, pg, pg-13, or r)."", ""type"": ""str, optional"", ""default"": """"}}}]"
429,56066,"Retrieve the channel panels for the Twitch channel 'iamtimcorey'. After that, search for animated stickers on Giphy with the search query 'cute cats' and limit the results to 50.","[{""name"": ""get_channel_panels"", ""arguments"": {""channel"": ""iamtimcorey""}}, {""name"": ""sticker_search"", ""arguments"": {""q"": ""cute cats"", ""limit"": ""50""}}]","[{""name"": ""get_channel_panels"", ""description"": ""Fetches the channel panels for a specified Twitch channel using the Twitch API."", ""parameters"": {""channel"": {""description"": ""The name of the Twitch channel to retrieve panels for."", ""type"": ""str"", ""default"": ""xQc""}}}, {""name"": ""sticker_search"", ""description"": ""Searches for animated stickers on Giphy using a search query and optional parameters."", ""parameters"": {""q"": {""description"": ""Search query term or phrase."", ""type"": ""str"", ""default"": ""cat""}, ""limit"": {""description"": ""Number of results to return, with a maximum of 100. Defaults to 25."", ""type"": ""str, optional"", ""default"": """"}, ""offset"": {""description"": ""Results offset, defaults to 0."", ""type"": ""str, optional"", ""default"": """"}, ""rating"": {""description"": ""Limit results to those rated (y, g, pg, pg-13, or r)."", ""type"": ""str, optional"", ""default"": """"}}}]"
430,56077,"Perform a license plate lookup for 'XYZ789' in California and 'LMN012' in Illinois. Also, find the top 15 Google search results for the query 'climate change effects'.","[{""name"": ""license_plate_lookup"", ""arguments"": {""license_plate"": ""XYZ789"", ""state_code"": ""CA""}}, {""name"": ""license_plate_lookup"", ""arguments"": {""license_plate"": ""LMN012"", ""state_code"": ""IL""}}, {""name"": ""search"", ""arguments"": {""query"": ""climate change effects"", ""limit"": 15}}]","[{""name"": ""search"", ""description"": ""Searches the Google Search API using the provided query and parameters."", ""parameters"": {""query"": {""description"": ""The search query. You can utilize advanced Google Search parameters, e.g., 'adele site:youtube.com', 'harry potter filetype:pdf', 'inurl:store', 'ronaldo -cristiano'."", ""type"": ""str"", ""default"": ""Nike""}, ""limit"": {""description"": ""The maximum number of search results to return. The default is 10. The recommended maximum value is 300."", ""type"": ""int, optional"", ""default"": ""10""}, ""related_keywords"": {""description"": ""Whether to include related keywords in the search results. The default is 'true'. Setting this to 'true' can increase API latency."", ""type"": ""str, optional"", ""default"": ""true""}}}, {""name"": ""license_plate_lookup"", ""description"": ""Perform a license plate lookup using the provided license plate number and state code."", ""parameters"": {""license_plate"": {""description"": ""The license plate number to look up."", ""type"": ""str"", ""default"": ""S8TAN""}, ""state_code"": {""description"": ""The state code where the license plate is registered (e.g., 'TX' for Texas)."", ""type"": ""str"", ""default"": ""AL""}}}, {""name"": ""cities_search"", ""description"": ""Search for cities based on various criteria and return a list of matching cities."", ""parameters"": {""q"": {""description"": ""The query string to search for cities by name."", ""type"": ""str"", ""default"": ""kan""}, ""page"": {""description"": ""The page number of the search results."", ""type"": ""int, optional"", ""default"": """"}, ""country_code"": {""description"": ""The country code to filter the search results."", ""type"": ""str, optional"", ""default"": """"}, ""sortorder"": {""description"": ""The order in which to sort the search results."", ""type"": ""str, optional"", ""default"": """"}, ""sortby"": {""description"": ""The attribute to sort the search results by."", ""type"": ""str, optional"", ""default"": """"}, ""country_name"": {""description"": ""The name of the country to filter the search results."", ""type"": ""str, optional"", ""default"": """"}, ""country_id"": {""description"": ""The ID of the country to filter the search results."", ""type"": ""int, optional"", ""default"": """"}, ""limit"": {""description"": ""The maximum number of search results to return."", ""type"": ""int, optional"", ""default"": """"}, ""state_code"": {""description"": ""The state code to filter the search results."", ""type"": ""str, optional"", ""default"": """"}, ""state_id"": {""description"": ""The ID of the state to filter the search results."", ""type"": ""int, optional"", ""default"": """"}, ""state_name"": {""description"": ""The name of the state to filter the search results."", ""type"": ""str, optional"", ""default"": """"}}}]"
431,56200,Get the social profile links for the query 'John Doe' across all supported social networks.,"[{""name"": ""search_social_links"", ""arguments"": {""query"": ""John Doe""}}]","[{""name"": ""consulta_receita_federal"", ""description"": ""Fetch data from the Receita Federal using a given tax ID."", ""parameters"": {""taxid"": {""description"": ""The tax ID to search for in the Receita Federal database."", ""type"": ""str"", ""default"": ""37335118000180""}, ""maxage"": {""description"": ""The maximum age of the data to be fetched. Defaults to 30."", ""type"": ""int, optional"", ""default"": ""30""}}}, {""name"": ""search_social_links"", ""description"": ""Search for social profile links based on a given query or keywords."", ""parameters"": {""query"": {""description"": ""The search query or keywords to find social profile links."", ""type"": ""str"", ""default"": ""John Smith""}, ""social_networks"": {""description"": ""A comma-delimited list of social networks to search for."", ""type"": ""str, optional"", ""default"": ""facebook,tiktok,instagram,snapchat,twitter,youtube,linkedin,github,pinterest""}}}]"
432,56269,"List the first 100 episodes of the podcast show with the ID 'xyz456' and get related content for the song with the browse ID 'def123'. Furthermore, perform a multi-search on Genius for the query 'friendship' and display the results in HTML format.","[{""name"": ""list_podcast_episodes"", ""arguments"": {""showid"": ""xyz456"", ""limit"": 100}}, {""name"": ""get_song_related"", ""arguments"": {""browse_id"": ""def123""}}, {""name"": ""multi_search"", ""arguments"": {""q"": ""friendship"", ""per_page"": 5, ""text_format"": ""html""}}]","[{""name"": ""getallquotes"", ""description"": ""Fetch all quotes from the Radio World API with optional pagination and API key."", ""parameters"": {""limit"": {""description"": ""The number of quotes to fetch per page. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}, ""page"": {""description"": ""The page number to fetch. Defaults to 1."", ""type"": ""int, optional"", ""default"": ""1""}}}, {""name"": ""get_radio_playlist"", ""description"": ""Fetches a radio playlist for a given artist or song using the Spotify API."", ""parameters"": {""uri"": {""description"": ""The URI of the artist or song for which to generate the radio playlist."", ""type"": ""str"", ""default"": ""spotify:artist:2w9zwq3AktTeYYMuhMjju8""}}}, {""name"": ""hot_trending_songs_powered_by_twitter"", ""description"": ""Fetch the HOT TRENDING SONGS POWERED BY TWITTER chart information for a specific date and range using the Toolbench RapidAPI key."", ""parameters"": {""date"": {""description"": ""The date for which to fetch the chart information, formatted as 'YYYY-MM-DD'."", ""type"": ""str"", ""default"": ""2021-11-06""}, ""range"": {""description"": ""The range of the chart, with a maximum value between 1-20."", ""type"": ""str"", ""default"": ""1-10""}}}, {""name"": ""new_releases"", ""description"": ""Retrieves new music releases from Spotify based on the given country code."", ""parameters"": {""country"": {""description"": ""The country code to fetch new releases for. Example values include 'US', 'CA', 'SE', 'IN', 'UK'."", ""type"": ""str"", ""default"": ""us""}}}, {""name"": ""list_podcast_episodes"", ""description"": ""Gets a list of episodes for a given podcast show from the Spotify Scraper API."", ""parameters"": {""showid"": {""description"": ""The unique identifier of the podcast show."", ""type"": ""str"", ""default"": ""4oTBzqC3DHbaKNFq2YXpQw""}, ""limit"": {""description"": ""The maximum number of items returned per request. Defaults to `100`."", ""type"": ""int, optional"", ""default"": """"}, ""offset"": {""description"": ""The number of items to skip before starting to collect the result set. Defaults to `0`."", ""type"": ""int, optional"", ""default"": """"}}}, {""name"": ""get_song_related"", ""description"": ""Fetches related content for a song using the YouTube Music API."", ""parameters"": {""browse_id"": {""description"": ""The unique identifier for the song being queried."", ""type"": ""str"", ""default"": ""MPTRt_ZXONnvFeQpN""}}}, {""name"": ""multi_search"", ""description"": ""Performs a multi-search on Genius based on the given query, returning paginated results."", ""parameters"": {""q"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": """"}, ""per_page"": {""description"": ""The number of results to return per request. Defaults to 3."", ""type"": ""int, optional"", ""default"": ""3""}, ""page"": {""description"": ""The number of results to return per request. Defaults to 3."", ""type"": ""int, optional"", ""default"": ""1""}, ""text_format"": {""description"": ""The format for text bodies related to the document. Can be one or more of `dom`, `plain`, `markdown`, and `html`, separated by commas. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}]"
433,56306,"What are the latest discussions about 'cloud computing'? Also, find suggestions for the search query 'AWS services'.","[{""name"": ""search_suggestions"", ""arguments"": {""query"": ""cloud computing""}}, {""name"": ""search_suggestions"", ""arguments"": {""query"": ""AWS services""}}]","[{""name"": ""search_suggestions"", ""description"": ""Fetches search suggestions from the Twitter API using specified query parameters."", ""parameters"": {""query"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": ""elonmusk""}, ""twttr_session"": {""description"": ""The Twitter session ID for authenticated requests. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""twttr_proxy"": {""description"": ""The Twitter proxy server address. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""cursor"": {""description"": ""The cursor for paginated results. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}]"
434,56331,Simulate a query on the 'Users' table where the condition is that the user's age must be greater than 18.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""Users"", ""conditions"": [{""age"": {""$gt"": 18}}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
435,56375,What are the auto-complete suggestions for the stock market query 'Apple'?,"[{""name"": ""market_auto_complete"", ""arguments"": {""query"": ""Apple""}}]","[{""name"": ""market_auto_complete"", ""description"": ""Fetch auto-complete suggestions for stock market queries."", ""parameters"": {""query"": {""description"": ""The search query for which auto-complete suggestions are needed."", ""type"": ""str"", ""default"": ""nasdaq""}}}]"
436,56380,"Get the weather data for the city of London, United Kingdom based on geographic coordinates and search for matching cities and towns for the location query '48.8567,2.3508'.","[{""name"": ""by_geographic_coordinates"", ""arguments"": {""lon"": -0.1278, ""lat"": 51.5074}}, {""name"": ""search_autocomplete_api"", ""arguments"": {""q"": ""48.8567,2.3508""}}]","[{""name"": ""search_autocomplete_api"", ""description"": ""Search or Autocomplete API returns matching cities and towns based on the query."", ""parameters"": {""q"": {""description"": ""Query parameter used to obtain matching locations. Supported formats include:"", ""type"": ""str"", ""default"": """"}}}, {""name"": ""get_hourly_forecast"", ""description"": ""Retrieves the hourly weather forecast for a specified city using the RapidAPI Cloud Cast service."", ""parameters"": {""city"": {""description"": ""The name of the city for which to retrieve the hourly weather forecast."", ""type"": ""str"", ""default"": ""New York""}}}, {""name"": ""get_5_day_3_hour_forecast_data"", ""description"": ""Fetches the 5-day weather forecast data with 3-hour intervals for a specified location."", ""parameters"": {""q"": {""description"": ""The location query in the format \""{city name},{country code}\"". The city name and country code should be divided by a comma, and the country code should follow ISO 3166 standards. Defaults to 'dallas,us'."", ""type"": ""str"", ""default"": ""dallas,us""}}}, {""name"": ""by_geographic_coordinates"", ""description"": ""Fetches weather data based on geographic coordinates."", ""parameters"": {""lon"": {""description"": ""Longitude of the geographic coordinates."", ""type"": ""int"", ""default"": ""139""}, ""lat"": {""description"": ""Latitude of the geographic coordinates."", ""type"": ""int"", ""default"": ""35""}, ""units"": {""description"": ""Units of measurement. Options are 'standard', 'metric', and 'imperial'. Defaults to 'standard' if not specified."", ""type"": ""str, optional"", ""default"": """"}, ""lang"": {""description"": ""Language for the output. Defaults to the API's default language if not specified."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""hourly_forecast_48_hours"", ""description"": ""Fetches a 48-hour weather forecast for the specified latitude and longitude coordinates."", ""parameters"": {""latitude"": {""description"": ""The latitude coordinate for the forecast location."", ""type"": ""str"", ""default"": ""-22.95""}, ""longitude"": {""description"": ""The longitude coordinate for the forecast location."", ""type"": ""str"", ""default"": ""-43.21""}}}]"
437,56386,Get the style JSON for Osm-Bright with Hillshading V1 overlay and query LDU boundary for H3 index 987654321.,"[{""name"": ""get_style_json"", ""arguments"": {""style"": ""osm-bright-hillshading-v1""}}, {""name"": ""query_for_ldu_boundary_by_h3index"", ""arguments"": {""h3ndex"": 987654321}}]","[{""name"": ""get_style_json"", ""description"": ""Retrieves the style JSON for the specified map style."", ""parameters"": {""style"": {""description"": ""The style identifier to retrieve the corresponding style JSON."", ""type"": ""str"", ""default"": ""osm-bright""}}}, {""name"": ""query_for_ldu_boundary_by_h3index"", ""description"": ""Queries for a Local Delivery Unit (LDU) boundary by its H3 index."", ""parameters"": {""h3ndex"": {""description"": ""The H3 index used to query the LDU boundary."", ""type"": ""int"", ""default"": ""635775751926485631""}}}]"
438,56417,"Find detailed information about the person using the email address 'john.doe@example.com'. Also, retrieve user information from Hacker News using the ID 'abc123'. Lastly, get autocomplete suggestions for the query 'Sydney apartments' using the Realty-in-AU API.","[{""name"": ""email"", ""arguments"": {""email"": ""john.doe@example.com""}}, {""name"": ""user_by_id"", ""arguments"": {""is_id"": ""abc123""}}, {""name"": ""auto_complete"", ""arguments"": {""query"": ""Sydney apartments""}}]","[{""name"": ""email"", ""description"": ""Retrieve detailed information about a person using their email address via the RapidAPI enrichment tool."", ""parameters"": {""email"": {""description"": ""The email address of the person to be enriched."", ""type"": ""str"", ""default"": ""carynburns83@gmail.com""}}}, {""name"": ""user_by_id"", ""description"": ""Retrieves user information from the Hacker News API given a user ID."", ""parameters"": {""is_id"": {""description"": ""Case-sensitive user ID."", ""type"": ""str"", ""default"": ""wing328hk""}}}, {""name"": ""auto_complete"", ""description"": ""Get autocomplete suggestions for a given query using the Realty-in-AU API."", ""parameters"": {""query"": {""description"": ""Any term or phrase you are familiar with. It can be an address or a keyword for which you want autocomplete suggestions."", ""type"": ""str"", ""default"": ""sydney""}}}]"
439,56424,"What are the trending topics related to Python programming? Also, can you find suggestions for the search query 'Twitter API'?","[{""name"": ""search_suggestions"", ""arguments"": {""query"": ""Python programming""}}, {""name"": ""search_suggestions"", ""arguments"": {""query"": ""Twitter API""}}]","[{""name"": ""search_suggestions"", ""description"": ""Fetches search suggestions from the Twitter API using specified query parameters."", ""parameters"": {""query"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": ""elonmusk""}, ""twttr_session"": {""description"": ""The Twitter session ID for authenticated requests. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""twttr_proxy"": {""description"": ""The Twitter proxy server address. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""cursor"": {""description"": ""The cursor for paginated results. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}]"
440,56498,"Update the data on the endpoint with the following information: info1='Four', info2='Five', info3='Six'. Then, perform a search query for companies related to 'technology' and 'innovation', and return the results from page '2'.","[{""name"": ""update"", ""arguments"": {""info3"": ""Six"", ""info1"": ""Four"", ""info2"": ""Five""}}, {""name"": ""search"", ""arguments"": {""terms"": ""technology,innovation"", ""page"": ""2""}}]","[{""name"": ""update"", ""description"": ""Updates data on a specified endpoint using the provided information and RapidAPI key."", ""parameters"": {""info3"": {""description"": ""The third piece of information to be sent as a query parameter."", ""type"": ""str"", ""default"": ""333""}, ""info1"": {""description"": ""The first piece of information to be sent as a query parameter."", ""type"": ""str"", ""default"": ""111""}, ""info2"": {""description"": ""The second piece of information to be sent as a query parameter."", ""type"": ""str"", ""default"": ""222""}}}, {""name"": ""search"", ""description"": ""This function performs a search query using the Market Intelligence by Automata API, returning information about related companies based on the provided search terms."", ""parameters"": {""terms"": {""description"": ""Search terms separated by commas, which are used to filter the companies. Example: 'cloud computing,enterprise,security'."", ""type"": ""str"", ""default"": """"}, ""page"": {""description"": ""Page number for paginated search results. Default is '0'. Example: '0', '1', '2', etc."", ""type"": ""str, optional"", ""default"": ""0""}}}]"
441,56545,"Simulate a query to the 'users' table with the conditions of 'age' being greater than 30, 'city' being 'New York', and 'email' containing 'gmail.com'.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": {""$gt"": 30}}, {""city"": ""New York""}, {""email"": {""$regex"": "".*gmail.com.*""}}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}, {""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}]"
442,56556,Simulate querying the 'students' table with conditions: grade='A' and school_year='2021'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""students"", ""conditions"": [{""grade"": ""A""}, {""school_year"": ""2021""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
443,56564,Fetch the API result using the request ID 98765 and search for a product with the query 'laptop' and action 'search' on the Tokopedia API.,"[{""name"": ""get_call"", ""arguments"": {""request_id"": ""98765""}}, {""name"": ""search_product"", ""arguments"": {""query"": ""laptop"", ""act"": ""search""}}]","[{""name"": ""get_call"", ""description"": ""Fetches the API result using the given request ID."", ""parameters"": {""request_id"": {""description"": ""The unique identifier for the API request."", ""type"": ""str"", ""default"": ""76d1c748-51ed-435b-bcd8-3d9c9d3eb68a""}}}, {""name"": ""search_product"", ""description"": ""This function searches for a product using the Tokopedia API based on the given query and act parameters."", ""parameters"": {""query"": {""description"": ""The search query string for the product to be searched."", ""type"": ""str"", ""default"": ""Celana Jeans""}, ""act"": {""description"": ""The action parameter to specify the type of search."", ""type"": ""str"", ""default"": ""search""}}}, {""name"": ""posts"", ""description"": ""Fetches posts of a creator from the Patreon API using the given parameters."", ""parameters"": {""creator_id"": {""description"": ""The ID of the creator whose posts are to be fetched."", ""type"": ""int"", ""default"": ""2416483""}, ""cursor"": {""description"": ""The cursor for pagination to the next page of results. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""amount"": {""description"": ""The number of posts to return. Defaults to 10. Maximum is 500."", ""type"": ""int, optional"", ""default"": ""10""}}}]"
444,56795,"What are some auto-complete suggestions for the query 'tec' in the stock market? Also, fetch the cash flow statement for Apple Inc.","[{""name"": ""market_auto_complete"", ""arguments"": {""query"": ""tec""}}, {""name"": ""cash_flow_statement"", ""arguments"": {""ticker"": ""AAPL""}}]","[{""name"": ""market_auto_complete"", ""description"": ""Fetch auto-complete suggestions for stock market queries."", ""parameters"": {""query"": {""description"": ""The search query for which auto-complete suggestions are needed."", ""type"": ""str"", ""default"": ""nasdaq""}}}, {""name"": ""cash_flow_statement"", ""description"": ""Fetches the company cash flow statement by year, with data in thousands of dollars."", ""parameters"": {""ticker"": {""description"": ""The stock ticker symbol of the company."", ""type"": ""str"", ""default"": ""AAPL""}}}]"
445,56834,"Find auto-complete suggestions for the stock market query 'bio'. Additionally, get the cash flow statement for Microsoft Corporation.","[{""name"": ""market_auto_complete"", ""arguments"": {""query"": ""bio""}}, {""name"": ""cash_flow_statement"", ""arguments"": {""ticker"": ""MSFT""}}]","[{""name"": ""market_auto_complete"", ""description"": ""Fetch auto-complete suggestions for stock market queries."", ""parameters"": {""query"": {""description"": ""The search query for which auto-complete suggestions are needed."", ""type"": ""str"", ""default"": ""nasdaq""}}}, {""name"": ""cash_flow_statement"", ""description"": ""Fetches the company cash flow statement by year, with data in thousands of dollars."", ""parameters"": {""ticker"": {""description"": ""The stock ticker symbol of the company."", ""type"": ""str"", ""default"": ""AAPL""}}}]"
446,56916,What are the auto-complete suggestions for the stock market query 'Tesla' and 'Microsoft'?,"[{""name"": ""market_auto_complete"", ""arguments"": {""query"": ""Tesla""}}, {""name"": ""market_auto_complete"", ""arguments"": {""query"": ""Microsoft""}}]","[{""name"": ""market_auto_complete"", ""description"": ""Fetch auto-complete suggestions for stock market queries."", ""parameters"": {""query"": {""description"": ""The search query for which auto-complete suggestions are needed."", ""type"": ""str"", ""default"": ""nasdaq""}}}]"
447,57050,"What is the ZIP code for the IP address 8.8.8.8? Also, simulate a database query on a table named 'users' with conditions [{'age': 30}, {'location': 'New York'}].","[{""name"": ""get_ip_zipcode"", ""arguments"": {""ip"": ""8.8.8.8""}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": 30}, {""location"": ""New York""}]}}]","[{""name"": ""get_ip_zipcode"", ""description"": ""Retrieves the ZIP code of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}, {""name"": ""calculate_calorie_intake"", ""description"": ""Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals."", ""parameters"": {""weight_kg"": {""description"": ""Body weight in kilograms."", ""type"": ""float""}, ""height_cm"": {""description"": ""Height in centimeters."", ""type"": ""float""}, ""age"": {""description"": ""Age in years."", ""type"": ""int""}, ""sex"": {""description"": ""Biological sex, either 'male' or 'female'."", ""type"": ""str""}, ""activity_level"": {""description"": ""Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active)."", ""type"": ""int""}, ""goal"": {""description"": ""Fitness goal, either 'lose', 'maintain', or 'gain'."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}]"
448,57233,Find the latitude and longitude coordinates of the IP address '8.8.8.8' and query the 'devices' table with the condition {'device_ip': '8.8.8.8'}.,"[{""name"": ""get_ip_location"", ""arguments"": {""ip"": ""8.8.8.8""}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""devices"", ""conditions"": [{""device_ip"": ""8.8.8.8""}]}}]","[{""name"": ""is_valid_ip_address"", ""description"": ""Checks if a string is a valid IP address (IPv4)."", ""parameters"": {""ip"": {""description"": ""The string to check."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
449,57243,You are a customer service representative and a customer has called in with a query about their phone line. You need to check if their phone line is a landline or a mobile line. The customer's phone number is (555) 987-6543. How can you use the `checkthatphone` function to find this information?,"[{""name"": ""checkthatphone"", ""arguments"": {""phone"": ""(555) 987-6543""}}]","[{""name"": ""checkthatphone"", ""description"": ""Validates a given United States phone number and optionally checks its details like carrier look-up, line type, portability status, geoIP, and timezone using an external API service."", ""parameters"": {""phone"": {""description"": ""The United States phone number to validate."", ""type"": ""str"", ""default"": ""8182925409""}, ""ip"": {""description"": ""The IP address to associate with the request. Defaults to '172.95.90.55'."", ""type"": ""str, optional"", ""default"": ""172.95.90.55""}}}]"
450,57293,Find the ID of the movie 'The Lord of the Rings' and get a video with the query 'king of the world'.,"[{""name"": ""get_id"", ""arguments"": {""q"": ""The Lord of the Rings""}}, {""name"": ""get_video"", ""arguments"": {""q"": ""king of the world""}}]","[{""name"": ""get_id"", ""description"": ""Fetches the ID of a movie based on the given search query from the RapidAPI similar movies service."", ""parameters"": {""q"": {""description"": ""The search string for the movie title."", ""type"": ""str"", ""default"": ""titanic""}}}, {""name"": ""get_video"", ""description"": ""Fetches video data using a query string from the Playphrase API."", ""parameters"": {""q"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": """"}}}]"
451,57304,"Perform a search query for companies related to 'cloud computing' and 'enterprise', and return the results from page '1'.","[{""name"": ""search"", ""arguments"": {""terms"": ""cloud computing,enterprise"", ""page"": ""1""}}]","[{""name"": ""update"", ""description"": ""Updates data on a specified endpoint using the provided information and RapidAPI key."", ""parameters"": {""info3"": {""description"": ""The third piece of information to be sent as a query parameter."", ""type"": ""str"", ""default"": ""333""}, ""info1"": {""description"": ""The first piece of information to be sent as a query parameter."", ""type"": ""str"", ""default"": ""111""}, ""info2"": {""description"": ""The second piece of information to be sent as a query parameter."", ""type"": ""str"", ""default"": ""222""}}}, {""name"": ""search"", ""description"": ""This function performs a search query using the Market Intelligence by Automata API, returning information about related companies based on the provided search terms."", ""parameters"": {""terms"": {""description"": ""Search terms separated by commas, which are used to filter the companies. Example: 'cloud computing,enterprise,security'."", ""type"": ""str"", ""default"": """"}, ""page"": {""description"": ""Page number for paginated search results. Default is '0'. Example: '0', '1', '2', etc."", ""type"": ""str, optional"", ""default"": ""0""}}}]"
452,57328,"Find EV charging stations near the coordinates 34.0522° N, 118.2437° W with a limit of 10 results and a query for 'EVgo' stations.","[{""name"": ""search_by_coordinates_point"", ""arguments"": {""lng"": ""-118.2437"", ""lat"": ""34.0522"", ""query"": ""EVgo"", ""limit"": ""10""}}]","[{""name"": ""get_a_specific_employee_by_employee_id"", ""description"": ""Fetches details of a specific employee by their unique employee ID."", ""parameters"": {""is_id"": {""description"": ""The unique ID of the employee whose details are to be fetched."", ""type"": ""int"", ""default"": ""715505""}}}, {""name"": ""document"", ""description"": ""Fetches the authorized blob URI for a court document using the provided document ID and RapidAPI key."", ""parameters"": {""documentid"": {""description"": ""The ID of the document to fetch. Defaults to '41aac429-40dd-ea11-a813-000d3a79365a'."", ""type"": ""str, optional"", ""default"": ""41aac429-40dd-ea11-a813-000d3a79365a""}}}, {""name"": ""search_by_coordinates_point"", ""description"": ""Search for EV charging stations near specific geographic coordinates."", ""parameters"": {""lng"": {""description"": ""Longitude of the geographic coordinates point to search nearby."", ""type"": ""str"", ""default"": ""-121.925337""}, ""lat"": {""description"": ""Latitude of the geographic coordinates point to search nearby."", ""type"": ""str"", ""default"": ""37.359428""}, ""query"": {""description"": ""Keyword to filter the search results by a specific query, such as 'evgo', 'tesla', or 'chargepoint'."", ""type"": ""str, optional"", ""default"": """"}, ""min_kw"": {""description"": ""Minimum power in kilowatts to filter the availability of connectors."", ""type"": ""str, optional"", ""default"": """"}, ""max_kw"": {""description"": ""Maximum power in kilowatts to filter the availability of connectors."", ""type"": ""str, optional"", ""default"": """"}, ""limit"": {""description"": ""Maximum number of results to return. Allowed values range from 1 to 500."", ""type"": ""str, optional, default='20'"", ""default"": ""20""}, ""available"": {""description"": ""Filter to find EV charging stations with an available connector."", ""type"": ""str, optional"", ""default"": """"}, ""type"": {""description"": ""Filter to return EV charging stations with connectors of specified types, provided as a comma-delimited list, e.g., 'CHAdeMO', 'J1772,CCS'."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""getuserbyid"", ""description"": ""Fetches and returns user information by user ID from a specified API."", ""parameters"": {""is_id"": {""description"": ""The ID of the user to fetch information for."", ""type"": ""str"", ""default"": ""1""}}}]"
453,57332,"What are the top categories for the website 'https://www.facebook.com'? Moreover, find the entity data for UID 789012 from the OFAC service. Furthermore, fetch location suggestions based on the query 'Chicago' from the Bayut API.","[{""name"": ""categorize_website"", ""arguments"": {""url"": ""https://www.facebook.com""}}, {""name"": ""get_data_entity_uid"", ""arguments"": {""uid"": 789012}}, {""name"": ""auto_complete"", ""arguments"": {""query"": ""Chicago""}}]","[{""name"": ""get_data_entity_uid"", ""description"": ""Fetches an entity record from the OFAC service using a unique identifier (UID)."", ""parameters"": {""uid"": {""description"": ""The unique identifier of the entity to retrieve."", ""type"": ""int"", ""default"": ""7178""}}}, {""name"": ""categorize_website"", ""description"": ""Fetches and returns the top categories for a given website using the Website Categorization API."", ""parameters"": {""url"": {""description"": ""The URL of the website to be categorized."", ""type"": ""str"", ""default"": ""vercel.com""}}}, {""name"": ""auto_complete"", ""description"": ""Fetches location suggestions based on a given search term or phrase from the Bayut API."", ""parameters"": {""query"": {""description"": ""The term or phrase to search for location suggestions."", ""type"": ""str"", ""default"": ""abu dhabi""}, ""hitsperpage"": {""description"": ""The number of results to return per page. Default is 25."", ""type"": ""int, optional"", ""default"": ""25""}, ""lang"": {""description"": ""The language of the results. Options are 'en' or 'ar'. Default is 'en'."", ""type"": ""str, optional"", ""default"": ""en""}, ""page"": {""description"": ""The number of results to return per page. Default is 25."", ""type"": ""int, optional"", ""default"": ""0""}}}]"
454,57347,"Please search for a product on Tokopedia using the query 'headphones' and the action 'search'. Also, perform another search using the query 'camera' and the action 'search'. Lastly, repeat the search using the query 'smartwatch' and the action 'search'. For all three searches, could you use the custom API key 'mno345'?","[{""name"": ""search_product"", ""arguments"": {""query"": ""headphones"", ""act"": ""search""}}, {""name"": ""search_product"", ""arguments"": {""query"": ""camera"", ""act"": ""search""}}, {""name"": ""search_product"", ""arguments"": {""query"": ""smartwatch"", ""act"": ""search""}}]","[{""name"": ""search_product"", ""description"": ""This function searches for a product using the Tokopedia API based on the given query and act parameters."", ""parameters"": {""query"": {""description"": ""The search query string for the product to be searched."", ""type"": ""str"", ""default"": ""Celana Jeans""}, ""act"": {""description"": ""The action parameter to specify the type of search."", ""type"": ""str"", ""default"": ""search""}}}]"
455,57350,Retrieve the first 10 search results for the query 'data science' in Australia.,"[{""name"": ""search"", ""arguments"": {""q"": ""data science"", ""gl"": ""AU"", ""num"": 10}}]","[{""name"": ""search"", ""description"": ""Perform a Google search and retrieve the search results using the specified parameters."", ""parameters"": {""q"": {""description"": ""The search query term."", ""type"": ""str"", ""default"": ""liverpool""}, ""gl"": {""description"": ""The geographic location of the search results (e.g., 'US'). Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""cr"": {""description"": ""The country of the search results (e.g., 'countryUS'). Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""tbs"": {""description"": ""The time-based search parameters (e.g., 'qdr:d' for past 24 hours). Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""num"": {""description"": ""The number of search results to return. Defaults to 20."", ""type"": ""int, optional"", ""default"": ""20""}, ""start"": {""description"": ""The index of the first result to return. Defaults to None."", ""type"": ""int, optional"", ""default"": """"}, ""hl"": {""description"": ""The language of the search results (e.g., 'en'). Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}]"
456,57359,"Perform a search query for companies related to 'education' and 'e-learning', and return the results from page '5'. Then, update the data on the endpoint with the following information: info1='Thirteen', info2='Fourteen', info3='Fifteen'.","[{""name"": ""search"", ""arguments"": {""terms"": ""education,e-learning"", ""page"": ""5""}}, {""name"": ""update"", ""arguments"": {""info3"": ""Fifteen"", ""info1"": ""Thirteen"", ""info2"": ""Fourteen""}}]","[{""name"": ""update"", ""description"": ""Updates data on a specified endpoint using the provided information and RapidAPI key."", ""parameters"": {""info3"": {""description"": ""The third piece of information to be sent as a query parameter."", ""type"": ""str"", ""default"": ""333""}, ""info1"": {""description"": ""The first piece of information to be sent as a query parameter."", ""type"": ""str"", ""default"": ""111""}, ""info2"": {""description"": ""The second piece of information to be sent as a query parameter."", ""type"": ""str"", ""default"": ""222""}}}, {""name"": ""search"", ""description"": ""This function performs a search query using the Market Intelligence by Automata API, returning information about related companies based on the provided search terms."", ""parameters"": {""terms"": {""description"": ""Search terms separated by commas, which are used to filter the companies. Example: 'cloud computing,enterprise,security'."", ""type"": ""str"", ""default"": """"}, ""page"": {""description"": ""Page number for paginated search results. Default is '0'. Example: '0', '1', '2', etc."", ""type"": ""str, optional"", ""default"": ""0""}}}]"
457,57466,Find details for Apple Inc. and Alphabet Inc. using the fetch_company_details function and get auto-complete suggestions for the query 'phones' using the auto_complete_deprecating function.,"[{""name"": ""fetch_company_details"", ""arguments"": {""query"": ""Apple Inc.""}}, {""name"": ""fetch_company_details"", ""arguments"": {""query"": ""Alphabet Inc.""}}, {""name"": ""auto_complete_deprecating"", ""arguments"": {""query"": ""phones""}}]","[{""name"": ""amazonproductreviews"", ""description"": ""Retrieves product reviews from Amazon using the provided API key, domain, and product ASIN."", ""parameters"": {""pagenum"": {""description"": ""The page number of reviews to retrieve. Each page contains 10 reviews."", ""type"": ""int"", ""default"": ""1""}, ""domain"": {""description"": ""The Amazon domain to query reviews from (e.g., 'amazon.com', 'amazon.in', 'amazon.co.uk')."", ""type"": ""str"", ""default"": ""amazon.com""}, ""asin"": {""description"": ""The Amazon Standard Identification Number (ASIN) of the product to retrieve reviews for."", ""type"": ""str"", ""default"": ""B01H6GUCCQ""}}}, {""name"": ""auto_complete_deprecating"", ""description"": ""Fetch auto-complete suggestions for a given query from the specified API."", ""parameters"": {""query"": {""description"": ""The term or phrase for which to get suggestions."", ""type"": ""str"", ""default"": ""bikini tops""}}}, {""name"": ""fetch_company_details"", ""description"": ""Fetch company details by company name using the Toolbench RapidAPI."", ""parameters"": {""query"": {""description"": ""The company name to search for."", ""type"": ""str"", ""default"": ""saharsh""}}}]"
458,57613,Check if '256.256.256.256' is a valid IP address and query the 'logs' table with the condition {'user_ip': '256.256.256.256'}.,"[{""name"": ""is_valid_ip_address"", ""arguments"": {""ip"": ""256.256.256.256""}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""logs"", ""conditions"": [{""user_ip"": ""256.256.256.256""}]}}]","[{""name"": ""is_valid_ip_address"", ""description"": ""Checks if a string is a valid IP address (IPv4)."", ""parameters"": {""ip"": {""description"": ""The string to check."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
459,57805,Simulate a query on the 'employees' table with the conditions that the employee's age is between 25 and 35 and their department is 'sales'.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""employees"", ""conditions"": [{""age"": {""$gte"": 25, ""$lte"": 35}, ""department"": ""sales""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
460,57873,Retrieve the first 10 articles from page 4 of climate news without specifying a search query.,"[{""name"": ""article_page"", ""arguments"": {""is_id"": 4, ""limit"": 10}}]","[{""name"": ""search"", ""description"": ""Searches across the entire news index from the last 14 days using the BizToc API."", ""parameters"": {""q"": {""description"": ""The search query string. All provided terms are considered required by the API."", ""type"": ""str"", ""default"": ""apple""}}}, {""name"": ""article_page"", ""description"": ""Fetches a page of articles based on the provided page ID, with an optional limit on the number of articles returned and a specified RapidAPI key."", ""parameters"": {""is_id"": {""description"": ""The ID of the page to fetch articles from."", ""type"": ""int"", ""default"": ""1""}, ""limit"": {""description"": ""The maximum number of articles to retrieve. Defaults to 10."", ""type"": ""int, optional"", ""default"": ""10""}}}]"
461,58076,"Simulate a query on the 'products' table with conditions: {'price': {'$lt': 20}, 'category': 'electronics'}","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""products"", ""conditions"": [{""price"": {""$lt"": 20}, ""category"": ""electronics""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""geocode_city"", ""description"": ""Retrieves the latitude and longitude coordinates of a given city using the Maps.co Geocoding API."", ""parameters"": {""city"": {""description"": ""The name of the city."", ""type"": ""str""}}}, {""name"": ""place_safeway_order"", ""description"": ""Order specified items from a Safeway location."", ""parameters"": {""location"": {""description"": ""The location of the Safeway store, e.g., 'Palo Alto, CA'."", ""type"": ""str""}, ""items"": {""description"": ""List of items to order."", ""type"": ""list""}, ""quantity"": {""description"": ""Quantity of each item in the order list."", ""type"": ""list""}}}, {""name"": ""analyze_social_group_dynamics"", ""description"": ""Analyzes the social dynamics within a group based on the personality traits and group size."", ""parameters"": {""total"": {""description"": ""The total group size."", ""type"": ""int""}, ""extroverts"": {""description"": ""The number of extroverted members in the group."", ""type"": ""int""}, ""introverts"": {""description"": ""The number of introverted members in the group."", ""type"": ""int""}}}, {""name"": ""reserve_hotel_room"", ""description"": ""Reserves a hotel room with the specified details."", ""parameters"": {""room_type"": {""description"": ""The type of room to reserve."", ""type"": ""str""}, ""nightly_rate"": {""description"": ""The nightly rate for the room."", ""type"": ""float""}, ""checkin_date"": {""description"": ""The check-in date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""checkout_date"": {""description"": ""The check-out date in the format 'YYYY-MM-DD'."", ""type"": ""str""}, ""guest_id"": {""description"": ""The unique identifier for the guest."", ""type"": ""str""}, ""promo_code"": {""description"": ""A promotional code for a discount. Defaults to None."", ""type"": ""str, optional""}}}]"
462,58257,"Search for a product with the query 'smartphone' and action 'search' on the Tokopedia API, and get the posts of a creator with ID 11111 from the Patreon API.","[{""name"": ""search_product"", ""arguments"": {""query"": ""smartphone"", ""act"": ""search""}}, {""name"": ""posts"", ""arguments"": {""creator_id"": 11111}}]","[{""name"": ""get_call"", ""description"": ""Fetches the API result using the given request ID."", ""parameters"": {""request_id"": {""description"": ""The unique identifier for the API request."", ""type"": ""str"", ""default"": ""76d1c748-51ed-435b-bcd8-3d9c9d3eb68a""}}}, {""name"": ""search_product"", ""description"": ""This function searches for a product using the Tokopedia API based on the given query and act parameters."", ""parameters"": {""query"": {""description"": ""The search query string for the product to be searched."", ""type"": ""str"", ""default"": ""Celana Jeans""}, ""act"": {""description"": ""The action parameter to specify the type of search."", ""type"": ""str"", ""default"": ""search""}}}, {""name"": ""posts"", ""description"": ""Fetches posts of a creator from the Patreon API using the given parameters."", ""parameters"": {""creator_id"": {""description"": ""The ID of the creator whose posts are to be fetched."", ""type"": ""int"", ""default"": ""2416483""}, ""cursor"": {""description"": ""The cursor for pagination to the next page of results. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""amount"": {""description"": ""The number of posts to return. Defaults to 10. Maximum is 500."", ""type"": ""int, optional"", ""default"": ""10""}}}]"
463,58527,"Show me the reviews for the business identified by business_id '0x880fd393d427a591:0x8cba02d713a995ed' without the 'user' field, sorted by 'newest', and limit the results to 10. Additionally, can you query the expiry date for the vehicle with registration number 'JKL012'?","[{""name"": ""business_reviews"", ""arguments"": {""business_id"": ""0x880fd393d427a591:0x8cba02d713a995ed"", ""fields"": ""-user"", ""sort_by"": ""newest"", ""limit"": 10}}, {""name"": ""expiry_date_enquiry"", ""arguments"": {""rego"": ""JKL012""}}]","[{""name"": ""business_reviews"", ""description"": ""Fetches and paginates business reviews by Business ID."", ""parameters"": {""business_id"": {""description"": ""Unique Business ID. Accepts google_id, business_id, and google_place_id. Examples of valid ids: `0x880fd393d427a591:0x8cba02d713a995ed`, `ChIJkaUn1JPTD4gR7ZWpE9cCuow`."", ""type"": ""str"", ""default"": ""0x89c259b5a9bd152b:0x31453e62a3be9f76""}, ""language"": {""description"": ""Language code for the results. For a list of supported language codes see https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes. Default is 'en'."", ""type"": ""str, optional"", ""default"": ""en""}, ""fields"": {""description"": ""A comma-separated list of review fields to include in the response. Default is None, which returns all fields."", ""type"": ""str, optional"", ""default"": """"}, ""sort_by"": {""description"": ""Sort order for the reviews, allowed values are `most_relevant`, `newest`, `highest_ranking`, `lowest_ranking`. Default is 'most_relevant'."", ""type"": ""str, optional"", ""default"": """"}, ""region"": {""description"": ""Region or country code to query Google Maps from, see https://en.wikipedia.org/wiki/List_of_ISO_3166-1_alpha-2 (Alpha-2 code). Default is 'us'."", ""type"": ""str, optional"", ""default"": ""us""}, ""limit"": {""description"": ""Maximum number of business reviews to return (1-150). Default is 5."", ""type"": ""int, optional"", ""default"": ""5""}, ""offset"": {""description"": ""Number of business reviews to skip for pagination. Default is None."", ""type"": ""int, optional"", ""default"": """"}, ""query"": {""description"": ""Filter reviews matching a text query. Default is None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""expiry_date_enquiry"", ""description"": ""Queries the expiry date of a vehicle's license registration using the given registration number."", ""parameters"": {""rego"": {""description"": ""The vehicle's registration number."", ""type"": ""str"", ""default"": ""1HNT923""}}}, {""name"": ""tourism_allcountries"", ""description"": ""This function retrieves tourism locations and categories for a given country in Africa using the Toolbench RapidAPI."", ""parameters"": {""country_name"": {""description"": ""The name of the country in Africa for which to retrieve tourism information."", ""type"": ""str"", ""default"": ""all""}}}]"
464,58585,Autocomplete cities that match the query 'San' and get the JSON response containing matching locations.,"[{""name"": ""search_autocomplete_api"", ""arguments"": {""q"": ""San""}}]","[{""name"": ""stations"", ""description"": ""Retrieves a list of weather stations and their metadata, optionally filtered by parameters such as limit and states. If no parameters are provided, all stations are returned. The function only returns active stations."", ""parameters"": {""limit"": {""description"": ""Limit the number of results."", ""type"": ""int, optional"", ""default"": """"}, ""states"": {""description"": ""Filter results by states (by abbreviation)."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""nearest_place"", ""description"": ""Searches for the nearest named place (village, town, or city) from given GPS coordinates."", ""parameters"": {""lon"": {""description"": ""Longitude in formats like \""12E\"", \""12.3E\"", \""12.3\"", \""13W\"", \""13.2W\"", or \""-13.4\""."", ""type"": ""str"", ""default"": ""-122.42282""}, ""lat"": {""description"": ""Latitude in formats like \""12N\"", \""12.3N\"", \""12.3\"", \""13S\"", \""13.2S\"", or \""-13.4\""."", ""type"": ""str"", ""default"": ""37.81021""}, ""language"": {""description"": ""The language for the place names. Available options are:"", ""type"": ""str, optional"", ""default"": ""en""}}}, {""name"": ""search_autocomplete_api"", ""description"": ""Search or Autocomplete API returns matching cities and towns based on the query."", ""parameters"": {""q"": {""description"": ""Query parameter used to obtain matching locations. Supported formats include:"", ""type"": ""str"", ""default"": """"}}}]"
465,58672,"Simulate querying a database named 'orders' with conditions: [{'store_location': 'Chicago', 'order_size': 'small'}]. Place an order at a Whole Foods store located in Chicago for a small order of 'bell pepper', 'cucumber', and 'hummus'.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""orders"", ""conditions"": [{""store_location"": ""Chicago"", ""order_size"": ""small""}]}}, {""name"": ""whole_foods_order"", ""arguments"": {""store_location"": ""Chicago"", ""item_list"": [""bell pepper"", ""cucumber"", ""hummus""], ""order_size"": ""small""}}]","[{""name"": ""whole_foods_order"", ""description"": ""Places an order at Whole Foods."", ""parameters"": {""store_location"": {""description"": ""The location of the Whole Foods store."", ""type"": ""str""}, ""item_list"": {""description"": ""A list of items to order."", ""type"": ""list""}, ""order_size"": {""description"": ""The size of the order. Allowed values: \""small\"", \""medium\"", or \""large\""."", ""type"": ""str""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""calculate_calorie_intake"", ""description"": ""Calculates the recommended daily calorie intake and macronutrient distribution based on personal characteristics and goals."", ""parameters"": {""weight_kg"": {""description"": ""Body weight in kilograms."", ""type"": ""float""}, ""height_cm"": {""description"": ""Height in centimeters."", ""type"": ""float""}, ""age"": {""description"": ""Age in years."", ""type"": ""int""}, ""sex"": {""description"": ""Biological sex, either 'male' or 'female'."", ""type"": ""str""}, ""activity_level"": {""description"": ""Activity level on a scale of 1 to 5 (1 = sedentary, 5 = extremely active)."", ""type"": ""int""}, ""goal"": {""description"": ""Fitness goal, either 'lose', 'maintain', or 'gain'."", ""type"": ""str""}}}]"
466,58698,Get a riddle related to the keyword 'love' and generate a medium double name based on the query 'family' using the Toolbench RapidAPI service.,"[{""name"": ""riddle_by_keyword"", ""arguments"": {""keyword"": ""love""}}, {""name"": ""double_name_medium"", ""arguments"": {""query"": ""family""}}]","[{""name"": ""riddle_by_keyword"", ""description"": ""Fetches one random riddle based on a given keyword using the Toolbench RapidAPI service."", ""parameters"": {""keyword"": {""description"": ""The subject or keyword to get a riddle for."", ""type"": ""str"", ""default"": ""cat""}}}, {""name"": ""community_post_comments"", ""description"": ""Retrieves comments for a YouTube community post using the specified cursor token."", ""parameters"": {""cursor"": {""description"": ""A token used for pagination to fetch the next set of comments from the Community Post Details endpoint."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""double_name_medium"", ""description"": ""Generates a medium double name based on the provided query string."", ""parameters"": {""query"": {""description"": ""The query string for generating the double name. Maximum length is 50 characters."", ""type"": ""str"", ""default"": """"}}}]"
467,58830,"Search for videos with query 'sexy babes' and minimum quality '4K' on 'xvideos' site, and also fetch a mlem image with ID 67890. Perform these operations independently and in parallel.","[{""name"": ""video_search"", ""arguments"": {""query"": ""sexy babes"", ""site"": ""xvideos"", ""quality"": ""4K""}}, {""name"": ""mlem_id"", ""arguments"": {""mlemid"": 67890}}]","[{""name"": ""get_live_streams_livestreamid"", ""description"": ""Retrieves live stream details using the given livestream ID from the RapidAPI service."", ""parameters"": {""livestreamid"": {""description"": ""The ID of the live stream to fetch details for."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""mlem_id"", ""description"": ""Fetches a mlem image by its ID in JSON format using the Mlem API."", ""parameters"": {""mlemid"": {""description"": ""The ID of the mlem image to fetch."", ""type"": ""int"", ""default"": """"}}}, {""name"": ""gen_image"", ""description"": ""Generates an image based on specified parameters by making a request to the Thai Lottery Result Image API."", ""parameters"": {""date"": {""description"": ""The date for which to generate the image. Defaults to '01062564'."", ""type"": ""str"", ""default"": ""01062564""}, ""bgimg"": {""description"": ""The background image to use. Optional."", ""type"": ""str"", ""default"": """"}, ""rmber"": {""description"": ""A flag indicating whether certain elements (like numbers) should be removed. Optional."", ""type"": ""bool"", ""default"": ""1""}}}, {""name"": ""video_search"", ""description"": ""Search for videos based on the specified criteria and return the list of matching videos."", ""parameters"": {""query"": {""description"": ""The search term to be used for finding videos."", ""type"": ""str"", ""default"": ""amateur""}, ""site"": {""description"": ""The specific site to search for videos. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""timeout"": {""description"": ""Timeout duration in milliseconds for the request. Defaults to 5000."", ""type"": ""int, optional"", ""default"": ""5000""}, ""page"": {""description"": ""The page number for pagination. Defaults to 1."", ""type"": ""int, optional"", ""default"": ""1""}, ""filter"": {""description"": ""Filter criteria for the search results. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}, ""quality"": {""description"": ""Minimum quality of the videos to be searched. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}]"
468,58882,"Get the city name for the ZIP code 11223 and simulate querying a database named 'sales' with conditions: [{'region': 'Northeast'}, {'quantity': {'$gt': 50}}].","[{""name"": ""get_city_from_zipcode"", ""arguments"": {""zipcode"": ""11223""}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""sales"", ""conditions"": [{""region"": ""Northeast""}, {""quantity"": {""$gt"": 50}}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""get_city_from_zipcode"", ""description"": ""Retrieves the city name for a given ZIP code using the Ziptastic API."", ""parameters"": {""zipcode"": {""description"": ""The ZIP code to look up."", ""type"": ""str""}}}]"
469,58954,Find information about a politician with the goverlytics_id '01012022000004' and perform a search query on Vivanews for the keyword 'education' on page 5.,"[{""name"": ""politician_goverlytics_id"", ""arguments"": {""goverlytics_id"": ""01012022000004""}}, {""name"": ""vivanews_search"", ""arguments"": {""page"": 5, ""keyword"": ""education""}}]","[{""name"": ""history"", ""description"": ""Fetches the number of articles published daily during the last week and the corresponding news agencies that created those articles, optionally filtering by specific terms."", ""parameters"": {""terms"": {""description"": ""Narrows down results to articles that contain the provided keywords. The terms should consist of one to three words separated by a dash, e.g., `election-campaign`. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""vivanews_search"", ""description"": ""Performs a search query on Vivanews through the RapidAPI endpoint."", ""parameters"": {""page"": {""description"": ""The page number to retrieve results from."", ""type"": ""int"", ""default"": ""1""}, ""keyword"": {""description"": ""The search keyword to query."", ""type"": ""str"", ""default"": ""banjir""}}}, {""name"": ""politician_goverlytics_id"", ""description"": ""Retrieves information about a politician by their 'goverlytics_id' from the Goverlytics API."", ""parameters"": {""goverlytics_id"": {""description"": ""The unique identifier for a politician in the Goverlytics system."", ""type"": ""str"", ""default"": ""437c7e15-c66a-4b46-af9b-07e9b1317190""}}}]"
470,59084,What information do you get about an artist when you query their details using the Shazam ID '1080558' and specify the language as 'fr-FR'?,"[{""name"": ""artists_get_details"", ""arguments"": {""is_id"": ""1080558"", ""l"": ""fr-FR""}}]","[{""name"": ""artists_get_details"", ""description"": ""Retrieve detailed information about an artist using the Shazam API."", ""parameters"": {""is_id"": {""description"": ""The unique identifier of the artist. This value can be obtained from various Shazam API endpoints, such as 'artist->adamid' from /search, /songs/v2/detect, or /songs/get-details, or 'artists->id' from /shazam-songs/get-details, /albums/get-details, or /albums/get-related-artist."", ""type"": ""str"", ""default"": ""567072""}, ""l"": {""description"": ""The language code for the response. Defaults to 'en-US'."", ""type"": ""str, optional"", ""default"": ""en-US""}}}]"
471,59361,Simulate querying a database table named 'customer_orders' with the condition that the order_id is equal to 1001,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""customer_orders"", ""conditions"": [{""order_id"": 1001}]}}]","[{""name"": ""calculate_order_total"", ""description"": ""Calculates the total cost of an order based on the items, quantities, and prices."", ""parameters"": {""items"": {""description"": ""A list of item names."", ""type"": ""List[str]""}, ""quantities"": {""description"": ""A list of corresponding quantities for each item."", ""type"": ""List[int]""}, ""prices"": {""description"": ""A list of corresponding prices for each item."", ""type"": ""List[float]""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}]"
472,59382,"Perform a people search with a count of 1 for the query 'Elon Musk' on Twitter, and get the JSON response if possible, otherwise get the raw text response. Then, get the next set of results with a cursor.","[{""name"": ""search_twitter"", ""arguments"": {""type"": ""People"", ""count"": 1, ""query"": ""Elon Musk""}}, {""name"": ""search_twitter"", ""arguments"": {""type"": ""People"", ""count"": 1, ""query"": ""Elon Musk"", ""cursor"": ""<valid_cursor_value>""}}]","[{""name"": ""search_twitter"", ""description"": ""Search Twitter based on the specified type, count, and query criteria, with optional cursor for pagination and API key for authorization."", ""parameters"": {""type"": {""description"": ""The type of search to perform (Top, Latest, Videos, Photos, or People)."", ""type"": ""str"", ""default"": ""Top""}, ""count"": {""description"": ""The number of search results to return."", ""type"": ""str"", ""default"": ""20""}, ""query"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": ""Mr Beast""}, ""cursor"": {""description"": ""The cursor for pagination to fetch the next set of results. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}]"
473,59412,"Simulate querying a database for users who are from 'New York, NY' and older than 30, and then for products that are in stock and have a price less than 50.","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""location"": ""New York, NY"", ""age"": {""$gt"": 30}}]}}, {""name"": ""simulate_query_database"", ""arguments"": {""table"": ""products"", ""conditions"": [{""in_stock"": true, ""price"": {""$lt"": 50}}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""geocode_city"", ""description"": ""Retrieves the latitude and longitude coordinates of a given city using the Maps.co Geocoding API."", ""parameters"": {""city"": {""description"": ""The name of the city."", ""type"": ""str""}}}, {""name"": ""project_investment_growth"", ""description"": ""Projects the growth of an investment over a specified number of years."", ""parameters"": {""principal"": {""description"": ""The initial investment amount."", ""type"": ""float"", ""default"": true}, ""annual_addition"": {""description"": ""The amount added to the investment annually."", ""type"": ""float"", ""default"": true}, ""years"": {""description"": ""The number of years to project the investment growth."", ""type"": ""int""}, ""return_rate"": {""description"": ""The annual return rate as a decimal (e.g., 0.07 for 7%)."", ""type"": ""float""}, ""inflation"": {""description"": ""A list of annual inflation rates as decimals."", ""type"": ""List[float]""}, ""inflation_adjusted"": {""description"": ""Whether to adjust the final value for inflation. Defaults to True."", ""type"": ""bool, optional""}}}, {""name"": ""place_safeway_order"", ""description"": ""Order specified items from a Safeway location."", ""parameters"": {""location"": {""description"": ""The location of the Safeway store, e.g., 'Palo Alto, CA'."", ""type"": ""str""}, ""items"": {""description"": ""List of items to order."", ""type"": ""list""}, ""quantity"": {""description"": ""Quantity of each item in the order list."", ""type"": ""list""}}}]"
474,59428,Find relevant links for the query 'machine learning' and return the JSON response.,"[{""name"": ""links_finder"", ""arguments"": {""query"": ""machine learning""}}]","[{""name"": ""web_search"", ""description"": ""Performs a web search using the specified query and optional parameters."", ""parameters"": {""query"": {""description"": ""The search query to be executed. Examples include 'ronaldo site:instagram.com', 'twitter filetype:pdf', and 'inurl:market'."", ""type"": ""str"", ""default"": ""Leo Messi""}, ""related_keywords"": {""description"": ""If specified, includes related keywords in the search results. This may increase API latency. Default is None."", ""type"": ""str, optional"", ""default"": """"}, ""limit"": {""description"": ""The maximum number of search results to return. The maximum recommended value is 300. Default is 10."", ""type"": ""int, optional"", ""default"": ""10""}}}, {""name"": ""pagesjaunes"", ""description"": ""This function extracts data from the \""Pages Jaunes\"" (Yellow Pages) for a given location and keyword."", ""parameters"": {""pjpage"": {""description"": ""The page number to retrieve."", ""type"": ""int"", ""default"": ""1""}, ""pjlocation"": {""description"": ""The location to search within \""Pages Jaunes\""."", ""type"": ""str"", ""default"": ""Paris""}, ""pjkeyword"": {""description"": ""The keyword to search for in \""Pages Jaunes\""."", ""type"": ""str"", ""default"": ""Restaurant""}}}, {""name"": ""vin_decoder_basic"", ""description"": ""Decodes basic information from a Vehicle Identification Number (VIN) using the RapidAPI VIN decoder service."", ""parameters"": {""vin"": {""description"": ""The Vehicle Identification Number (VIN) to be decoded. Must be 17 characters long."", ""type"": ""str"", ""default"": ""5YJ3E1EA6PF384836""}}}, {""name"": ""links_finder"", ""description"": ""Fetches relevant links based on a given query using the ExplorArc's Link Finder API."", ""parameters"": {""query"": {""description"": ""The search query to find relevant links. Defaults to 'roadmap'."", ""type"": ""str"", ""default"": ""roadmap""}}}]"
475,59432,Simulate a database query to find all students in the 'Students' table who have a GPA greater than 3.5 and are majoring in Computer Science.,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""Students"", ""conditions"": [{""GPA"": {""$gt"": 3.5}}, {""major"": ""Computer Science""}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""geocode_city"", ""description"": ""Retrieves the latitude and longitude coordinates of a given city using the Maps.co Geocoding API."", ""parameters"": {""city"": {""description"": ""The name of the city."", ""type"": ""str""}}}, {""name"": ""project_investment_growth"", ""description"": ""Projects the growth of an investment over a specified number of years."", ""parameters"": {""principal"": {""description"": ""The initial investment amount."", ""type"": ""float"", ""default"": true}, ""annual_addition"": {""description"": ""The amount added to the investment annually."", ""type"": ""float"", ""default"": true}, ""years"": {""description"": ""The number of years to project the investment growth."", ""type"": ""int""}, ""return_rate"": {""description"": ""The annual return rate as a decimal (e.g., 0.07 for 7%)."", ""type"": ""float""}, ""inflation"": {""description"": ""A list of annual inflation rates as decimals."", ""type"": ""List[float]""}, ""inflation_adjusted"": {""description"": ""Whether to adjust the final value for inflation. Defaults to True."", ""type"": ""bool, optional""}}}, {""name"": ""place_safeway_order"", ""description"": ""Order specified items from a Safeway location."", ""parameters"": {""location"": {""description"": ""The location of the Safeway store, e.g., 'Palo Alto, CA'."", ""type"": ""str""}, ""items"": {""description"": ""List of items to order."", ""type"": ""list""}, ""quantity"": {""description"": ""Quantity of each item in the order list."", ""type"": ""list""}}}]"
476,59613,Perform a content search for 'example query' and check if 'https://example.com' is a known phishing URL.,"[{""name"": ""search_content"", ""arguments"": {""query"": ""example query""}}, {""name"": ""check_a_url"", ""arguments"": {""url"": ""https://example.com""}}]","[{""name"": ""ec"", ""description"": ""Analyzes a given password based on a variety of parameters and returns the analysis."", ""parameters"": {""password"": {""description"": ""The password to be analyzed. It must be between 4 and 128 characters long."", ""type"": ""str"", ""default"": """"}, ""penalty"": {""description"": ""The penalty applied to each character that is part of a word, number sequence, alphabet sequence, etc. The penalty is a float number in the range [0, 1], with a default value of 0.25."", ""type"": ""int, optional"", ""default"": """"}, ""outputformat"": {""description"": ""The format of the returned analysis. Allowed values are 'json', 'xml', and 'yaml'. The default value is 'xml'."", ""type"": ""str, optional"", ""default"": """"}, ""reqid"": {""description"": ""An identifier for this request. This string must match the regular expression `^(?i)[a-z0-9]{8,16}$`. If not provided, a randomly generated identifier will be assigned."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""convert_hex"", ""description"": ""Converts a hex color code to other color formats such as RGB, HSL, and CMYK using the Convexity API."", ""parameters"": {""hex"": {""description"": ""The hex color code to be converted."", ""type"": ""str"", ""default"": ""ffffff""}}}, {""name"": ""search_content"", ""description"": ""Searches for content based on a provided query using the RapidAPI content extractor."", ""parameters"": {""query"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""check_a_url"", ""description"": ""Check if the provided URL is a known phishing or scam attempt using the FraudFreeze API."", ""parameters"": {""url"": {""description"": ""The URL to be checked for phishing or scam activities."", ""type"": ""str"", ""default"": ""google.com""}}}]"
477,59800,Search for tracks and users with the query 'rapidapi' on SoundCloud.,"[{""name"": ""search"", ""arguments"": {""type"": ""track"", ""query"": ""rapidapi""}}, {""name"": ""search"", ""arguments"": {""type"": ""user"", ""query"": ""rapidapi""}}]","[{""name"": ""get_quotes_by_source"", ""description"": ""Fetches quotes from a given source using the Quotes API on RapidAPI."", ""parameters"": {""source"": {""description"": ""The source from which to fetch quotes."", ""type"": ""str"", ""default"": """"}}}, {""name"": ""search"", ""description"": ""Searches SoundCloud for tracks, users, or playlists based on the provided query."", ""parameters"": {""type"": {""description"": ""The type of search to be performed. Possible values are \""track\"", \""user\"", \""playlist\"", and \""all\""."", ""type"": ""str"", ""default"": ""all""}, ""query"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": ""almost lover""}}}, {""name"": ""generate_shield"", ""description"": ""Generates a shield using the Shields API and returns the response."", ""parameters"": {""name"": {""description"": ""The name parameter to be included in the query string. Defaults to 'google'."", ""type"": ""str"", ""default"": ""google""}}}, {""name"": ""trending_tags_from_country"", ""description"": ""Fetches trending tags from a specified country using the Hashtag5 API."", ""parameters"": {""country_name"": {""description"": ""The name of the country for which to fetch trending tags."", ""type"": ""str"", ""default"": ""United States""}}}]"
478,59861,Perform a search query on Vivanews for the keyword 'healthcare' on page 4 and get the number of articles and news agencies for the last week with the term 'wellness'.,"[{""name"": ""vivanews_search"", ""arguments"": {""page"": 4, ""keyword"": ""healthcare""}}, {""name"": ""history"", ""arguments"": {""terms"": ""wellness""}}]","[{""name"": ""history"", ""description"": ""Fetches the number of articles published daily during the last week and the corresponding news agencies that created those articles, optionally filtering by specific terms."", ""parameters"": {""terms"": {""description"": ""Narrows down results to articles that contain the provided keywords. The terms should consist of one to three words separated by a dash, e.g., `election-campaign`. Defaults to None."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""vivanews_search"", ""description"": ""Performs a search query on Vivanews through the RapidAPI endpoint."", ""parameters"": {""page"": {""description"": ""The page number to retrieve results from."", ""type"": ""int"", ""default"": ""1""}, ""keyword"": {""description"": ""The search keyword to query."", ""type"": ""str"", ""default"": ""banjir""}}}, {""name"": ""politician_goverlytics_id"", ""description"": ""Retrieves information about a politician by their 'goverlytics_id' from the Goverlytics API."", ""parameters"": {""goverlytics_id"": {""description"": ""The unique identifier for a politician in the Goverlytics system."", ""type"": ""str"", ""default"": ""437c7e15-c66a-4b46-af9b-07e9b1317190""}}}]"
479,59931,Simulate querying the users table for users who are from the US and registered in the year 2020,"[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""country"": ""US""}, {""year"": 2020}]}}]","[{""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_leap_year"", ""description"": ""Checks if a year is a leap year."", ""parameters"": {""year"": {""description"": ""The year to check."", ""type"": ""int""}}}, {""name"": ""get_ip_location"", ""description"": ""Retrieves the latitude and longitude coordinates of a given IP address using the ip-api.com API."", ""parameters"": {""ip"": {""description"": ""The IP address to locate."", ""type"": ""str""}}}]"
480,59944,Perform a search query using the SEO API on a secondary search engine for the keyword 'machine learning'.,"[{""name"": ""search_b"", ""arguments"": {""query"": ""machine learning""}}]","[{""name"": ""google_images"", ""description"": ""Fetches JSON data of image results from Google Images based on a query and various optional parameters."", ""parameters"": {""query"": {""description"": ""The search query for the images."", ""type"": ""str"", ""default"": ""football""}, ""gl"": {""description"": ""The country to use for the search. Defaults to 'us'."", ""type"": ""str, optional"", ""default"": ""us""}, ""hl"": {""description"": ""The language to use for the search. Defaults to 'en_us'."", ""type"": ""str, optional"", ""default"": ""en_us""}, ""duration"": {""description"": ""The time duration for the search (e.g., 'd' for day, 'w' for week)."", ""type"": ""str, optional"", ""default"": """"}, ""chips"": {""description"": ""Additional search filters."", ""type"": ""str, optional"", ""default"": """"}, ""lr"": {""description"": ""The language restriction for the search."", ""type"": ""str, optional"", ""default"": """"}, ""ijn"": {""description"": ""Index of the search results page. Defaults to '0'."", ""type"": ""str, optional"", ""default"": ""0""}, ""html"": {""description"": ""If True, returns HTML content."", ""type"": ""str, optional"", ""default"": """"}, ""uule"": {""description"": ""Encoded location parameters."", ""type"": ""str, optional"", ""default"": """"}, ""device"": {""description"": ""The device to use for the search (e.g., 'desktop', 'mobile'). Defaults to 'desktop'."", ""type"": ""str, optional"", ""default"": ""desktop""}, ""safe"": {""description"": ""Safe search setting."", ""type"": ""str, optional"", ""default"": """"}, ""nfpr"": {""description"": ""Filter option for non-personal results."", ""type"": ""str, optional"", ""default"": """"}, ""tbs"": {""description"": ""Additional search parameters."", ""type"": ""str, optional"", ""default"": """"}}}, {""name"": ""search"", ""description"": ""Search for iOS applications using the provided parameters."", ""parameters"": {""country"": {""description"": ""The country code for the search (e.g., 'us' for the United States)."", ""type"": ""str"", ""default"": ""us""}, ""search"": {""description"": ""The search term to query iOS applications."", ""type"": ""str"", ""default"": ""angry birds""}, ""page"": {""description"": ""The page number of the search results."", ""type"": ""str"", ""default"": ""1""}, ""limit"": {""description"": ""The number of search results to return per page."", ""type"": ""str"", ""default"": ""50""}}}, {""name"": ""geogrid_seach_with_ranking"", ""description"": ""Perform a full grid search and retrieve the ranking of a business at every coordinate point in the grid. The grid cells in the results are ordered left-to-right, then top-to-bottom. Additional ranking data for the business is provided based on either place ID or business name."", ""parameters"": {""match_value"": {""description"": ""The search query or keyword."", ""type"": ""str"", ""default"": ""ChIJoejvAr3Mj4ARtHrbKxtAHXI""}, ""query"": {""description"": ""The Google Place ID of the business or the business name to match in results. Use the `match_type` parameter to specify the choice."", ""type"": ""str"", ""default"": ""web design""}, ""lng"": {""description"": ""Longitude value of the grid center coordinate point."", ""type"": ""int"", ""default"": ""-121.938314""}, ""lat"": {""description"": ""Latitude value of the grid center coordinate point."", ""type"": ""int"", ""default"": ""37.341759""}, ""zoom"": {""description"": ""Google Maps zoom level to use for searching each grid point. Default is 13."", ""type"": ""int, optional"", ""default"": ""13""}, ""match_type"": {""description"": ""The type of match to perform for ranking. Either 'place_id' or 'name'. Default is 'place_id'."", ""type"": ""str, optional"", ""default"": ""place_id""}, ""distance_unit"": {""description"": ""The unit of measurement for distance. Default is 'km'."", ""type"": ""str, optional"", ""default"": ""km""}, ""width"": {""description"": ""The width of the grid in location points for non-square grid searches. Default is 5."", ""type"": ""int, optional"", ""default"": ""5""}, ""height"": {""description"": ""The height of the grid in location points for non-square grid searches. Default is 5."", ""type"": ""int, optional"", ""default"": ""5""}, ""grid_size"": {""description"": ""The size of the grid (e.g., 3x3, 5x5). Default is 5."", ""type"": ""int, optional"", ""default"": ""5""}, ""distance"": {""description"": ""The distance between coordinate points on the same row/column in the grid. Default is 1."", ""type"": ""int, optional"", ""default"": ""1""}}}, {""name"": ""search_b"", ""description"": ""Performs a search query using the SEO API on a secondary search engine."", ""parameters"": {""query"": {""description"": ""The search query string."", ""type"": ""str"", ""default"": ""q=coffee+shop""}}}]"
481,59967,"Simulate querying a 'users' table with the following conditions: [{'age': 25}, {'country': 'US'}, {'is_premium': True}]","[{""name"": ""simulate_query_database"", ""arguments"": {""table"": ""users"", ""conditions"": [{""age"": 25}, {""country"": ""US""}, {""is_premium"": true}]}}]","[{""name"": ""analyze_social_group_dynamics"", ""description"": ""Analyzes the social dynamics within a group based on the personality traits and group size."", ""parameters"": {""total"": {""description"": ""The total group size."", ""type"": ""int""}, ""extroverts"": {""description"": ""The number of extroverted members in the group."", ""type"": ""int""}, ""introverts"": {""description"": ""The number of introverted members in the group."", ""type"": ""int""}}}, {""name"": ""structural_analysis"", ""description"": ""Performs structural analysis on a building based on its ID, floor numbers, and analysis mode."", ""parameters"": {""building_id"": {""description"": ""The unique identifier of the building."", ""type"": ""str"", ""default"": ""static""}, ""floor_numbers"": {""description"": ""The list of floor numbers to be analyzed."", ""type"": ""List[int]"", ""default"": ""static""}, ""analysis_mode"": {""description"": ""The mode of analysis, either \""static\"" or \""dynamic\"". Defaults to \""static\""."", ""type"": ""str, optional""}}}, {""name"": ""simulate_query_database"", ""description"": ""Simulates querying a database based on certain conditions."", ""parameters"": {""table"": {""description"": ""Name of the table to query."", ""type"": ""str""}, ""conditions"": {""description"": ""Conditions for the query, each condition is a dictionary."", ""type"": ""list""}}}, {""name"": ""is_valid_ip_address"", ""description"": ""Checks if a string is a valid IP address (IPv4)."", ""parameters"": {""ip"": {""description"": ""The string to check."", ""type"": ""str""}}}]"
